.. _get_table_dict-name:

!!!!!!!!!!!!!!
get_table_dict
!!!!!!!!!!!!!!

xrst input file: ``python/dismod_at/get_table_dict.py``

.. meta::
   :keywords: get_table_dict, get, all, data, from, a, table

.. index:: get_table_dict, get, all, data, from, a, table

.. _get_table_dict-title:

Get All Data From a Table
#########################

.. meta::
   :keywords: syntax

.. index:: syntax

.. _get_table_dict@Syntax:

Syntax
******
*table_dict* = ``dismod_at.get_table_dict`` ( *connection* , *tbl_name* )

.. meta::
   :keywords: connection

.. index:: connection

.. _get_table_dict@connection:

connection
**********
is a :ref:`create_connection@connection` for this database.

.. meta::
   :keywords: tbl_name

.. index:: tbl_name

.. _get_table_dict@tbl_name:

tbl_name
********
is a ``str`` that specifies the name of the table.
We use the notation *n_row* for the number of rows in
the table.

.. meta::
   :keywords: table_dict

.. index:: table_dict

.. _get_table_dict@table_dict:

table_dict
**********
This is a list, with length *n_row* , where each element
of the list is a dictionary.
For each dictionaries, the set of keys is the column names in the table
(excluding the primary key *tbl_name* _ ``id`` ).
The value *table_dict* [ *i* ][ *col_name* ] corresponds to
and the column with name *col_name* and primary key
*tbl_name* _ ``id`` = *i* .
The python type corresponding to the values in the table are
as follows:

.. csv-table::
    :widths: auto

    Sql Table,Python
    ``integer``,``int``
    ``real``,``float``
    ``text``,``str``
    ``null``,``None``

You can determine the type for all the columns in the table using
:ref:`get_name_type-name` .

.. meta::
   :keywords: example

.. index:: example

.. _get_table_dict@Example:

Example
*******
The file :ref:`get_table_dict.py-name` is an example use of
``get_table_dict`` .

.. toctree::
   :maxdepth: 1
   :hidden:

   get_table_dict.py
