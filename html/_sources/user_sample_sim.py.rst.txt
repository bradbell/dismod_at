.. _user_sample_sim.py-name:

!!!!!!!!!!!!!!!!!!
user_sample_sim.py
!!!!!!!!!!!!!!!!!!

xrst input file: ``example/user/sample_sim.py``

.. meta::
   :keywords: user_sample_sim.py, sample, posterior, using, simulated, data

.. index:: user_sample_sim.py, sample, posterior, using, simulated, data

.. _user_sample_sim.py-title:

Sample Posterior Using Simulated Data
#####################################

.. meta::
   :keywords: purpose

.. index:: purpose

.. _user_sample_sim.py@Purpose:

Purpose
*******
The command

    ``dismod_at`` *database* ``sample simulate`` *number_sample*

samples form the posterior distribution of the :ref:`model_variables-name`
using simulated data.

.. meta::
   :keywords: node, table

.. index:: node, table

.. _user_sample_sim.py@Node Table:

Node Table
**********
For this example, the :ref:`node_table-name` is
::

            north_america
            /          \
         mexico      canada

.. meta::
   :keywords: model, variables

.. index:: model, variables

.. _user_sample_sim.py@Model Variables:

Model Variables
***************
All of the rates are constant w.r.t. age an time in this example.

.. meta::
   :keywords: iota

.. index:: iota

.. _user_sample_sim.py@Model Variables@iota:

iota
====
We use :math:`\iota_n` to denote the incidence rate for
the parent region north_america which is a
:ref:`fixed effect<model_variables@Fixed Effects, theta>` .

.. meta::
   :keywords: u

.. index:: u

.. _user_sample_sim.py@Model Variables@u:

u
=
We use :math:`u_m` (:math:`u_c`) to denote the
:ref:`child rate effect<model_variables@Random Effects, u@Child Rate Effects>`
for mexico (canada).

.. meta::
   :keywords: x

.. index:: x

.. _user_sample_sim.py@Model Variables@x:

x
=
The model variables for this example are combined into a single vector
:math:`x \in \B{R}^3` where
:math:`x_0 = \iota_n`,
:math:`x_1 = u_m`, and
:math:`x_2 = u_c`.

.. meta::
   :keywords: model, parameters

.. index:: model, parameters

.. _user_sample_sim.py@Model Parameters:

Model Parameters
****************

.. meta::
   :keywords: y

.. index:: y

.. _user_sample_sim.py@Model Parameters@y:

y
=
We use :math:`y_n, y_m, y_c` to denote the measured
:ref:`avg_integrand@Integrand, I_i(a,t)@Sincidence`
for north_america, mexico, and canada respectively.

.. meta::
   :keywords: s

.. index:: s

.. _user_sample_sim.py@Model Parameters@s:

s
=
We use :math:`s_n, s_m, s_c` to denote the
standard deviation of the measured noise
for north_america, mexico, and canada respectively.

.. meta::
   :keywords: delta

.. index:: delta

.. _user_sample_sim.py@Model Parameters@delta:

delta
=====
We use :math:`\delta` to denote the standard deviation of
the child rate effects.
(The mean for the child rate effects is zero.)

.. meta::
   :keywords: values

.. index:: values

.. _user_sample_sim.py@Model Parameters@Values:

Values
======

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 82-89
   :language: py

.. meta::
   :keywords: likelihood

.. index:: likelihood

.. _user_sample_sim.py@Likelihood:

Likelihood
**********
We define :math:`h(y, \mu , \sigma)`
to be the log-density for a :math:`\B{N}( \mu, \sigma^2 )` distribution;
i.e.,

.. math::

 h(y, \mu, \sigma) =
    - \frac{ ( y - \mu )^2 }{ \sigma^2 }
    - \log \left( \sigma \sqrt{ 2 \pi } \right)

The total log-likelihood for this example is

.. math::

 h( y_n, \iota_n, s_n ] +
 h[ y_m, \exp( u_m ) \iota_n, s_m ] +
 h[ y_c, \exp( u_c ) \iota_n, s_c ] +
 h( u_m, 0, \delta ) + h( u_c , 0 , \delta )

.. meta::
   :keywords: number_sample

.. index:: number_sample

.. _user_sample_sim.py@number_sample:

number_sample
*************
This is the number of samples in the
:ref:`sample_command@number_sample`
specified by the sample command.

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 121-121
   :language: py

.. meta::
   :keywords: number_metropolis

.. index:: number_metropolis

.. _user_sample_sim.py@number_metropolis:

number_metropolis
*****************
This is the number of mcmc samples generated by the
:ref:`metropolis-name` mcmc method.
These samples are used to check the simulate method.

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 132-132
   :language: py

.. meta::
   :keywords: truth, table

.. index:: truth, table

.. _user_sample_sim.py@Truth Table:

Truth Table
***********
For the data simulation, we use the following model variable values:

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 141-143
   :language: py

It follows that *y_m* = ``exp`` ( *u_m_true* ) * *iota_n_true* and
*y_c* = ``exp`` ( *u_c_true* ) * *iota_n_true* .

.. meta::
   :keywords: random_seed

.. index:: random_seed

.. _user_sample_sim.py@random_seed:

random_seed
***********
Set one random seed for use by both the python code and dismod_at.
In addition, if an error occurs, this random seed will be reported; see
``random_seed`` in the source code below.

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 156-157
   :language: py

.. meta::
   :keywords: source, code

.. index:: source, code

.. _user_sample_sim.py@Source Code:

Source Code
***********

.. literalinclude:: ../../example/user/sample_sim.py
   :lines: 171-469
   :language: py
