.. _user_jump_at_age.py-name:

!!!!!!!!!!!!!!!!!!!
user_jump_at_age.py
!!!!!!!!!!!!!!!!!!!

xrst input file: ``example/user/jump_at_age.py``

.. meta::
   :keywords: user_jump_at_age.py, zero, rate, until, a, jump, at, a, known, age

.. index:: user_jump_at_age.py, zero, rate, until, a, jump, at, a, known, age

.. _user_jump_at_age.py-title:

Zero Rate Until a Jump at a Known Age
#####################################

.. meta::
   :keywords: purpose

.. index:: purpose

.. _user_jump_at_age.py@Purpose:

Purpose
*******
Usually the prior for the rate is smooth.
This requires lots of data, at a fine age spacing,
to resolve a jump in a rate at an unknown age.
If the age at which a jump occurs is known, it is possible to resolve
the jump with much less data by specifying a prior that has this knowledge.

.. meta::
   :keywords: parameters

.. index:: parameters

.. _user_jump_at_age.py@Parameters:

Parameters
**********
The following values are used to simulate the data and define the priors
and can be changed:

.. literalinclude:: ../../example/user/jump_at_age.py
   :lines: 25-29
   :language: py

.. meta::
   :keywords: iota_near_zero

.. index:: iota_near_zero

.. _user_jump_at_age.py@Parameters@iota_near_zero:

iota_near_zero
==============
This is the true value of *iota* up to and including age 20.
Note that it is close to zero, but not equal to zero, so that we can
use the rate case
:ref:`option_table@rate_case@iota_pos_rho_zero` .

.. meta::
   :keywords: iota_after_20

.. index:: iota_after_20

.. _user_jump_at_age.py@Parameters@iota_after_20:

iota_after_20
=============
This is the true value of *iota* for ages greater than 20.

.. meta::
   :keywords: iota_eta

.. index:: iota_eta

.. _user_jump_at_age.py@Parameters@iota_eta:

iota_eta
========
Offset in log transformation used for values of eta.

.. meta::
   :keywords: age_table

.. index:: age_table

.. _user_jump_at_age.py@Parameters@age_table:

age_table
=========
The :ref:`age_table-name` does not need to be monotone increasing.
For this example, it is the same as the table of ages at which
*iota* is modeled .
You can changed the order of ``age_table``
and it will not affect the results.

.. meta::
   :keywords: time_table

.. index:: time_table

.. _user_jump_at_age.py@Parameters@time_table:

time_table
==========
The :ref:`time_table-name` does not need to be monotone increasing.
You can changed the order of ``time_table``
and it will not affect the results.

.. meta::
   :keywords: model, variables

.. index:: model, variables

.. _user_jump_at_age.py@Model Variables:

Model Variables
***************
This example's variables are all
:ref:`model_variables@Fixed Effects, theta@Parent Rates`
for :ref:`rate_table@rate_name@iota` .
The value of *iota* is modeled at each age in the ``age_table`` .
The prior for the value of *iota* up to age 20 is a constant equal to
``iota_near_zero`` .
After age 20 it is uniform with lower limit ``iota_near_zero`` ,
upper limit 1 and mean ``iota_after_20 / 4.0``
(The mean is only used for the initial value and scaling the optimization.)
The prior for the forward age differences in *iota* at age 20
is uniform, and above age 20 it is a Log-Gaussian with mean 0 and
standard deviation 0.1 (about 10 percent coefficient of variation).

.. meta::
   :keywords: truth

.. index:: truth

.. _user_jump_at_age.py@Truth:

Truth
*****
For this example the rate *iota* is constant
with value ``iota_near_zero`` for ages less than or equal 20,
and ``iota_after_20`` for ages greater than 20.

.. meta::
   :keywords: simulated, data

.. index:: simulated, data

.. _user_jump_at_age.py@Simulated Data:

Simulated Data
**************
For this example, the simulated data is all
:ref:`avg_integrand@Integrand, I_i(a,t)@Sincidence` ; i.e.
direct measurements of the value of *iota* .
There is no noise simulated with the data; i.e., it is equal to the
'true' value of *iota* .
On the other hand, its is modeled as if there is a 10% coefficient
of variation in the data; i.e., as if there were measurement noise with
standard deviation equal to 10% of the measurement value.
There is a measured value for each age in the ``age_table``
that is greater than 20.

.. meta::
   :keywords: source, code

.. index:: source, code

.. _user_jump_at_age.py@Source Code:

Source Code
***********

.. literalinclude:: ../../example/user/jump_at_age.py
   :lines: 106-326
   :language: py
