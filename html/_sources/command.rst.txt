.. _command-name:

!!!!!!!
command
!!!!!!!

xrst input file: ``devel/cmd/command.xrst``

.. meta::
   :keywords: command, the, dismod_at, commands

.. index:: command, the, dismod_at, commands

.. _command-title:

The dismod_at Commands
######################

.. meta::
   :keywords: data, flow

.. index:: data, flow

.. _command@Data Flow:

Data Flow
*********
Each command as a set of
:ref:`extra input tables<data_flow@Command Extra Input Tables>` and
:ref:`output tables<data_flow@Command Output Tables>` .

.. meta::
   :keywords: log, messages

.. index:: log, messages

.. _command@Log Messages:

Log Messages
************
Each command also has two messages with message_type
:ref:`log_table@message_type@command` in the log table.
The first one is a ``begin`` message and includes the command arguments.
The second is an ``end`` message and signifies that the command completed.

.. meta::
   :keywords: commands

.. index:: commands

.. _command@Commands:

Commands
********

.. csv-table::
   :widths: auto

   bnd_mulcov_command,:ref:`bnd_mulcov_command-title`
   csv2db_command,:ref:`csv2db_command-title`
   data_density_command,:ref:`data_density_command-title`
   db2csv_command,:ref:`db2csv_command-title`
   depend_command,:ref:`depend_command-title`
   fit_command,:ref:`fit_command-title`
   hold_out_command,:ref:`hold_out_command-title`
   init_command,:ref:`init_command-title`
   modify_command,:ref:`modify_command-title`
   old2new_command,:ref:`old2new_command-title`
   perturb_command,:ref:`perturb_command-title`
   predict_command,:ref:`predict_command-title`
   sample_command,:ref:`sample_command-title`
   set_command,:ref:`set_command-title`
   simulate_command,:ref:`simulate_command-title`

.. toctree::
   :maxdepth: 1
   :hidden:

   dismodat.py
   bnd_mulcov_command
   data_density_command
   depend_command
   fit_command
   hold_out_command
   init_command
   old2new_command
   predict_command
   sample_command
   set_command
   simulate_command
