.. _run_cmake.sh-name:

!!!!!!!!!!!!
run_cmake.sh
!!!!!!!!!!!!

xrst input file: ``bin/run_cmake.sh``

.. meta::
   :keywords: run_cmake.sh, bin/run_cmake.sh:, user, configuration, options

.. index:: run_cmake.sh, bin/run_cmake.sh:, user, configuration, options

.. _run_cmake.sh-title:

bin/run_cmake.sh: User Configuration Options
############################################

.. meta::
   :keywords: verbose_makefile

.. index:: verbose_makefile

.. _run_cmake.sh@verbose_makefile:

verbose_makefile
****************
Use 'no' for normal and 'yes' for verbose make output:

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 34-34
   :language: sh

.. meta::
   :keywords: build_type

.. index:: build_type

.. _run_cmake.sh@build_type:

build_type
**********
Use either ``debug`` or ``release`` for the type of this build:

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 41-41
   :language: sh

.. meta::
   :keywords: dismod_at_prefix

.. index:: dismod_at_prefix

.. _run_cmake.sh@dismod_at_prefix:

dismod_at_prefix
****************
Prefix where dismod_at will be installed:

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 48-48
   :language: sh

If *dismod_at_prefix* ends in ``dismod_at`` ,
``run_cmake.sh`` will use a soft link from this prefix to
*dismod_at_prefix* . ``debug`` or
*dismod_at_prefix* . ``release``
depending on the choice for *build_type* .

.. meta::
   :keywords: debug, and, release

.. index:: debug, and, release

.. _run_cmake.sh@Debug and Release:

Debug and Release
*****************
If a soft link is used for the install,
the same technique will be used to map the ``build``
directory to the debug or release version.
If you are using both a debug and release versions of dismod_at,
both versions of the
:ref:`install_unix@Special Requirements`
will need to be installed.

.. meta::
   :keywords: python3_executable

.. index:: python3_executable

.. _run_cmake.sh@python3_executable:

python3_executable
******************
Path to the python3 executable on this machine.

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 70-70
   :language: sh

You can use the command $code which python3$$ to determine the location
of the default version for this system.
In the past, removing the  characters in front of the following
command would work for the IHME cluster:

    ``python3_executable`` ='/ ``usr/local/anaconda3-current/bin/python`` '

.. meta::
   :keywords: specific_compiler

.. index:: specific_compiler

.. _run_cmake.sh@specific_compiler:

specific_compiler
*****************
On some systems, e.g. the Mac using port, there are problems with mixing
different compiler systems for fortran and C++; see
`ipopt issue 471 <https://github.com/coin-or/Ipopt/discussions/471>`_.
This variable allows you to set a specific compiler for
C, and or CXX and or FC. For example
``specific_compiler='CC=gcc CXX=g++ FC=gfortran'``
uses the gnu versions of these compilers.
The configuration will automatically find compilers that are not specified;
i.e., if

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 91-91
   :language: sh

.. meta::
   :keywords: extra_cxx_flags

.. index:: extra_cxx_flags

.. _run_cmake.sh@extra_cxx_flags:

extra_cxx_flags
***************
Extra C++ flags used during compilation:

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 98-98
   :language: sh

An alternative might be ``-Wall`` .

.. meta::
   :keywords: cmake_libdir

.. index:: cmake_libdir

.. _run_cmake.sh@cmake_libdir:

cmake_libdir
************
Sub-directory of each prefix where libraries are installed.

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 106-106
   :language: sh

.. meta::
   :keywords: system_specific_library_list

.. index:: system_specific_library_list

.. _run_cmake.sh@system_specific_library_list:

system_specific_library_list
****************************
List of libraries that are needed for a particular system. For example,
if when you build ``dismod_at`` the ``pthread`` library is
required by your system, then include it here.
Libraries in the list can be separated by spaces or semi-colons.

.. literalinclude:: ../../bin/run_cmake.sh
   :lines: 116-116
   :language: sh
