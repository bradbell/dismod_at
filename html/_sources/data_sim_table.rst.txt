.. _data_sim_table-name:

!!!!!!!!!!!!!!
data_sim_table
!!!!!!!!!!!!!!

xrst input file: ``xrst/table/data_sim_table.xrst``

.. meta::
   :keywords: data_sim_table, simulated, measurements, and, adjusted, standard, deviations

.. index:: data_sim_table, simulated, measurements, and, adjusted, standard, deviations

.. _data_sim_table-title:

Simulated Measurements and Adjusted Standard Deviations
#######################################################

.. meta::
   :keywords: discussion

.. index:: discussion

.. _data_sim_table@Discussion:

Discussion
**********
The ``data_sim`` table is created during a
:ref:`simulate_command-name` .
It contains :ref:`simulate_command@number_simulate`
sets of measurements where each set
has one value for each entry in the :ref:`data_subset_table-name` .

.. meta::
   :keywords: data_sim_id

.. index:: data_sim_id

.. _data_sim_table@data_sim_id:

data_sim_id
***********
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero, and it increments by one for each row.
Given the :ref:`model_variables-name` as specified by
:ref:`truth_var_table-name` ,
the measurement uncertainty is independent for each row
and has standard deviation :ref:`data_table@meas_std` .

.. meta::
   :keywords: simulate_index

.. index:: simulate_index

.. _data_sim_table@simulate_index:

simulate_index
**************
The column has type ``integer`` . It specifies the index
for this simulated measurement set. This index starts at zero,
repeats as the same for the entire subset of *data_id* values,
and then increments by one between measurement sets.
The final (maximum) value for *simulate_index* is
:ref:`simulate_command@number_simulate` minus one.

.. meta::
   :keywords: data_subset_id

.. index:: data_subset_id

.. _data_sim_table@data_subset_id:

data_subset_id
**************
This column has type ``integer`` and is the primary key
for the :ref:`data_subset_table-name` .
This identifies which :ref:`data_subset_table@data_id`
each row of the data_sim table corresponds to.
If *n_subset* is the number of rows in the data_subset table,

   *data_sim_id* = *simulate_index* * *n_subset* + *data_subset_id*

for *simulate_index* equal zero to *number_simulate* ``-1``
and *data_subset_id* equal zero to ``n_subset`` *-1* .

.. meta::
   :keywords: data_sim_value

.. index:: data_sim_value

.. _data_sim_table@data_sim_value:

data_sim_value
**************
This column has type ``real`` and is
the simulated measurement value that for the specified row of the data table;
see :ref:`data_sim_table@Method@z` in the method below.
If the density for this *data_id* is censored (not censored)
*data_sim_value* has value ``max`` ( *z* , 0) , ( *z* ).

.. meta::
   :keywords: method

.. index:: method

.. _data_sim_table@Method:

Method
******

.. meta::
   :keywords: data_id

.. index:: data_id

.. _data_sim_table@Method@data_id:

data_id
=======
We use *data_id* to denote the
:ref:`data_subset_table@data_id` corresponding to the
*data_subset_id* corresponding to this *data_sim_id* .

.. meta::
   :keywords: y

.. index:: y

.. _data_sim_table@Method@y:

y
=
We use :math:`y` to denote the data table
:ref:`data_table@meas_value`
corresponding to this *data_id* .

.. meta::
   :keywords: capital, delta

.. index:: capital, delta

.. _data_sim_table@Method@Capital Delta:

Capital Delta
=============
We use :math:`\Delta` to denote the
:ref:`minimum cv standard deviation<data_like@Notation@Minimum CV Standard Deviation, Delta_i>`
corresponding to the data table and this *data_id* .

.. meta::
   :keywords: d

.. index:: d

.. _data_sim_table@Method@d:

d
=
We use :math:`d` to denote the
:ref:`data_table@density_id`
corresponding to the data table and this *data_id* .

.. meta::
   :keywords: eta

.. index:: eta

.. _data_sim_table@Method@eta:

eta
===
We use :math:`\eta` to denote the
:ref:`data_table@eta`
corresponding to the data table and this *data_id* .

.. meta::
   :keywords: a

.. index:: a

.. _data_sim_table@Method@A:

A
=
We use :math:`A` denote the
:ref:`average integrand<avg_integrand@Average Integrand, A_i>`
corresponding to the truth_var table
value for the model variables, the values in the data table,
and this *data_id* .

.. meta::
   :keywords: capital, e

.. index:: capital, e

.. _data_sim_table@Method@Capital E:

Capital E
=========
We use :math:`E` for the
:ref:`average noise effect<data_like@Measurement Noise Covariates@Average Noise Effect, E_i(theta)>`
corresponding to the truth_var table
value for the model variables, the values in the data table,
and this *data_id* .

.. meta::
   :keywords: sigma

.. index:: sigma

.. _data_sim_table@Method@sigma:

sigma
=====
We use :math:`\sigma` to denote the
:ref:`transformed standard deviation<data_like@Notation@Transformed Standard Deviation, sigma_i>`
corresponding to the data table and this *data_id* ; i.e.,

.. math::

   \sigma = \left\{ \begin{array}{ll}
      \log( y + \eta + \Delta ) - \log(y + \eta) & \R{if \; log \; density}
      \\
      \Delta                                     & \R{otherwise}
   \end{array} \right.

Note that :math:`\sigma` does not depend on simulated noise
:math:`e` defined below (because it is defined using :math:`y`
instead of :math:`z`).

.. meta::
   :keywords: delta

.. index:: delta

.. _data_sim_table@Method@delta:

delta
=====
We use :math:`\delta` to denote the
:ref:`adjusted standard deviation<data_like@Adjusted Standard Deviation, delta_i(theta)>`
corresponding to the truth_var table
value for the model variables,
the values in the data table, and this *data_id* .
Note that :math:`\sigma` does not depend on simulated noise
:math:`e` defined below.

.. meta::
   :keywords: e

.. index:: e

.. _data_sim_table@Method@e:

e
=
We use :math:`e` to denote the noise simulated with mean zero,
standard deviation :math:`\delta`, and density corresponding to
this *data_id* without log qualification.
For example, if the data density for this *data_id* is
``log_gaussian`` , the :math:`e` is simulate using a Gaussian
distribution.

.. meta::
   :keywords: z

.. index:: z

.. _data_sim_table@Method@z:

z
=
We use :math:`z` to denote the simulated data value
*data_sim_value* corresponding to this *data_sim_id* .
It the density is :ref:`density_table@Notation@Linear` ,

.. math::

   z = A + e

It the density is :ref:`density_table@Notation@Log Scaled` ,

.. math::
   :nowrap:

   \begin{eqnarray}
      e        & = & \log( z + \eta ) - \log( A + \eta )
      \\
      \exp (e) & = & ( z + \eta ) / ( A + \eta )
      \\
      z        & = & \exp(e) ( A + \eta ) - \eta
   \end{eqnarray}

.. meta::
   :keywords: example

.. index:: example

.. _data_sim_table@Example:

Example
*******
See the :ref:`user_data_sim.py-name` and :ref:`simulate_command.py-name`
examples / tests.
