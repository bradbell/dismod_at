.. _replace_table-name:

!!!!!!!!!!!!!
replace_table
!!!!!!!!!!!!!

xrst input file: ``python/dismod_at/replace_table.py``

.. meta::
   :keywords: replace_table, replace, a, a, table

.. index:: replace_table, replace, a, a, table

.. _replace_table-title:

Replace A a Table
#################

.. meta::
   :keywords: syntax

.. index:: syntax

.. _replace_table@Syntax:

Syntax
******

    ``dismod_at.replace_table`` ( *connection* , *tbl_name* , *table_dict* )

.. meta::
   :keywords: connection

.. index:: connection

.. _replace_table@connection:

connection
**********
is a :ref:`create_connection@connection` for this database.

.. meta::
   :keywords: table_name

.. index:: table_name

.. _replace_table@table_name:

table_name
**********
is a ``str`` that specifies the name of a table that already in the
database.

.. meta::
   :keywords: table_dict

.. index:: table_dict

.. _replace_table@table_dict:

table_dict
**********
is a ``list`` with each element of the list is a dictionary.
Each dictionary contains a key for every column name in the original table.
The columns in the original table are written to the new table with the
same order and types as in the original table. Only the values are replaced
using the values in *table_dict* .

.. meta::
   :keywords: primary, key

.. index:: primary, key

.. _replace_table@Primary Key:

Primary Key
***********
This routine assumes the primary key is an integer,  corresponds
to the first column, and has name *tbl_name* _ ``id`` .

.. meta::
   :keywords: example

.. index:: example

.. _replace_table@Example:

Example
*******
The file :ref:`replace_table.py-name` is an example use of
``replace_table`` .

.. toctree::
   :maxdepth: 1
   :hidden:

   replace_table.py
