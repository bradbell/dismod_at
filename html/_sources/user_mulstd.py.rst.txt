.. _user_mulstd.py-name:

!!!!!!!!!!!!!!
user_mulstd.py
!!!!!!!!!!!!!!

xrst input file: ``example/user/mulstd.py``

.. meta::
   :keywords: user_mulstd.py, estimating, smoothing, standard, deviation, multiplies

.. index:: user_mulstd.py, estimating, smoothing, standard, deviation, multiplies

.. _user_mulstd.py-title:

Estimating Smoothing Standard Deviation Multiplies
##################################################

.. meta::
   :keywords: purpose

.. index:: purpose

.. _user_mulstd.py@Purpose:

Purpose
*******
This example uses a smoothing standard deviation multiplier
:ref:`lambda<model_variables@Fixed Effects, theta@Smoothing Standard Deviation Multipliers, lambda>`
to determine the standard deviation of the random effects.

.. meta::
   :keywords: problem, parameters

.. index:: problem, parameters

.. _user_mulstd.py@Problem Parameters:

Problem Parameters
******************
The following values are used to simulate and model the data:

.. literalinclude:: ../../example/user/mulstd.py
   :lines: 92-96
   :language: py

.. meta::
   :keywords: age, and, time, values

.. index:: age, and, time, values

.. _user_mulstd.py@Age and Time Values:

Age and Time Values
*******************
The age and time values do not matter for this problem
because all the functions are constant in age and time.
This can be seen by the fact that all of the smoothing has one age
and one time point.

.. meta::
   :keywords: variables

.. index:: variables

.. _user_mulstd.py@Variables:

Variables
*********

.. meta::
   :keywords: parent

.. index:: parent

.. _user_mulstd.py@Variables@Parent:

Parent
======
A constant value used to model
:ref:`iota<avg_integrand@Rate Functions@iota_i(a,t)>`
for the parent node.

.. meta::
   :keywords: children

.. index:: children

.. _user_mulstd.py@Variables@Children:

Children
========
A fixed value is used for each of the
:ref:`model_variables@Random Effects, u@Child Rate Effects`
so that this example passes its test without having a lot of children.
You could try increasing the number of children and simulating
the rate random effect for each child.

.. meta::
   :keywords: data, table

.. index:: data, table

.. _user_mulstd.py@Data Table:

Data Table
**********
For this example, all the data is
:ref:`avg_integrand@Integrand, I_i(a,t)@Sincidence`
with a known standard deviation.

.. meta::
   :keywords: rate, table

.. index:: rate, table

.. _user_mulstd.py@Rate Table:

Rate Table
**********
The :ref:`rate_table-name` only specifies that *iota* for the parent
and children are non-zero.

.. meta::
   :keywords: prior, table

.. index:: prior, table

.. _user_mulstd.py@Prior Table:

Prior Table
***********

.. meta::
   :keywords: parent

.. index:: parent

.. _user_mulstd.py@Prior Table@Parent:

Parent
======
The prior for the parent node *iota* is uniform with lower limit 1e-4,
upper limit 1.0 and mean 0.1.
Note that the mean is not really the mean of this uniform distribution
and it is only used to get the initial starting and scaling point
for the optimization; see :ref:`init_command-name` .

.. meta::
   :keywords: children

.. index:: children

.. _user_mulstd.py@Prior Table@Children:

Children
========
The prior for the child nodes *iota* is Gaussian
with mean zero and standard deviation one.
This is so that the actual standard deviation is *lambda*  * 1
which is equal to *lambda* .

.. meta::
   :keywords: fitting

.. index:: fitting

.. _user_mulstd.py@Fitting:

Fitting
*******
.. meta::
   :keywords: source, code

.. index:: source, code

.. _user_mulstd.py@Source Code:

Source Code
***********

.. literalinclude:: ../../example/user/mulstd.py
   :lines: 90-314
   :language: py
