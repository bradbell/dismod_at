.. _fit_var_table-name:

!!!!!!!!!!!!!
fit_var_table
!!!!!!!!!!!!!

xrst input file: ``xrst/table/fit_var_table.xrst``

.. meta::
   :keywords: fit_var_table, the, optimization, results, for, variables

.. index:: fit_var_table, the, optimization, results, for, variables

.. _fit_var_table-title:

The Optimization Results for Variables
######################################

.. meta::
   :keywords: discussion

.. index:: discussion

.. _fit_var_table@Discussion:

Discussion
**********
The fit_var table contains the maximum likelihood estimate
for the :ref:`model_variables-name` corresponding to
the data table :ref:`data_table@meas_value` .
A new ``fit_var`` table is created each time the
:ref:`fit_command-name` is executed.

.. meta::
   :keywords: lagrange, multipliers

.. index:: lagrange, multipliers

.. _fit_var_table@Lagrange Multipliers:

Lagrange Multipliers
********************
Setting good upper and lower limits, not zero or infinite,
helps ``dismod_at`` determine the scale for the constraints
and gives better detection of which constraints are active.

.. meta::
   :keywords: fit_var_id

.. index:: fit_var_id

.. _fit_var_table@fit_var_id:

fit_var_id
**********
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero, and it increments by one for each row.
The *fit_var_id* column is also a foreign key for the
:ref:`var_table-name` ; i.e.,

   *var_id* = *fit_var_id*

In addition, the size of both tables is the same.

.. meta::
   :keywords: fit_var_value

.. index:: fit_var_value

.. _fit_var_table@fit_var_value:

fit_var_value
*************
This column has type ``real`` and contains the
final model variables determined by the fit.
This is an approximations for the
:ref:`fixed effects<model_variables@Fixed Effects, theta>` :math:`( \theta )`
that maximize the Laplace approximate objective :math:`L( \theta)`,
and the random effects that maximum the joint likelihood
:math:`\hat{u} ( \theta )`; see the
:ref:`install_unix@Special Requirements@cppad_mixed`
documentation for more details.

.. meta::
   :keywords: residual_value

.. index:: residual_value

.. _fit_var_table@residual_value:

residual_value
**************
This column has type ``real`` and contains the
:ref:`weighted residual<statistic@Weighted Residual Function, R>`
corresponding to the :ref:`smooth_grid_table@value_prior_id`
for this variable.
If there is no such residual, this column is ``null`` .
For example, if the corresponding :ref:`density<density_table-name>` is
uniform.

.. meta::
   :keywords: residual_dage

.. index:: residual_dage

.. _fit_var_table@residual_dage:

residual_dage
*************
This column has type ``real`` and contains the
:ref:`weighted residual<statistic@Weighted Residual Function, R>`
corresponding to the :ref:`smooth_grid_table@dage_prior_id`
for this variable.
If there is no such residual, this column is ``null`` .
For example, if the corresponding *dage_prior_id* is ``null`` .

.. meta::
   :keywords: residual_dtime

.. index:: residual_dtime

.. _fit_var_table@residual_dtime:

residual_dtime
**************
This column has type ``real`` and contains the
:ref:`weighted residual<statistic@Weighted Residual Function, R>`
corresponding to the :ref:`smooth_grid_table@dtime_prior_id`
for this variable.
If there is no such residual, this column is ``null`` .
For example, if the corresponding *dtime_prior_id* is ``null`` .

.. meta::
   :keywords: lagrange_value

.. index:: lagrange_value

.. _fit_var_table@lagrange_value:

lagrange_value
**************
This column has type ``real`` and contains the Lagrange multipliers for
the :ref:`prior_table@lower` and upper limits corresponding the
:ref:`smooth_grid_table@value_prior_id` for this variable.
If it is positive (negative) the upper (lower) limit is active.
If neither prior limit is active, this column is zero.
The Lagrange multipliers are in the scaled space
where the optimization takes place.

.. meta::
   :keywords: lagrange_dage

.. index:: lagrange_dage

.. _fit_var_table@lagrange_dage:

lagrange_dage
*************
This column has type ``real`` and contains the Lagrange multipliers for
the :ref:`prior_table@lower` and upper limits corresponding the
:ref:`smooth_grid_table@dage_prior_id` for this variable.
If it is positive (negative) the upper (lower) limit is active.
If neither prior limit is active, this column is zero.
The Lagrange multipliers are in the scaled space
where the optimization takes place.

.. meta::
   :keywords: lagrange_dtime

.. index:: lagrange_dtime

.. _fit_var_table@lagrange_dtime:

lagrange_dtime
**************
This column has type ``real`` and contains the Lagrange multipliers for
the :ref:`prior_table@lower` and upper limits corresponding the
:ref:`smooth_grid_table@dtime_prior_id` for this variable.
If it is positive (negative) the upper (lower) limit is active.
If neither prior limit is active, this column is zero.
The Lagrange multipliers are in the scaled space
where the optimization takes place.

.. meta::
   :keywords: example

.. index:: example

.. _fit_var_table@Example:

Example
*******
See the :ref:`fit_command.py-name` example and test.
