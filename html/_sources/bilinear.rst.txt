.. _bilinear-name:

!!!!!!!!
bilinear
!!!!!!!!

xrst input file: ``xrst/model/bilinear.xrst``

.. meta::
   :keywords: bilinear, dismod_at, bilinear, interpolation

.. index:: bilinear, dismod_at, bilinear, interpolation

.. _bilinear-title:

dismod_at Bilinear Interpolation
################################

.. meta::
   :keywords: age, grid

.. index:: age, grid

.. _bilinear@Age Grid:

Age Grid
********
We are given a grid of :math:`M` age values
:math:`\{ a_i \; | \; i = 0, \ldots , M-1 \}`.

.. meta::
   :keywords: time, grid

.. index:: time, grid

.. _bilinear@Time Grid:

Time Grid
*********
We are also given a grid of :math:`N` time values
:math:`\{ t_j \; | \; j = 0, \ldots , N-1 \}`.

.. meta::
   :keywords: function, grid

.. index:: function, grid

.. _bilinear@Function Grid:

Function Grid
*************
In addition,
we are given a grid of function values to be interpolated

.. math::

   \left\{
         \left. v_{i,j} = f( a_i , t_j ) \; \right| \;
         i = 0, \ldots , M-1 , j = 0 , \ldots , N-1
   \right\} \; .

.. meta::
   :keywords: interpolant

.. index:: interpolant

.. _bilinear@Interpolant:

Interpolant
***********
The corresponding interpolating function at age :math:`\alpha` and time
:math:`s`, :math:`f( \alpha , s )` is defined as follows:

.. meta::
   :keywords: bilinear

.. index:: bilinear

.. _bilinear@Interpolant@Bilinear:

Bilinear
========
Consider the case
where there is an index pair :math:`i < M-1`, :math:`j < N-1` such that
:math:`a_i \leq \alpha \leq a_{i+1}` and
:math:`t_j \leq s \leq t_{j+1}`.
In this case the function is defined by

.. math::

   f( \alpha , s )
   =
   \frac{a_{i+1} - \alpha}{a_{i+1} - a_i}
      \frac{t_{j+1} - s}{t_{j+1} - t_j} v_{i,j}
   +
   \frac{\alpha - a_i}{a_{i+1} - a_i}
      \frac{t_{j+1} - s}{t_{j+1} - t_j} v_{i+1,j}
   +
   \frac{a_{i+1} - s}{a_{i+1} - a_i}
      \frac{s - t_j}{t_{j+1} - t_j} v_{i+1,j}
   +
   \frac{\alpha - a_i}{a_{i+1} - a_i}
      \frac{s - t_j}{t_{j+1} - t_j} v_{i+1,j+1}

.. meta::
   :keywords: below, minimum, age

.. index:: below, minimum, age

.. _bilinear@Interpolant@Below Minimum Age:

Below Minimum Age
=================
Consider the case where :math:`\alpha < a_0` and
there is an index :math:`j < N-1` such that
:math:`t_j \leq s \leq t_{j+1}`.
In this case the function is defined by

.. math::

   f( \alpha , s )
   =
   \frac{t_{j+1} - s}{t_{j+1} - t_j} v_{0,j}
   +
   \frac{s - t_j}{t_{j+1} - t_j} v_{0,j+1}

.. meta::
   :keywords: above, maximum, age

.. index:: above, maximum, age

.. _bilinear@Interpolant@Above Maximum Age:

Above Maximum Age
=================
Consider the case where :math:`a_{M-1} < \alpha` and
there is an index :math:`j < N-1` such that
:math:`t_j \leq s \leq t_{j+1}`.
In this case the function is defined by

.. math::

   f( \alpha , s )
   =
   \frac{t_{j+1} - s}{t_{j+1} - t_j} v_{M-1,j}
   +
   \frac{s - t_j}{t_{j+1} - t_j} v_{M-1,j+1}

.. meta::
   :keywords: below, minimum, time

.. index:: below, minimum, time

.. _bilinear@Interpolant@Below Minimum Time:

Below Minimum Time
==================
Consider the case where :math:`s < t_0` and
there is an index :math:`i < M-1` such that
:math:`a_i \leq \alpha \leq a_{i+1}`.
In this case the function is defined by

.. math::

   f( \alpha , s )
   =
   \frac{a_{i+1} - \alpha}{a_{i+1} - a_i} v_{i,0}
   +
   \frac{\alpha - a_i}{a_{i+1} - a_i}  v_{i+1,0}

.. meta::
   :keywords: above, maximum, time

.. index:: above, maximum, time

.. _bilinear@Interpolant@Above Maximum Time:

Above Maximum Time
==================
Consider the case where :math:`t_{N-1} < s` and
there is an index :math:`i < M-1` such that
:math:`a_i \leq \alpha \leq a_{i+1}`.
In this case the function is defined by

.. math::

   f( \alpha , s )
   =
   \frac{a_{i+1} - \alpha}{a_{i+1} - a_i} v_{i,N-1}
   +
   \frac{\alpha - a_i}{a_{i+1} - a_i}  v_{i+1,N-1}

.. meta::
   :keywords: outside, both, limits

.. index:: outside, both, limits

.. _bilinear@Interpolant@Outside Both Limits:

Outside Both Limits
===================

#. If :math:`\alpha < a_0` and :math:`s < t_0`,
   :math:`f( \alpha , s ) = v_{0,0}`.
#. If :math:`\alpha < a_0` and :math:`t_{N-1} < s`,
   :math:`f( \alpha , s ) = v_{0,N-1}`.
#. If :math:`a_{M-1} < \alpha` and :math:`t_{N-1} < s`,
   :math:`f( \alpha , s ) = v_{M-1,N-1}`.
#. If :math:`a_{M-1} < \alpha` and :math:`s < t_0`,
   :math:`f( \alpha , s ) = v_{M-1,0}`.

.. meta::
   :keywords: plotting

.. index:: plotting

.. _bilinear@Plotting:

Plotting
********
Functions of age and time are usually plotted with
age on the vertical axis and time on the horizontal axis.
This is opposite the usual convention where
the first variable is plotted on the horizontal axis
and the second variable on the vertical axis.
