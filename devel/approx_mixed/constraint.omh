$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-15 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
/*
$begin approx_mixed_constraint$$
$spell
	vec
	CppAD
	const
$$

$section Constraints on the Fixed Effects$$

$head Syntax$$
$icode%c% = %approx_object%.constraint(%fixed_vec%)%$$

$head approx_object$$
We use $cref/approx_object/approx_mixed_derived_ctor/approx_object/$$
to denote an object of a class that is
derived from the $code approx_mixed$$ base class.

$head a1_double$$
The type $icode a1_double$$ below is one of the
see $cref/AD Types/approx_mixed_public/AD Types/$$.

$head Virtual Function$$
The following virtual function must be implemented in the derived class:
$codei%
	virtual CppAD::vector<a1_double> constraint(
		const CppAD::vector<a1_double>& %fixed_vec%
	)
%$$

$head fixed_vec$$
This argument has prototype
$codei%
	const CppAD::vector<a1_double>& %fixed_vec%
%$$
It contains a value for the
$cref/fixed effects/approx_mixed/Fixed Effects, theta/$$ vector.

$head c$$
This result has prototype
$codei%
	CppAD::vector<%a1_double%> %c%
%$$
It is the value of the
$cref/constraint function/approx_mixed/Problem/Constraints/$$
$latex c( \theta )$$.

$head Example$$
This file $cref approx_derived_xam.cpp$$ contains an example
of defining this virtual function.

$end
