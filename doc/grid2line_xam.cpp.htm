<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++ grid2line: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++ grid2line: Example and Test">
<meta name="keywords" id="keywords" content=" c++ grid2line: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_grid2line_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_utility</option>
<option>grid2line</option>
<option>grid2line_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="grid2line.htm" target="_top">Prev</a>
</td><td><a href="solve_ode.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>dismod_at-&gt;</option>
<option>math_abstract</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2019</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel_utility-&gt;</option>
<option>a1_double</option>
<option>avgint_subset</option>
<option>bilinear_interp</option>
<option>child_info</option>
<option>cohort_ode</option>
<option>data_subset</option>
<option>eigen_ode2</option>
<option>error_exit</option>
<option>fixed_effect</option>
<option>get_prior_mean</option>
<option>number_random_const</option>
<option>age_avg_grid</option>
<option>pack_info</option>
<option>pack_prior</option>
<option>residual_density</option>
<option>random_number</option>
<option>random_effect</option>
<option>grid2line</option>
<option>solve_ode</option>
<option>split_space</option>
<option>time_line_vec</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>grid2line-&gt;</option>
<option>grid2line_xam.cpp</option>
</select>
</td>
<td>grid2line_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>C++ grid2line: Example and Test</big></big></b></center>

<br><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;limits&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/grid2line.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/bilinear_interp.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/a1_double.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/smooth_info.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">grid2line_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>
     <font color="#009900">bool</font>   ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b>  std<font color="#990000">::</font>string<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b>  CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>
     <b><font color="#0000FF">typedef</font></b> CppAD<font color="#990000">::</font><font color="#008080">AD&lt;double&gt;</font> Float<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#009900">double</font> eps99 <font color="#990000">=</font> <font color="#993399">99.0</font> <font color="#990000">*</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">();</font>

     <i><font color="#9A1900">// use smooth_info test constructor</font></i>
     <font color="#008080">size_t</font> n_age  <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> n_time <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">age_id</font></b><font color="#990000">(</font>n_age<font color="#990000">),</font>    <b><font color="#000000">time_id</font></b><font color="#990000">(</font>n_time<font color="#990000">);</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">age_table</font></b><font color="#990000">(</font>n_age<font color="#990000">),</font> <b><font color="#000000">time_table</font></b><font color="#990000">(</font>n_time<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// smoothing ages are entire age_table</font></i>
          age_id<font color="#990000">[</font>i<font color="#990000">]</font>    <font color="#990000">=</font> i<font color="#990000">;</font>
          age_table<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_age<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <i><font color="#9A1900">// smoothing times are entire time_table</font></i>
          time_id<font color="#990000">[</font>j<font color="#990000">]</font>    <font color="#990000">=</font> j<font color="#990000">;</font>
          time_table<font color="#990000">[</font>j<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">2.0</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>j<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_time<font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// these values are not used</font></i>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">value_prior_id</font></b><font color="#990000">(</font>n_age <font color="#990000">*</font> n_time<font color="#990000">);</font>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">dage_prior_id</font></b><font color="#990000">(</font>n_age <font color="#990000">*</font> n_time<font color="#990000">);</font>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">dtime_prior_id</font></b><font color="#990000">(</font>n_age <font color="#990000">*</font> n_time<font color="#990000">);</font>
     <font color="#008080">vector&lt;double&gt;</font> const_value<font color="#990000">;</font>
     <font color="#008080">size_t</font> mulstd_value   <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> mulstd_dage    <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> mulstd_dtime   <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>

     <i><font color="#9A1900">// testing constructor</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">smooth_info</font> <b><font color="#000000">g_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font>
          time_table<font color="#990000">,</font>
          age_id<font color="#990000">,</font>
          time_id<font color="#990000">,</font>
          value_prior_id<font color="#990000">,</font>
          dage_prior_id<font color="#990000">,</font>
          dtime_prior_id<font color="#990000">,</font>
          const_value<font color="#990000">,</font>
          mulstd_value<font color="#990000">,</font>
          mulstd_dage<font color="#990000">,</font>
          mulstd_dtime
     <font color="#990000">);</font>

     <i><font color="#9A1900">// variable values on smoothing grid</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;Float&gt;</font>  <b><font color="#000000">grid_value</font></b><font color="#990000">(</font>n_age <font color="#990000">*</font> n_time<font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">grid_check</font></b><font color="#990000">(</font>n_age <font color="#990000">*</font> n_time<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <font color="#009900">double</font> age  <font color="#990000">=</font> age_table<font color="#990000">[</font>i<font color="#990000">];</font>
               <font color="#009900">double</font> time <font color="#990000">=</font> time_table<font color="#990000">[</font>j<font color="#990000">];</font>
               grid_check<font color="#990000">[</font>i <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> age <font color="#990000">*</font> age <font color="#990000">+</font> time <font color="#990000">*</font> time<font color="#990000">;</font>
               grid_value<font color="#990000">[</font>i <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">]</font> <font color="#990000">=</font> grid_check<font color="#990000">[</font>i <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">];</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>

     <i><font color="#9A1900">// line on which to interpolate the value</font></i>
     <font color="#008080">size_t</font> n_line <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">line_age</font></b><font color="#990000">(</font>n_line<font color="#990000">),</font> <b><font color="#000000">line_time</font></b><font color="#990000">(</font>n_line<font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;Float&gt;</font> <b><font color="#000000">line_value</font></b><font color="#990000">(</font>n_line<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// minimum and maximum age in both tables and grid</font></i>
     <font color="#009900">double</font> age_min   <font color="#990000">=</font> age_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
     <font color="#009900">double</font> age_max   <font color="#990000">=</font> age_table<font color="#990000">[</font> n_age <font color="#990000">-</font> <font color="#993399">1</font> <font color="#990000">];</font>
     <font color="#009900">double</font> age_diff  <font color="#990000">=</font> age_max <font color="#990000">-</font> age_min<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// minimum and maximum time in both tables and grid</font></i>
     <font color="#009900">double</font> time_min  <font color="#990000">=</font> time_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">];</font>
     <font color="#009900">double</font> time_max  <font color="#990000">=</font> time_table<font color="#990000">[</font> n_time <font color="#990000">-</font> <font color="#993399">1</font> <font color="#990000">];</font>
     <font color="#009900">double</font> time_diff <font color="#990000">=</font> time_max <font color="#990000">-</font> time_min<font color="#990000">;</font>

     <i><font color="#9A1900">// case we are testing</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> n_line<font color="#990000">;</font> k<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    line_age<font color="#990000">[</font>k<font color="#990000">]</font>  <font color="#990000">=</font> age_max  <font color="#990000">-</font> age_diff  <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_line <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
          line_time<font color="#990000">[</font>k<font color="#990000">]</font> <font color="#990000">=</font> time_min <font color="#990000">+</font> time_diff <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>k<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_line <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// last age is above the maximum age</font></i>
     line_age<font color="#990000">[</font>n_line<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">]</font>  <font color="#990000">+=</font> age_diff <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_line <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// first time is below the minimum time</font></i>
     line_time<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">-=</font>  time_diff <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_line <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>

     <i><font color="#9A1900">// grid2line calculation</font></i>
     line_value <font color="#990000">=</font> <b><font color="#000000">grid2line</font></b><font color="#990000">(</font>
          line_age<font color="#990000">,</font> line_time<font color="#990000">,</font> age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> g_info<font color="#990000">,</font> grid_value
     <font color="#990000">);</font>

     <i><font color="#9A1900">// check the result</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> n_line<font color="#990000">;</font> k<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#009900">double</font> age    <font color="#990000">=</font> line_age<font color="#990000">[</font>k<font color="#990000">];</font>
          <font color="#009900">double</font> time   <font color="#990000">=</font> line_time<font color="#990000">[</font>k<font color="#990000">];</font>
          <font color="#008080">Float</font>  result <font color="#990000">=</font> line_value<font color="#990000">[</font>k<font color="#990000">];</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
          <b><font color="#0000FF">while</font></b><font color="#990000">(</font> i <font color="#990000">&lt;</font> n_age <font color="#990000">-</font> <font color="#993399">1</font> <font color="#990000">&amp;&amp;</font> age_table<font color="#990000">[</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">&lt;</font> age <font color="#990000">)</font>
               <font color="#990000">++</font>i<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
          <b><font color="#0000FF">while</font></b><font color="#990000">(</font> j <font color="#990000">&lt;</font> n_time <font color="#990000">-</font> <font color="#993399">1</font> <font color="#990000">&amp;&amp;</font> time_table<font color="#990000">[</font>j<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">&lt;</font> time <font color="#990000">)</font>
               <font color="#990000">++</font>j<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <font color="#009900">double</font>  check <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">bilinear_interp</font></b><font color="#990000">(</font>
               age<font color="#990000">,</font> time<font color="#990000">,</font> age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> grid_check<font color="#990000">,</font> i<font color="#990000">,</font> j
          <font color="#990000">);</font>
          <i><font color="#9A1900">//</font></i>
          <b><font color="#0000FF">if</font></b><font color="#990000">(</font> check <font color="#990000">==</font> <font color="#993399">0.0</font> <font color="#990000">)</font>
               ok <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> result <font color="#990000">)</font> <font color="#990000">&lt;</font> eps99<font color="#990000">;</font>
          <b><font color="#0000FF">else</font></b>
               ok  <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> <font color="#993399">1.0</font> <font color="#990000">-</font> result <font color="#990000">/</font> <b><font color="#000000">Float</font></b><font color="#990000">(</font>check<font color="#990000">)</font> <font color="#990000">)</font> <font color="#990000">&lt;</font> eps99<font color="#990000">;</font>
          <i><font color="#9A1900">//</font></i>
          <i><font color="#9A1900">// std::cout &lt;&lt; ", check = " &lt;&lt; check;</font></i>
          <i><font color="#9A1900">// std::cout &lt;&lt; ", result = " &lt;&lt; result &lt;&lt; std::endl;</font></i>
     <font color="#FF0000">}</font>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/devel/utility/grid2line_xam.cpp

</body>
</html>
