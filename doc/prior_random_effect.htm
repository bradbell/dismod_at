<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Evaluate Fixed Negative Log-Likelihood for the Random Effects</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Evaluate Fixed Negative Log-Likelihood for the Random Effects">
<meta name="keywords" id="keywords" content=" evaluate fixed negative log-likelihood the random effects syntax float prior_object pack_vec residual_vec index p(u|theta) example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_prior_random_effect_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_model</option>
<option>prior_model</option>
<option>prior_random_effect</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="prior_fixed_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="prior_random_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>dismod_at-&gt;</option>
<option>math_abstract</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2018</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel_model-&gt;</option>
<option>devel_data_model</option>
<option>prior_model</option>
<option>fit_model</option>
<option>depend</option>
<option>adj_integrand</option>
<option>devel_avg_integrand</option>
<option>devel_avg_std_effect</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>prior_model-&gt;</option>
<option>prior_model_ctor</option>
<option>replace_mean</option>
<option>prior_fixed_effect</option>
<option>prior_random_effect</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>prior_random_effect-&gt;</option>
<option>prior_random_xam.cpp</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Evaluate Fixed Negative Log-Likelihood for the Random Effects</big></big></b></center>

<br><a href="prior_random_effect.htm#Syntax" target="_top">Syntax</a>
<br><a href="prior_random_effect.htm#Float" target="_top">Float</a>
<br><a href="prior_random_effect.htm#prior_object" target="_top">prior_object</a>
<br><a href="prior_random_effect.htm#pack_vec" target="_top">pack_vec</a>
<br><a href="prior_random_effect.htm#residual_vec" target="_top">residual_vec</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="prior_random_effect.htm#residual_vec.index" target="_top">index</a>
<br><a href="prior_random_effect.htm#p(u|theta)" target="_top">p(u|theta)</a>
<br><a href="prior_random_effect.htm#Example" target="_top">Example</a><br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>residual_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>prior_object</span></font></i><font color="blue"><span style='white-space: nowrap'>.random(</span></font><i><font color="black"><span style='white-space: nowrap'>pack_vec</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Float" id="Float">Float</a></big></b>
<br>
The type 
<code><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i></code>
 must be <code><font color="blue">double</font></code> or
<a href="a1_double.htm" target="_top"><span style='white-space: nowrap'>a1_double</span></a>
.

<br>
<br>
<b><big><a name="prior_object" id="prior_object">prior_object</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;prior_model&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>prior_object</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
see <a href="prior_model_ctor.htm#prior_object" target="_top"><span style='white-space: nowrap'>prior_object&nbsp;constructor</span></a>
.

<br>
<br>
<b><big><a name="pack_vec" id="pack_vec">pack_vec</a></big></b>
<br>
This vector has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pack_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is all the <a href="model_variables.htm" target="_top"><span style='white-space: nowrap'>model_variables</span></a>
 in the order
specified by <a href="pack_info.htm" target="_top"><span style='white-space: nowrap'>pack_info</span></a>
.

<br>
<br>
<b><big><a name="residual_vec" id="residual_vec">residual_vec</a></big></b>
<br>
The return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;&nbsp;residual_struct&lt;</span></font><i><font color="black"><span style='white-space: nowrap'>Float</span></font></i><font color="blue"><span style='white-space: nowrap'>&gt;&nbsp;&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>residual_vec</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
The size of 
<code><i><font color="black"><span style='white-space: nowrap'>residual</span></font></i></code>
 is not equal to the number of random effects
because there are priors on smoothing differences as well as values.
The order of the residuals is unspecified (at this time).

<br>
<br>
<big><a name="residual_vec.index" id="residual_vec.index">index</a></big>
<br>
The <a href="residual_density.htm#index" target="_top"><span style='white-space: nowrap'>index</span></a>
 for each residual is

<code><font color="blue"><span style='white-space: nowrap'>3&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>var_id</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>k</span></font></i></code>
 where
<a href="var_table.htm#var_id" target="_top"><span style='white-space: nowrap'>var_id</span></a>
 is the variable index,

<code><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;0</span></font></code>
 for value priors,

<code><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;1</span></font></code>
 for age difference priors, and

<code><i><font color="black"><span style='white-space: nowrap'>k</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;2</span></font></code>
 for time difference priors.

<br>
<br>
<b><big><a name="p(u|theta)" id="p(u|theta)">p(u|theta)</a></big></b>
<br>
The log of the fixed negative log-likelihood for the
and <a href="model_variables.htm#Random Effects, u" target="_top"><span style='white-space: nowrap'>random&nbsp;effects</span></a>

given the fixed effects,
<small>@(@
\log \; \B{p}( u | \theta )
@)@</small>,
is the sum of the all the log densities corresponding to the
<a href="residual_density.htm" target="_top"><span style='white-space: nowrap'>residuals</span></a>
.



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="prior_random_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>prior_random_xam.cpp</span></a>
 contains an example and test
of using this routine.


<hr>Input File: devel/model/prior_model.cpp

</body>
</html>
