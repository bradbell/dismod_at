<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Installing dismod_at in Unix</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Installing dismod_at in Unix">
<meta name="keywords" id="keywords" content=" installing dismod_at unix system requirements c++ compiler fortran git cmake pkg-config python3 sqlite3 gsl suitesparse download dismod_at.git paths adding to path pkg_config_path ld_library_path pythonpath special run_cmake.sh eigen ipopt cppad cppad_mixed setup command build test install example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_install_unix_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>install</option>
<option>install_unix</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="dock_dismod_at.sh.htm" target="_top">Prev</a>
</td><td><a href="run_cmake.sh.htm" target="_top">Next</a>
</td><td>
<script type='text/javascript' language='JavaScript' src='_childtable_dismod_at_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_install_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_install_unix_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Installing dismod_at in Unix</big></big></b></center>

<br><a href="install_unix.htm#System Requirements" target="_top">System&nbsp;Requirements</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.C++ Compiler" target="_top">C++&nbsp;Compiler</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.Fortran Compiler" target="_top">Fortran&nbsp;Compiler</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.git" target="_top">git</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.cmake" target="_top">cmake</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.pkg-config" target="_top">pkg-config</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.python3" target="_top">python3</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.sqlite3" target="_top">sqlite3</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.gsl" target="_top">gsl</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#System Requirements.suitesparse" target="_top">suitesparse</a>
<br><a href="install_unix.htm#Download dismod_at.git" target="_top">Download&nbsp;dismod_at.git</a>
<br><a href="install_unix.htm#Paths" target="_top">Paths</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Paths.Adding to a Path" target="_top">Adding&nbsp;to&nbsp;a&nbsp;Path</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Paths.PKG_CONFIG_PATH" target="_top">PKG_CONFIG_PATH</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Paths.LD_LIBRARY_PATH" target="_top">LD_LIBRARY_PATH</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Paths.PATH" target="_top">PATH</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Paths.PYTHONPATH" target="_top">PYTHONPATH</a>
<br><a href="install_unix.htm#Special Requirements" target="_top">Special&nbsp;Requirements</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Special Requirements.run_cmake.sh" target="_top">run_cmake.sh</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Special Requirements.eigen" target="_top">eigen</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Special Requirements.ipopt" target="_top">ipopt</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Special Requirements.cppad" target="_top">cppad</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#Special Requirements.cppad_mixed" target="_top">cppad_mixed</a>
<br><a href="install_unix.htm#dismod_at" target="_top">dismod_at</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#dismod_at.Setup" target="_top">Setup</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#dismod_at.Cmake Command" target="_top">Cmake&nbsp;Command</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#dismod_at.Build" target="_top">Build</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#dismod_at.Test" target="_top">Test</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="install_unix.htm#dismod_at.Install" target="_top">Install</a>
<br><a href="install_unix.htm#Example" target="_top">Example</a>
<br><br>
<b><big><a name="System Requirements" id="System Requirements">System Requirements</a></big></b>
<br>
The following programs are required by dismod_at
and should have standard system installs:

<br>
<br>
<big><a name="System Requirements.C++ Compiler" id="System Requirements.C++ Compiler">C++ Compiler</a></big>
<br>
The <code><font color="blue">dismod_at</font></code> program can be compiled by any C++98 compliant compiler;
e.g., <code><font color="blue">g++</font></code>.
(Note that a C++11 compiler would be better.)

<br>
<br>
<big><a name="System Requirements.Fortran Compiler" id="System Requirements.Fortran Compiler">Fortran Compiler</a></big>
<br>
A fortran compiler is required by <code><font color="blue">ipopt</font></code> which in turn
is required by <code><font color="blue">dismod_at</font></code>.

<br>
<br>
<big><a name="System Requirements.git" id="System Requirements.git">git</a></big>
<br>
The <a href="https://git-scm.com/" target="_top"><span style='white-space: nowrap'>git</span></a>
 program,
a source code version control system,
is required by <code><font color="blue">dismod_at</font></code>.

<br>
<br>
<big><a name="System Requirements.cmake" id="System Requirements.cmake">cmake</a></big>
<br>
The <a href="http://www.cmake.org/" target="_top"><span style='white-space: nowrap'>cmake</span></a>
 program,
which installs other programs,
is required by <code><font color="blue">dismod_at</font></code>.

<br>
<br>
<big><a name="System Requirements.pkg-config" id="System Requirements.pkg-config">pkg-config</a></big>
<br>
The <a href="http://www.freedesktop.org/wiki/Software/pkg-config/" target="_top"><span style='white-space: nowrap'>pkg-config</span></a>

program must be installed.

<br>
<br>
<big><a name="System Requirements.python3" id="System Requirements.python3">python3</a></big>
<br>
The <a href="http://www.python.org/" target="_top"><span style='white-space: nowrap'>python3</span></a>
,
programming language.
Note may need to install some standard python packages; e.g.,
<code><font color="blue">numpy</font></code>.

<br>
<br>
<big><a name="System Requirements.sqlite3" id="System Requirements.sqlite3">sqlite3</a></big>
<br>
The <a href="href" target="_top"><span style='white-space: nowrap'>http://sqlite.org/</span></a>
 library,
version 3.7.11 (released on 2012-03-20) or higher; see
<a href="http://www.sqlite.org/changes.html" target="_top"><span style='white-space: nowrap'>sqlite&nbsp;releases</span></a>
.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install <code><font color="blue">sqlite-devel</font></code>.

<br>
<br>
<big><a name="System Requirements.gsl" id="System Requirements.gsl">gsl</a></big>

<br>
<a href="http://gnuwin32.sourceforge.net/packages/gsl.htm" target="_top"><span style='white-space: nowrap'>gsl</span></a>
,
the gnu scientific library.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install <code><font color="blue">gsl-devel</font></code>.

<br>
<br>
<big><a name="System Requirements.suitesparse" id="System Requirements.suitesparse">suitesparse</a></big>
<br>
The <a href="http://faculty.cse.tamu.edu/davis/suitesparse.html" target="_top"><span style='white-space: nowrap'>suitesparse</span></a>

sparse matrix package.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install <code><font color="blue">suitesparse-devel</font></code>.

<br>
<br>
<b><big><a name="Download dismod_at.git" id="Download dismod_at.git">Download dismod_at.git</a></big></b>
<br>
After installing the requirements above,
use the following command to get the current version of dismod_at:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git&nbsp;clone&nbsp;https://github.com/bradbell/dismod_at.git&nbsp;dismod_at.git<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cd&nbsp;dismod_at.git<br>
</span></font></code>
You can determine the 
<code><i><font color="black"><span style='white-space: nowrap'>git_hash</span></font></i></code>
 and version number
corresponding to this checkout of the master branch using the commands:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git&nbsp;show-ref&nbsp;|&nbsp;grep&nbsp;'refs/heads/master'<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grep&nbsp;'^SET(dismod_at_version'&nbsp;CMakeLists.txt<br>
</span></font></code>
You can checkout an old version corresponding to a specific 
<code><i><font color="black"><span style='white-space: nowrap'>git_hash</span></font></i></code>
,
and check its version number, using the commands:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git&nbsp;checkout&nbsp;-q&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>git_hash</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grep&nbsp;'^SET(dismod_at_version'&nbsp;CMakeLists.txt<br>
</span></font></code>
<br>
<b><big><a name="Paths" id="Paths">Paths</a></big></b>
<br>
This discussion is intended to help with the install of the
special requirements and dismod_at (see below).

<br>
<br>
<big><a name="Paths.Adding to a Path" id="Paths.Adding to a Path">Adding to a Path</a></big>
<br>
The instructions below may require you to add to a 
<code><i><font color="black"><span style='white-space: nowrap'>path_name</span></font></i></code>
.
Use the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$</span></font><i><font color="black"><span style='white-space: nowrap'>path_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
to see if your initial path is empty. If it is empty,
use the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;export&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>path_name</span></font></i><font color="blue"><span style='white-space: nowrap'>=</span></font><i><font color="black"><span style='white-space: nowrap'>directory</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
to add 
<code><i><font color="black"><span style='white-space: nowrap'>directory</span></font></i></code>
 to the path.
If it is non-empty, use

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;export&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>path_name</span></font></i><font color="blue"><span style='white-space: nowrap'>=&quot;$</span></font><i><font color="black"><span style='white-space: nowrap'>path_name</span></font></i><font color="blue"><span style='white-space: nowrap'>:</span></font><i><font color="black"><span style='white-space: nowrap'>directory</span></font></i><font color="blue"><span style='white-space: nowrap'>&quot;<br>
</span></font></code>
to add 
<code><i><font color="black"><span style='white-space: nowrap'>directory</span></font></i></code>
 to the path.

<br>
<br>
<big><a name="Paths.PKG_CONFIG_PATH" id="Paths.PKG_CONFIG_PATH">PKG_CONFIG_PATH</a></big>
<br>
After <code><font color="blue">sqlite3</font></code> and <code><font color="blue">gsl</font></code> are installed
the following commands should work:
<code><font color='blue'><pre style='display:inline'> 
     pkg-config sqlite3 --modversion
     pkg-config gsl     --modversion
</pre></font></code>
If one of them fails, a corresponding directory is missing
from the <code><font color="blue">PKG_CONFIG_PATH</font></code> environment variable.
If 
<code><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i></code>
 is the prefix where <code><font color="blue">gsl</font></code> was installed,
the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find&nbsp;-L&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-name&nbsp;gsl.pc&nbsp;2&gt;&nbsp;/dev/null<br>
</span></font></code>
should find the directory where <code><font color="blue">gsl.pc</font></code> is located.
After <a href="install_unix.htm#Special Requirements.cppad_mixed" target="_top"><span style='white-space: nowrap'>cppad_mixed</span></a>

is installed (see below),
the following command should work:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pkg-config&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pkg</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;--modversion<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>pkg</span></font></i></code>
 is any of the
<a href="install_unix.htm#Special Requirements" target="_top"><span style='white-space: nowrap'>special&nbsp;requirements</span></a>

below.
(There is one exception, the eigen package uses <code><font color="blue">eigen3</font></code> for

<code><i><font color="black"><span style='white-space: nowrap'>pkg</span></font></i></code>
 above.)
If one of these commands fails,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find&nbsp;-L&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dismod_at_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-name&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>pkg</span></font></i><font color="blue"><span style='white-space: nowrap'>.pc&nbsp;2&gt;&nbsp;/dev/null<br>
</span></font></code>
should find the directory where 
<code><i><font color="black"><span style='white-space: nowrap'>pkg</span></font></i><font color="blue"><span style='white-space: nowrap'>.pc</span></font></code>
 is located;
see <a href="run_cmake.sh.htm#dismod_at_prefix" target="_top"><span style='white-space: nowrap'>dismod_at_prefix</span></a>
.

<br>
<br>
<big><a name="Paths.LD_LIBRARY_PATH" id="Paths.LD_LIBRARY_PATH">LD_LIBRARY_PATH</a></big>
<br>
After <code><font color="blue">ipopt</font></code> is installed,
the directory where it's libraries are installed should be in your
<code><font color="blue">LD_LIBRARY_PATH</font></code>.
If you get an error finding loading the shared library corresponding; e.g.,
%libname%, use the following command to find it:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find&nbsp;-L&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dismod_at_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-name&nbsp;'</span></font><i><font color="black"><span style='white-space: nowrap'>libname</span></font></i><font color="blue"><span style='white-space: nowrap'>.*'&nbsp;2&gt;&nbsp;/dev/null<br>
</span></font></code>
see <a href="run_cmake.sh.htm#dismod_at_prefix" target="_top"><span style='white-space: nowrap'>dismod_at_prefix</span></a>
.

<br>
<br>
<big><a name="Paths.PATH" id="Paths.PATH">PATH</a></big>
<br>
After you install dismod_at (see below)
you should be able to execute the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dismod_at<br>
</span></font></code>
from any directory.
If you get the error <code><font color="blue">dismod_at: command not found</font></code>,
you will need to add the binary install directory to you path.
Use the following command to find it:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find&nbsp;-L&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dismod_at_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-name&nbsp;dismod_at&nbsp;2&gt;&nbsp;/dev/null<br>
</span></font></code>
see <a href="run_cmake.sh.htm#dismod_at_prefix" target="_top"><span style='white-space: nowrap'>dismod_at_prefix</span></a>
.

<br>
<br>
<big><a name="Paths.PYTHONPATH" id="Paths.PYTHONPATH">PYTHONPATH</a></big>
<br>
After you install dismod_at
you should be able to execute the following commands:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>python3</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;dismod_at<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quit()<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>python3</span></font></i></code>
 is your
<a href="run_cmake.sh.htm#python3_executable" target="_top"><span style='white-space: nowrap'>python3&nbsp;executable</span></a>
.
If you get the error <code><font color="blue">No module named 'dismod_at'</font></code>,
you will need to add the directory where the module is installed
to your python path.
Use the following command to find it:

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;find&nbsp;-L&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dismod_at_prefix</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;-name&nbsp;site-packages&nbsp;2&gt;&nbsp;/dev/null<br>
</span></font></code>
<br>
<b><big><a name="Special Requirements" id="Special Requirements">Special Requirements</a></big></b>
<br>
The packages listed below are required by dismod_at
and may not have standard system installs

<br>
<br>
<big><a name="Special Requirements.run_cmake.sh" id="Special Requirements.run_cmake.sh">run_cmake.sh</a></big>
<br>
The settings in <a href="run_cmake.sh.htm" target="_top"><span style='white-space: nowrap'>bin/run_cmake.sh</span></a>

are used by the
scripts that install the special requirements.
You must first change
these settings to the appropriate values for your system before
running the install scripts below:

<br>
<br>
<big><a name="Special Requirements.eigen" id="Special Requirements.eigen">eigen</a></big>
<br>
The <a href="http://eigen.tuxfamily.org" target="_top"><span style='white-space: nowrap'>eigen</span></a>

linear algebra package.
The script <code><font color="blue">bin/get_cppad_mixed.sh</font></code> (see below)
includes an install of eigen.

<br>
<br>
<big><a name="Special Requirements.ipopt" id="Special Requirements.ipopt">ipopt</a></big>
<br>
The <a href="https://projects.coin-or.org/Ipopt" target="_top"><span style='white-space: nowrap'>Ipopt</span></a>

optimization package.
The script <code><font color="blue">bin/get_cppad_mixed.sh</font></code> (see below)
includes an install of ipopt.

<br>
<br>
<big><a name="Special Requirements.cppad" id="Special Requirements.cppad">cppad</a></big>
<br>
The <a href="http://www.coin-or.org/CppAD/" target="_top"><span style='white-space: nowrap'>cppad</span></a>

C++ algorithmic differentiation package.
The script <code><font color="blue">bin/get_cppad_mixed.sh</font></code> (see below)
includes an install of cppad.

<br>
<br>
<big><a name="Special Requirements.cppad_mixed" id="Special Requirements.cppad_mixed">cppad_mixed</a></big>
<br>
The <a href="https://bradbell.github.io/cppad_mixed" target="_top"><span style='white-space: nowrap'>cppad_mixed</span></a>

C++ random effects modeling package.
Starting in the <code><font color="blue">dismod_at.git</font></code> directory, the command

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bin/get_cppad_mixed.sh<br>
</span></font></code>
can be used to install eigen, ipopt, and cppad_mixed.
This script also serves as an example of how to install cppad_mixed.

<br>
<br>
<b><big><a name="dismod_at" id="dismod_at">dismod_at</a></big></b>
<br>
The steps above should only need to be executed once, not for
each new version of <code><font color="blue">dismod_at</font></code>
(unless the <a href="release_notes.htm" target="_top"><span style='white-space: nowrap'>release_notes</span></a>
 say otherwise).
The steps below will need to be executed each time you install
a new version of <code><font color="blue">dismod_at</font></code>:

<br>
<br>
<big><a name="dismod_at.Setup" id="dismod_at.Setup">Setup</a></big>
<br>
The file <a href="run_cmake.sh.htm" target="_top"><span style='white-space: nowrap'>bin/run_cmake.sh</span></a>
 has setting that
you should change so they correspond to your machine.

<br>
<br>
<big><a name="dismod_at.Cmake Command" id="dismod_at.Cmake Command">Cmake Command</a></big>
<br>
After changing <code><font color="blue">bin/run_cmake.sh</font></code> to work for your system,
in the <code><font color="blue">dismod_at.git</font></code> directory
execute the following command:
<code><font color='blue'><pre style='display:inline'> 
     bin/run_cmake.sh
</pre></font></code>
The script also serves as an example of how to install dismod_at.

<br>
<br>
<big><a name="dismod_at.Build" id="dismod_at.Build">Build</a></big>
<br>
The following command is option and will just build the
executable program <code><font color="blue">build/devel/dismod_at</font></code>:
<code><font color='blue'><pre style='display:inline'> 
     cd build
     make
     cd ..
</pre></font></code>
<br>
<big><a name="dismod_at.Test" id="dismod_at.Test">Test</a></big>
<br>
The following commands are optional and will,
build the dismod_at executable,
build the examples and tests,
and run the examples, correctness tests, and speed tests:
<code><font color='blue'><pre style='display:inline'> 
     cd build
     make check
     make speed
     cd ..
</pre></font></code>
Some of the tests use different random number simulations each time
they are run.
If you get a correctness check failure during a <code><font color="blue">make check</font></code>
or <code><font color="blue">make speed</font></code>, try running the make command again.
If you get the same correctness check fails twice in a row,
there probably is a problem and
you should get help from the <code><font color="blue">dismod_at</font></code> development team.

<br>
<br>
<big><a name="dismod_at.Install" id="dismod_at.Install">Install</a></big>
<br>
The following command will,
build the dismod_at library and executable if necessary,
and install dismod_at:
<code><font color='blue'><pre style='display:inline'> 
     cd build
     make install
     cd ..
</pre></font></code>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="example_install.sh.htm" target="_top"><span style='white-space: nowrap'>example_install.sh</span></a>
 contains an example
install of <code><font color="blue">dismod_at</font></code>.
The section <a href="get_started.htm" target="_top"><span style='white-space: nowrap'>get_started</span></a>
 contains a list of examples and tests
of using <code><font color="blue">dismod_at</font></code>.
These tests are run as part of the <code><font color="blue">make check</font></code> command above.


<hr>Input File: omh/install/unix.omh

</body>
</html>
