<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++ prior_random: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++ prior_random: Example and Test">
<meta name="keywords" id="keywords" content=" c++ prior_random: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_prior_random_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_model</option>
<option>prior_model</option>
<option>prior_random_effect</option>
<option>prior_random_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="prior_random_effect.htm" target="_top">Prev</a>
</td><td>Current</td>
<td><a href="fit_model.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel_model-&gt;</option>
<option>devel_data_model</option>
<option>prior_model</option>
<option>fit_model</option>
<option>depend</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>prior_model-&gt;</option>
<option>prior_model_ctor</option>
<option>prior_fixed_effect</option>
<option>prior_random_effect</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>prior_random_effect-&gt;</option>
<option>prior_random_xam.cpp</option>
</select>
</td>
<td>prior_random_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>C++ prior_random: Example and Test</big></big></b></center>
<code><font color="blue"><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;limits&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;cmath&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/prior_model.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/get_density_table.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/null_int.hpp&gt;</font>

<b><font color="#000080"># define</font></b> DISMOD_AT_PRIOR_DENSITY_XAM_TRACE <font color="#993399">0</font>

<font color="#009900">bool</font> <b><font color="#000000">prior_random_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font>   ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> std<font color="#990000">::</font>cout<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> std<font color="#990000">::</font>endl<font color="#990000">;</font>
     <font color="#009900">double</font> nan <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">quiet_NaN</font></b><font color="#990000">();</font>
     <font color="#009900">double</font> eps <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">epsilon</font></b><font color="#990000">()</font> <font color="#990000">*</font> <font color="#993399">100</font><font color="#990000">;</font>
     <font color="#009900">double</font> inf <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">infinity</font></b><font color="#990000">();</font>
     <font color="#009900">double</font> sqrt_2   <font color="#990000">=</font> std<font color="#990000">::</font><b><font color="#000000">sqrt</font></b><font color="#990000">(</font> <font color="#993399">2.0</font> <font color="#990000">);</font>
     <font color="#009900">double</font> sqrt_2pi <font color="#990000">=</font> std<font color="#990000">::</font><b><font color="#000000">sqrt</font></b><font color="#990000">(</font> <font color="#993399">8.0</font> <font color="#990000">*</font> std<font color="#990000">::</font><b><font color="#000000">atan</font></b><font color="#990000">(</font><font color="#993399">1.0</font><font color="#990000">)</font> <font color="#990000">);</font>


     <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// age_table</font></i>
     <font color="#008080">size_t</font> n_age_table <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">age_table</font></b><font color="#990000">(</font>n_age_table<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age_table<font color="#990000">;</font> i<font color="#990000">++)</font>
          age_table<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">100</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_age_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// time_table</font></i>
     <font color="#008080">size_t</font> n_time_table <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">time_table</font></b><font color="#990000">(</font>n_time_table<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_time_table<font color="#990000">;</font> i<font color="#990000">++)</font>
          time_table<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#990000">(</font><font color="#993399">2015</font> <font color="#990000">-</font> <font color="#993399">1975</font><font color="#990000">)</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_time_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------- prior table ---------------------------------</font></i>
     <font color="#008080">size_t</font> n_prior_table <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;dismod_at::prior_struct&gt;</font> <b><font color="#000000">prior_table</font></b><font color="#990000">(</font>n_prior_table<font color="#990000">);</font>
     <i><font color="#9A1900">// prior_id = 0</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     <i><font color="#9A1900">// prior_id = 1</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     <i><font color="#9A1900">// size_t prior_id_none = 2;</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#990000">-</font>inf<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#990000">+</font>inf<font color="#990000">;</font>
     <font color="#008080">size_t</font> prior_id_gaussian <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>gaussian_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>std        <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> prior_id_laplace <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>laplace_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#990000">-</font><font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">4</font><font color="#990000">].</font>std        <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> prior_id_log_gaussian <font color="#990000">=</font> <font color="#993399">5</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>log_gaussian_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">0.01</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.1</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>std        <font color="#990000">=</font> <font color="#993399">0.5</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">5</font><font color="#990000">].</font>eta        <font color="#990000">=</font> <font color="#993399">1e-3</font><font color="#990000">;</font>
     <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// smoothing information</font></i>
     <font color="#008080">vector&lt;size_t&gt;</font> age_id<font color="#990000">,</font> time_id<font color="#990000">;</font>
     <font color="#008080">vector&lt;size_t&gt;</font> value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> const_value<font color="#990000">;</font>
     <font color="#008080">size_t</font> mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime<font color="#990000">;</font>
     <font color="#008080">size_t</font> n_age<font color="#990000">,</font> n_time<font color="#990000">,</font> n_grid<font color="#990000">;</font>

     <font color="#008080">vector&lt;dismod_at::smooth_info&gt;</font> <b><font color="#000000">s_info_vec</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
     <i><font color="#9A1900">// ------------------ first smoothing ------------------------------------</font></i>
     <i><font color="#9A1900">// age_id</font></i>
     n_age <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     age_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_age<font color="#990000">);</font>
     age_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     age_id<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> n_age_table <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
     age_id<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font> <font color="#990000">=</font> n_age_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">// time_id</font></i>
     n_time <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     time_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_time<font color="#990000">);</font>
     time_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     time_id<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> n_time_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">// scalar prior_id</font></i>
     mulstd_value <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     mulstd_dage  <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     mulstd_dtime <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">// grid prior ids</font></i>
     n_grid <font color="#990000">=</font> n_age <font color="#990000">*</font> n_time<font color="#990000">;</font>
     value_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dage_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dtime_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     const_value<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    value_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_gaussian<font color="#990000">;</font>
               dage_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>  <font color="#990000">=</font> prior_id_laplace<font color="#990000">;</font>
               dtime_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_log_gaussian<font color="#990000">;</font>
               const_value<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>    <font color="#990000">=</font> nan<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// s_info</font></i>
     <font color="#008080">size_t</font> smooth_id_3_by_2 <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     s_info_vec<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">smooth_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> age_id<font color="#990000">,</font> time_id<font color="#990000">,</font>
          value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">,</font> const_value<font color="#990000">,</font>
          mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime
     <font color="#990000">);</font>
     <i><font color="#9A1900">// ------------------ second smoothing -----------------------------------</font></i>
     <i><font color="#9A1900">// age_id</font></i>
     n_age <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     age_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_age<font color="#990000">);</font>
     age_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> n_age_table <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
     <i><font color="#9A1900">// time_id</font></i>
     n_time <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     time_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_time<font color="#990000">);</font>
     time_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     time_id<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> n_time_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">// scalar prior_id</font></i>
     mulstd_value <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     mulstd_dage  <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     mulstd_dtime <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">// grid prior ids</font></i>
     n_grid <font color="#990000">=</font> n_age <font color="#990000">*</font> n_time<font color="#990000">;</font>
     value_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dage_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dtime_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     const_value<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    value_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_gaussian<font color="#990000">;</font>
               dage_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>  <font color="#990000">=</font> prior_id_laplace<font color="#990000">;</font>
               dtime_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_log_gaussian<font color="#990000">;</font>
               const_value<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>    <font color="#990000">=</font> nan<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// s_info</font></i>
     <font color="#008080">size_t</font> smooth_id_1_by_2 <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     s_info_vec<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">smooth_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> age_id<font color="#990000">,</font> time_id<font color="#990000">,</font>
          value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">,</font> const_value<font color="#990000">,</font>
          mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime
     <font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------- pack_object --------------------------------</font></i>
     <i><font color="#9A1900">// smooth_table</font></i>
     <font color="#008080">vector&lt;dismod_at::smooth_struct&gt;</font> <b><font color="#000000">smooth_table</font></b><font color="#990000">(</font>s_info_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">());</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> smooth_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> smooth_id <font color="#990000">&lt;</font> s_info_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> smooth_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>n_age  <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">age_size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>n_time <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">time_size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_value_prior_id <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">mulstd_value</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_dage_prior_id <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">mulstd_dage</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_dtime_prior_id <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">mulstd_dtime</font></b><font color="#990000">()</font> <font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// mulcov_table</font></i>
     <font color="#008080">vector&lt;dismod_at::mulcov_struct&gt;</font> <b><font color="#000000">mulcov_table</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// rate_table</font></i>
     <font color="#008080">vector&lt;dismod_at::rate_struct&gt;</font>   <b><font color="#000000">rate_table</font></b><font color="#990000">(</font>dismod_at<font color="#990000">::</font>number_rate_enum<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> rate_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> rate_id <font color="#990000">&lt;</font> rate_table<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> rate_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> rate_id <font color="#990000">==</font> dismod_at<font color="#990000">::</font>pini_enum <font color="#990000">)</font>
          <font color="#FF0000">{</font>    <i><font color="#9A1900">// smoothing must have only one age</font></i>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>parent_smooth_id <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> smooth_id_1_by_2 <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_smooth_id  <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> smooth_id_1_by_2 <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_nslist_id  <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> DISMOD_AT_NULL_INT <font color="#990000">);</font>
          <font color="#FF0000">}</font>
          <b><font color="#0000FF">else</font></b>
          <font color="#FF0000">{</font>    rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>parent_smooth_id <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> smooth_id_3_by_2 <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_smooth_id  <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> smooth_id_3_by_2 <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_nslist_id  <font color="#990000">=</font>  <font color="#009900">int</font><font color="#990000">(</font> DISMOD_AT_NULL_INT <font color="#990000">);</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// pack_object</font></i>
     <i><font color="#9A1900">// values in child_id2node_id do not matter because child_nslist_id is null</font></i>
     <font color="#008080">size_t</font> n_integrand <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> n_child     <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">child_id2node_id</font></b><font color="#990000">(</font>n_child<font color="#990000">);</font>
     <font color="#008080">vector&lt;dismod_at::nslist_pair_struct&gt;</font> <b><font color="#000000">nslist_pair</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     dismod_at<font color="#990000">::</font><font color="#008080">pack_info</font> <b><font color="#000000">pack_object</font></b><font color="#990000">(</font>n_integrand<font color="#990000">,</font>
          child_id2node_id<font color="#990000">,</font> smooth_table<font color="#990000">,</font> mulcov_table<font color="#990000">,</font> rate_table<font color="#990000">,</font> nslist_pair
     <font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------- pack_vec -------------------------------------</font></i>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">pack_vec</font></b><font color="#990000">(</font> pack_object<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
     dismod_at<font color="#990000">::</font>pack_info<font color="#990000">::</font><font color="#008080">subvec_info</font> info<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// mulstd</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> smooth_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> smooth_id <font color="#990000">&lt;</font> s_info_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> smooth_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> k <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> k <font color="#990000">&lt;</font> <font color="#993399">3</font><font color="#990000">;</font> k<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    <font color="#008080">size_t</font> offset  <font color="#990000">=</font> pack_object<font color="#990000">.</font><b><font color="#000000">mulstd_offset</font></b><font color="#990000">(</font>smooth_id<font color="#990000">,</font> k<font color="#990000">);</font>
               <b><font color="#000000">assert</font></b><font color="#990000">(</font> offset <font color="#990000">!=</font> DISMOD_AT_NULL_SIZE_T <font color="#990000">);</font>
               pack_vec<font color="#990000">[</font>offset<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// rates</font></i>
     <font color="#009900">double</font> age_max  <font color="#990000">=</font> age_table<font color="#990000">[</font>n_age_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">];</font>
     <font color="#009900">double</font> time_max <font color="#990000">=</font> time_table<font color="#990000">[</font>n_time_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">];</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> rate_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> rate_id <font color="#990000">&lt;</font> rate_table<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> rate_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> child_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> child_id <font color="#990000">&lt;=</font> n_child<font color="#990000">;</font> child_id<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    info <font color="#990000">=</font> pack_object<font color="#990000">.</font><b><font color="#000000">rate_info</font></b><font color="#990000">(</font>rate_id<font color="#990000">,</font> child_id<font color="#990000">);</font>
               dismod_at<font color="#990000">::</font>smooth_info<font color="#990000">&amp;</font> s_info <font color="#990000">=</font> s_info_vec<font color="#990000">[</font>info<font color="#990000">.</font>smooth_id<font color="#990000">];</font>
               n_age  <font color="#990000">=</font> s_info<font color="#990000">.</font><b><font color="#000000">age_size</font></b><font color="#990000">();</font>
               n_time <font color="#990000">=</font> s_info<font color="#990000">.</font><b><font color="#000000">time_size</font></b><font color="#990000">();</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <font color="#009900">double</font> age <font color="#990000">=</font> age_table<font color="#990000">[</font> s_info<font color="#990000">.</font><b><font color="#000000">age_id</font></b><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">];</font>
                    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#009900">double</font> time <font color="#990000">=</font> time_table<font color="#990000">[</font> s_info<font color="#990000">.</font><b><font color="#000000">time_id</font></b><font color="#990000">(</font>j<font color="#990000">)</font> <font color="#990000">];</font>
                         <font color="#008080">size_t</font> index   <font color="#990000">=</font> info<font color="#990000">.</font>offset <font color="#990000">+</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">;</font>
                         pack_vec<font color="#990000">[</font>index<font color="#990000">]</font> <font color="#990000">=</font> age <font color="#990000">*</font> time <font color="#990000">/</font> <font color="#990000">(</font>age_max <font color="#990000">*</font> time_max<font color="#990000">);</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// mulcov_meas_value: none</font></i>
     <i><font color="#9A1900">// mulcov_meas_std: none</font></i>
     <i><font color="#9A1900">// mulcov_rate_value: none</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">prior_model</font> <b><font color="#000000">prior_object</font></b><font color="#990000">(</font>
          pack_object<font color="#990000">,</font> age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> prior_table<font color="#990000">,</font> s_info_vec
     <font color="#990000">);</font>
     <i><font color="#9A1900">// -------------- compute fixed negative log-likelihood --------------------------------</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt; dismod_at::residual_struct&lt;double&gt; &gt;</font> residual_vec<font color="#990000">;</font>
     residual_vec <font color="#990000">=</font> prior_object<font color="#990000">.</font><b><font color="#000000">random</font></b><font color="#990000">(</font>pack_vec<font color="#990000">);</font>
     <font color="#009900">double</font> logden    <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> count_abs <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> residual_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    logden <font color="#990000">+=</font> residual_vec<font color="#990000">[</font>i<font color="#990000">].</font>logden_smooth<font color="#990000">;</font>
          <b><font color="#0000FF">switch</font></b><font color="#990000">(</font> residual_vec<font color="#990000">[</font>i<font color="#990000">].</font>density <font color="#990000">)</font>
          <font color="#FF0000">{</font>    <b><font color="#0000FF">case</font></b> dismod_at<font color="#990000">::</font>laplace_enum<font color="#990000">:</font>
               <b><font color="#0000FF">case</font></b> dismod_at<font color="#990000">::</font>log_laplace_enum<font color="#990000">:</font>
               logden <font color="#990000">-=</font> std<font color="#990000">::</font><b><font color="#000000">fabs</font></b><font color="#990000">(</font> residual_vec<font color="#990000">[</font>i<font color="#990000">].</font>logden_sub_abs <font color="#990000">);</font>
               count_abs<font color="#990000">++;</font>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>

<b><font color="#008080">               default:</font></b>
               <b><font color="#0000FF">break</font></b><font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// --------------- check result ------------------------------------------</font></i>
     <font color="#009900">double</font> check  <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     <font color="#009900">double</font> mean_v <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_gaussian<font color="#990000">].</font>mean<font color="#990000">;</font>
     <font color="#009900">double</font> std_v  <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_gaussian<font color="#990000">].</font>std <font color="#990000">;</font>
     <font color="#009900">double</font> mean_a <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_laplace<font color="#990000">].</font>mean<font color="#990000">;</font>
     <font color="#009900">double</font> std_a  <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_laplace<font color="#990000">].</font>std <font color="#990000">;</font>
     <font color="#009900">double</font> mean_t <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_log_gaussian<font color="#990000">].</font>mean<font color="#990000">;</font>
     <font color="#009900">double</font> std_t  <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_log_gaussian<font color="#990000">].</font>std <font color="#990000">;</font>
     <font color="#009900">double</font> eta_t  <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id_log_gaussian<font color="#990000">].</font>eta <font color="#990000">;</font>
     <font color="#008080">size_t</font> count_laplace <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> rate_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> rate_id <font color="#990000">&lt;</font> rate_table<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> rate_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> child_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> child_id <font color="#990000">&lt;</font> n_child<font color="#990000">;</font> child_id<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    info <font color="#990000">=</font> pack_object<font color="#990000">.</font><b><font color="#000000">rate_info</font></b><font color="#990000">(</font>rate_id<font color="#990000">,</font> child_id<font color="#990000">);</font>
               dismod_at<font color="#990000">::</font>smooth_info<font color="#990000">&amp;</font> s_info <font color="#990000">=</font> s_info_vec<font color="#990000">[</font>info<font color="#990000">.</font>smooth_id<font color="#990000">];</font>
               n_age  <font color="#990000">=</font> s_info<font color="#990000">.</font><b><font color="#000000">age_size</font></b><font color="#990000">();</font>
               n_time <font color="#990000">=</font> s_info<font color="#990000">.</font><b><font color="#000000">time_size</font></b><font color="#990000">();</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
                    <font color="#FF0000">{</font>    <font color="#008080">size_t</font> index   <font color="#990000">=</font> info<font color="#990000">.</font>offset <font color="#990000">+</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">;</font>
                         <font color="#009900">double</font> var     <font color="#990000">=</font> pack_vec<font color="#990000">[</font>index<font color="#990000">];</font>
                         <font color="#009900">double</font> wres    <font color="#990000">=</font> <font color="#990000">(</font>mean_v <font color="#990000">-</font> var<font color="#990000">)</font> <font color="#990000">/</font> std_v<font color="#990000">;</font>
                         check         <font color="#990000">-=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font>std_v <font color="#990000">*</font> sqrt_2pi<font color="#990000">);</font>
                         check         <font color="#990000">-=</font> wres <font color="#990000">*</font> wres <font color="#990000">/</font> <font color="#993399">2.0</font><font color="#990000">;</font>
                         <b><font color="#0000FF">if</font></b><font color="#990000">(</font> i <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">&lt;</font> n_age <font color="#990000">)</font>
                         <font color="#FF0000">{</font>    <font color="#009900">double</font> v0    <font color="#990000">=</font> var<font color="#990000">;</font>
                              index        <font color="#990000">=</font> info<font color="#990000">.</font>offset <font color="#990000">+</font> <font color="#990000">(</font>i<font color="#990000">+</font><font color="#993399">1</font><font color="#990000">)</font> <font color="#990000">*</font> n_time <font color="#990000">+</font> j<font color="#990000">;</font>
                              <font color="#009900">double</font> v1    <font color="#990000">=</font> pack_vec<font color="#990000">[</font>index<font color="#990000">];</font>
                              <font color="#009900">double</font> dv    <font color="#990000">=</font> v1 <font color="#990000">-</font> v0<font color="#990000">;</font>
                              wres         <font color="#990000">=</font> <font color="#990000">(</font>dv <font color="#990000">-</font> mean_a<font color="#990000">)</font> <font color="#990000">/</font> std_a<font color="#990000">;</font>
                              check       <font color="#990000">-=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font> std_a <font color="#990000">*</font> sqrt_2 <font color="#990000">);</font>
                              check       <font color="#990000">-=</font> sqrt_2 <font color="#990000">*</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font>wres<font color="#990000">);</font>
                              <font color="#990000">++</font>count_laplace<font color="#990000">;</font>
                         <font color="#FF0000">}</font>
                         <b><font color="#0000FF">if</font></b><font color="#990000">(</font> j <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">&lt;</font> n_time <font color="#990000">)</font>
                         <font color="#FF0000">{</font>    <font color="#009900">double</font> v0    <font color="#990000">=</font> var<font color="#990000">;</font>
                              index        <font color="#990000">=</font> info<font color="#990000">.</font>offset <font color="#990000">+</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
                              <font color="#009900">double</font> v1    <font color="#990000">=</font> pack_vec<font color="#990000">[</font>index<font color="#990000">];</font>
                              <font color="#009900">double</font> sigma <font color="#990000">=</font> std_t<font color="#990000">;</font>
                              wres    <font color="#990000">=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font>v1 <font color="#990000">+</font> eta_t<font color="#990000">)</font> <font color="#990000">-</font> <b><font color="#000000">log</font></b><font color="#990000">(</font>v0 <font color="#990000">+</font> eta_t<font color="#990000">)</font> <font color="#990000">-</font> mean_t<font color="#990000">;</font>
                              wres   <font color="#990000">/=</font> sigma<font color="#990000">;</font>
                              check  <font color="#990000">-=</font> <b><font color="#000000">log</font></b><font color="#990000">(</font>sigma <font color="#990000">*</font> sqrt_2pi<font color="#990000">);</font>
                              check  <font color="#990000">-=</font> wres <font color="#990000">*</font> wres <font color="#990000">/</font> <font color="#993399">2.0</font><font color="#990000">;</font>
                         <font color="#FF0000">}</font>
                    <font color="#FF0000">}</font>
               <font color="#FF0000">}</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <font color="#009900">double</font> relerr <font color="#990000">=</font> <font color="#993399">1.0</font> <font color="#990000">-</font> logden <font color="#990000">/</font> check<font color="#990000">;</font>
     ok   <font color="#990000">&amp;=</font> count_laplace <font color="#990000">==</font> count_abs<font color="#990000">;</font>
     ok   <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> relerr <font color="#990000">)</font> <font color="#990000">&lt;</font> eps<font color="#990000">;</font>
<b><font color="#000080"># if</font></b> DISMOD_AT_PRIOR_DENSITY_XAM_TRACE
     cout <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
     cout <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"count_laplace = "</font> <font color="#990000">&lt;&lt;</font> count_laplace <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
     cout <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"count_abs     = "</font> <font color="#990000">&lt;&lt;</font> count_abs <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
     cout <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"check         = "</font> <font color="#990000">&lt;&lt;</font> check <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
     cout <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"logden        = "</font> <font color="#990000">&lt;&lt;</font> logden <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
     cout <font color="#990000">&lt;&lt;</font> <font color="#FF0000">"relerr        = "</font> <font color="#990000">&lt;&lt;</font> relerr <font color="#990000">&lt;&lt;</font> endl<font color="#990000">;</font>
<b><font color="#000080"># endif</font></b>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
</font></code>
<hr>Input File: example/devel/model/prior_random_xam.cpp

</body>
</html>
