<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Use C++ to Create a Database Table</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Use C++ to Create a Database Table">
<meta name="keywords" id="keywords" content=" use c++ to create database table syntax purpose db table_name col_name col_type col_unique row_value single quote null table_name_id example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_cpp_create_table_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_table</option>
<option>cpp_create_table</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="check_zero_sum.htm" target="_top">Prev</a>
</td><td>
<select onchange='choose_current0(this)'>
<option>Current-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>db</option>
<option>table_name</option>
<option>col_name</option>
<option>col_type</option>
<option>col_unique</option>
<option>row_value</option>
<option>---..single quote</option>
<option>---..null</option>
<option>table_name_id</option>
<option>Example</option>
</select>
</td>
<td><a href="create_table_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>dismod_at-&gt;</option>
<option>intro_math</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2018</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>devel_table-&gt;</option>
<option>check_child_prior</option>
<option>check_pini_n_age</option>
<option>check_rate_limit</option>
<option>check_table_id</option>
<option>check_zero_sum</option>
<option>cpp_create_table</option>
<option>exec_sql_cmd</option>
<option>get_age_table</option>
<option>get_avgint_table</option>
<option>get_column_max</option>
<option>get_covariate_table</option>
<option>get_data_table</option>
<option>get_db_input</option>
<option>get_density_table</option>
<option>get_integrand_table</option>
<option>get_mulcov_table</option>
<option>get_node_table</option>
<option>get_option_table</option>
<option>get_prior_table</option>
<option>get_rate_table</option>
<option>get_sample_table</option>
<option>get_data_sim_table</option>
<option>get_smooth_grid</option>
<option>get_nslist_table</option>
<option>get_nslist_pair</option>
<option>get_smooth_table</option>
<option>get_table_column</option>
<option>get_time_table</option>
<option>get_weight_grid</option>
<option>get_weight_table</option>
<option>log_message</option>
<option>put_table_row</option>
<option>open_connection</option>
<option>smooth_info</option>
<option>weight_info</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>cpp_create_table-&gt;</option>
<option>create_table_xam.cpp</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>Use C++ to Create a Database Table</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"><span style='white-space: nowrap'>dismod_at.create_table(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>db</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_type</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_unique</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>row_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Create a table and place data in the table.

<br>
<br>
<b><big><a name="db" id="db">db</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlite3*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>db</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the database we are placing the table into.

<br>
<br>
<b><big><a name="table_name" id="table_name">table_name</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the name of the table we are putting information into.

<br>
<br>
<b><big><a name="col_name" id="col_name">col_name</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;std::string&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is a vector of the names for the column names in this table.
The size of this vector must greater than zero
and is number of columns in the table
minus one (the primary key column is not included).
The primary key first is the first column,
and then the order of the other columns in the same order as 
<code><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i></code>
.

<br>
<br>
<b><big><a name="col_type" id="col_type">col_type</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;std::string&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_type</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It has the same size and order as 
<code><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i></code>
 and specifies
the type for the corresponding columns.
The valid types are <code><font color="blue">text</font></code>, <code><font color="blue">integer</font></code>, and <code><font color="blue">real</font></code>.

<br>
<br>
<b><big><a name="col_unique" id="col_unique">col_unique</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;bool&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_unique</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It has the same size and order as 
<code><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i></code>
 and specifies
if the corresponding columns have a
<code><font color="blue">unique</font></code> constraint (no repeated values).

<br>
<br>
<b><big><a name="row_value" id="row_value">row_value</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;std::string&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>row_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
We use 
<code><i><font color="black"><span style='white-space: nowrap'>n_row</span></font></i></code>
 for the number of rows in the table.
The size of 
<code><i><font color="black"><span style='white-space: nowrap'>row_value</span></font></i></code>
 is 
<code><i><font color="black"><span style='white-space: nowrap'>n_row</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_name.size()</span></font></i></code>
.
For 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;0&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_row</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,

<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;0&nbsp;,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>...</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_name.size()</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>row_value</span></font></i><font color="blue"><span style='white-space: nowrap'>[&nbsp;i&nbsp;*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;]<br>
</span></font></code>
is the value placed in the <code><i>i</i></code>-th row and column with name

<code><i><font color="black"><span style='white-space: nowrap'>col_name</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"></font></code>
.

<br>
<br>
<big><a name="row_value.single quote" id="row_value.single quote">single quote</a></big>
<br>
The single quote character cannot appear in any of the values.
If the column has type <code><font color="blue">text</font></code>, its values get surrounded by
the single quote character <code><font color="blue">'</font></code>.

<br>
<br>
<big><a name="row_value.null" id="row_value.null">null</a></big>
<br>
Note that the special case where the value is the empty string,
and the type is <code><font color="blue">integer</font></code> or <code><font color="blue">real</font></code>, the <code><font color="blue">null</font></code>
value is placed at the corresponding location in the table.

<br>
<br>
<b><big><a name="table_name_id" id="table_name_id">table_name_id</a></big></b>
<br>
A column with name 
<code><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'>_id</span></font></code>
 and type
<code><font color="blue">integer primary key</font></code> is included as the first column in the table.
Its values start with zero (for the first row) and
increment by one for each row.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="create_table_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>create_table_xam.cpp</span></a>
 is an example use of
<code><font color="blue">cpp_create_table</font></code>.


<hr>Input File: devel/table/create_table.cpp

</body>
</html>
