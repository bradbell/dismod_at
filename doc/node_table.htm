<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>The Node Table</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="The Node Table">
<meta name="keywords" id="keywords" content=" the node table node_id node_name parent children descendant example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_node_table_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>database</option>
<option>input</option>
<option>node_table</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="mulcov_table.py.htm" target="_top">Prev</a>
</td><td><a href="node_table.py.htm" target="_top">Next</a>
</td><td>
<script type='text/javascript' language='JavaScript' src='_childtable_dismod_at_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_database_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_input_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_node_table_htm.js'></script>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>The Node Table</big></big></b></center>

<br><a href="node_table.htm#node_id" target="_top">node_id</a>
<br><a href="node_table.htm#node_name" target="_top">node_name</a>
<br><a href="node_table.htm#parent" target="_top">parent</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="node_table.htm#parent.Children" target="_top">Children</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="node_table.htm#parent.Descendant" target="_top">Descendant</a>
<br><a href="node_table.htm#Example" target="_top">Example</a>
<br>The node table defines a graph that is a tree by specifying
the parent for each node.
The <code><font color="blue">node</font></code> table has the following columns:

<br>
<br>
<b><big><a name="node_id" id="node_id">node_id</a></big></b>
<br>
This column has type <code><font color="blue">integer</font></code> and is the primary key for this table.
Its initial value is zero, and it increments by one for each row.

<br>
<br>
<b><big><a name="node_name" id="node_name">node_name</a></big></b>
<br>
This column has type <code><font color="blue">text</font></code> and has a different value for every row;
i.e., the names are unique and can act as substitutes for the primary key.
The names are intended to be easier for a human to remember than the ids.

<br>
<br>
<b><big><a name="parent" id="parent">parent</a></big></b>
<br>
This column has type <code><font color="blue">integer</font></code> and is the 
<code><i><font color="black"><span style='white-space: nowrap'>node_id</span></font></i></code>

of the parent for this node.
If this node has no parents, 
<code><i><font color="black"><span style='white-space: nowrap'>parent</span></font></i></code>
 is <code><font color="blue">null</font></code>.
Note that this is a value for the primary key in this table, but
the name of this column does not follow the
<a href="database.htm#Foreign Key.parent" target="_top"><span style='white-space: nowrap'>foreign&nbsp;key</span></a>
 naming convention.

<br>
<br>
<big><a name="parent.Children" id="parent.Children">Children</a></big>
<br>
The children for node 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 is the sent of 
<code><i><font color="black"><span style='white-space: nowrap'>node_id</span></font></i></code>
 values
such that the corresponding 
<code><i><font color="black"><span style='white-space: nowrap'>parent</span></font></i></code>
 is equal to 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
.

<br>
<br>
<big><a name="parent.Descendant" id="parent.Descendant">Descendant</a></big>
<br>
The set of descendants for a node 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 is the
set children of 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
, grand children of 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
, 
<code><i><font color="black"><span style='white-space: nowrap'>...</span></font></i></code>
.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="node_table.py.htm" target="_top"><span style='white-space: nowrap'>node_table.py</span></a>

contains an example <code><font color="blue">node</font></code> table.


<hr>Input File: omh/table/node_table.omh

</body>
</html>
