<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Extract and Organize Information for One Smoothing</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Extract and Organize Information for One Smoothing">
<meta name="keywords" id="keywords" content=" extract organize information one smoothing syntax default constructor normal testing assignment member functions purpose checks s_info age_table time_table smooth_id smooth_table smooth_grid_table s_test age_id time_id type_prior_id mulstd_type s_default n_age n_time i j a_id t_id c_value i_type m_type example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_smooth_info_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_table</option>
<option>smooth_info</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="open_connection.htm" target="_top">Prev</a>
</td><td><a href="smooth_info_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>dismod_at-&gt;</option>
<option>math_abstract</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2018</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>devel_table-&gt;</option>
<option>check_child_prior</option>
<option>check_pini_n_age</option>
<option>check_rate_limit</option>
<option>check_table_id</option>
<option>check_zero_sum</option>
<option>cpp_create_table</option>
<option>exec_sql_cmd</option>
<option>get_age_table</option>
<option>get_avgint_table</option>
<option>get_column_max</option>
<option>get_covariate_table</option>
<option>get_data_table</option>
<option>get_db_input</option>
<option>get_density_table</option>
<option>get_integrand_table</option>
<option>get_mulcov_table</option>
<option>get_node_table</option>
<option>get_option_table</option>
<option>get_prior_table</option>
<option>get_rate_table</option>
<option>get_sample_table</option>
<option>get_data_sim_table</option>
<option>get_smooth_grid</option>
<option>get_nslist_table</option>
<option>get_nslist_pair</option>
<option>get_smooth_table</option>
<option>get_table_column</option>
<option>get_time_table</option>
<option>get_weight_grid</option>
<option>get_weight_table</option>
<option>log_message</option>
<option>put_table_row</option>
<option>open_connection</option>
<option>smooth_info</option>
<option>weight_info</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>smooth_info-&gt;</option>
<option>smooth_info_xam.cpp</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Extract and Organize Information for One Smoothing</big></big></b></center>

<br><a href="smooth_info.htm#Syntax" target="_top">Syntax</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#Syntax.Default Constructor" target="_top">Default&nbsp;Constructor</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#Syntax.Normal Constructor" target="_top">Normal&nbsp;Constructor</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#Syntax.Testing Constructor" target="_top">Testing&nbsp;Constructor</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#Syntax.Assignment" target="_top">Assignment</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#Syntax.Member Functions" target="_top">Member&nbsp;Functions</a>
<br><a href="smooth_info.htm#Purpose" target="_top">Purpose</a>
<br><a href="smooth_info.htm#Checks in Normal Constructor" target="_top">Checks&nbsp;in&nbsp;Normal&nbsp;Constructor</a>
<br><a href="smooth_info.htm#s_info" target="_top">s_info</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.age_table" target="_top">age_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.time_table" target="_top">time_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.smooth_id" target="_top">smooth_id</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.smooth_table" target="_top">smooth_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.smooth_grid_table" target="_top">smooth_grid_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_info.s_info" target="_top">s_info</a>
<br><a href="smooth_info.htm#s_test" target="_top">s_test</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.age_table" target="_top">age_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.time_table" target="_top">time_table</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.age_id" target="_top">age_id</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.time_id" target="_top">time_id</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.type_prior_id" target="_top">type_prior_id</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="smooth_info.htm#s_test.mulstd_type" target="_top">mulstd_type</a>
<br><a href="smooth_info.htm#s_default" target="_top">s_default</a>
<br><a href="smooth_info.htm#n_age" target="_top">n_age</a>
<br><a href="smooth_info.htm#n_time" target="_top">n_time</a>
<br><a href="smooth_info.htm#i" target="_top">i</a>
<br><a href="smooth_info.htm#j" target="_top">j</a>
<br><a href="smooth_info.htm#a_id" target="_top">a_id</a>
<br><a href="smooth_info.htm#t_id" target="_top">t_id</a>
<br><a href="smooth_info.htm#c_value" target="_top">c_value</a>
<br><a href="smooth_info.htm#i_type" target="_top">i_type</a>
<br><a href="smooth_info.htm#m_type" target="_top">m_type</a>
<br><a href="smooth_info.htm#Example" target="_top">Example</a><br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>


<br>
<br>
<big><a name="Syntax.Default Constructor" id="Syntax.Default Constructor">Default Constructor</a></big>

<br>

<code><font color="blue"><span style='white-space: nowrap'>smooth_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_default</span></font></i><font color="blue"><span style='white-space: nowrap'>()<br>
</span></font></code>
<br>
<big><a name="Syntax.Normal Constructor" id="Syntax.Normal Constructor">Normal Constructor</a></big>

<br>

<code><font color="blue"><span style='white-space: nowrap'>smooth_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_table</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_table</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_table</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_grid_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)<br>
</span></font></code>
<br>
<big><a name="Syntax.Testing Constructor" id="Syntax.Testing Constructor">Testing Constructor</a></big>

<br>

<code><font color="blue"><span style='white-space: nowrap'>smooth_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_test</span></font></i><font color="blue"><span style='white-space: nowrap'>(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_table</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_table</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>value_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dage_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dtime_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>const_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dage</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)<br>
</span></font></code>
<br>
<big><a name="Syntax.Assignment" id="Syntax.Assignment">Assignment</a></big>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>s_default</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<big><a name="Syntax.Member Functions" id="Syntax.Member Functions">Member Functions</a></big>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.age_size()<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_size()<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>a_id</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.age_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>t_id</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_id(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>c_value</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.const_value(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>i_type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.</span></font><i><font color="black"><span style='white-space: nowrap'>type</span></font></i><font color="blue"><span style='white-space: nowrap'>_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><i><font color="black"><span style='white-space: nowrap'>m_type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.mulstd_</span></font><i><font color="black"><span style='white-space: nowrap'>type</span></font></i><font color="blue"><span style='white-space: nowrap'>()<br>
</span></font></code>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
Extracts, combines, and organizes the information for one smoothing from
the <a href="smooth_table.htm" target="_top"><span style='white-space: nowrap'>smooth</span></a>
 and <a href="smooth_grid_table.htm" target="_top"><span style='white-space: nowrap'>smooth_grid</span></a>

tables.

<br>
<br>
<b><big><a name="Checks in Normal Constructor" id="Checks in Normal Constructor">Checks in Normal Constructor</a></big></b>

<ol type="1"><li>
Checks the <code><font color="blue">smooth_grid</font></code> table
<a href="smooth_grid_table.htm#Rectangular Grid" target="_top"><span style='white-space: nowrap'>rectangular&nbsp;grid</span></a>
 assumption.
</li><li>

For each <a href="smooth_table.htm#smooth_id" target="_top"><span style='white-space: nowrap'>smooth_id</span></a>
,
check that the <a href="smooth_table.htm" target="_top"><span style='white-space: nowrap'>smooth_table</span></a>
 values
<a href="smooth_table.htm#n_age" target="_top"><span style='white-space: nowrap'>n_age</span></a>
 and
<a href="smooth_table.htm#n_time" target="_top"><span style='white-space: nowrap'>n_time</span></a>
 are the number if age values
and number of time values in the corresponding rectangular grid in
<a href="smooth_grid_table.htm" target="_top"><span style='white-space: nowrap'>smooth_grid_table</span></a>
.
</li><li>

Sets
<a href="smooth_grid_table.htm#dage_prior_id" target="_top"><span style='white-space: nowrap'>dage_prior_id</span></a>

(<a href="smooth_grid_table.htm#dtime_prior_id" target="_top"><span style='white-space: nowrap'>dtime_prior_id</span></a>
)
to <code><font color="blue">DISMOD_AT_NULL_SIZE_T</font></code> for the maximum age (time) points.
</li><li>

Checks that
<a href="smooth_grid_table.htm#dage_prior_id" target="_top"><span style='white-space: nowrap'>dage_prior_id</span></a>

(<a href="smooth_grid_table.htm#dtime_prior_id" target="_top"><span style='white-space: nowrap'>dtime_prior_id</span></a>
)
is not <code><font color="blue">DISMOD_AT_NULL_SIZE_T</font></code>
for points that are not at maximum age (time).
</li></ol>


<br>
<br>
<b><big><a name="s_info" id="s_info">s_info</a></big></b>
<br>
In all its uses, except during construction,
this object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;smooth_info&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
The meaning of the corresponding constructor arguments are specified below:

<br>
<br>
<big><a name="s_info.age_table" id="s_info.age_table">age_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_age_table.htm" target="_top"><span style='white-space: nowrap'>age_table</span></a>
.

<br>
<br>
<big><a name="s_info.time_table" id="s_info.time_table">time_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_time_table.htm" target="_top"><span style='white-space: nowrap'>time_table</span></a>
.

<br>
<br>
<big><a name="s_info.smooth_id" id="s_info.smooth_id">smooth_id</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="smooth_grid_table.htm#smooth_id" target="_top"><span style='white-space: nowrap'>smooth_id</span></a>
 for the
smoothing that 
<code><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i></code>
 corresponds to.

<br>
<br>
<big><a name="s_info.smooth_table" id="s_info.smooth_table">smooth_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;smooth_struct&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_smooth_table.htm" target="_top"><span style='white-space: nowrap'>smooth_table</span></a>
.

<br>
<br>
<big><a name="s_info.smooth_grid_table" id="s_info.smooth_grid_table">smooth_grid_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;smooth_grid_struct&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>smooth_grid_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_smooth_grid.htm" target="_top"><span style='white-space: nowrap'>smooth_grid_table</span></a>
.

<br>
<br>
<big><a name="s_info.s_info" id="s_info.s_info">s_info</a></big>
<br>
This result has type <code><font color="blue">smooth_info</font></code>.
All of the functions calls in the syntax above are <code><font color="blue">const</font></code>; i.e.,
they do not modify 
<code><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i></code>
.

<br>
<br>
<b><big><a name="s_test" id="s_test">s_test</a></big></b>
<br>
This constructor is used for testing purposes only.
The meaning of its arguments are specified below:

<br>
<br>
<big><a name="s_test.age_table" id="s_test.age_table">age_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_age_table.htm" target="_top"><span style='white-space: nowrap'>age_table</span></a>
.

<br>
<br>
<big><a name="s_test.time_table" id="s_test.time_table">time_table</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_table</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <a href="get_time_table.htm" target="_top"><span style='white-space: nowrap'>time_table</span></a>
.

<br>
<br>
<big><a name="s_test.age_id" id="s_test.age_id">age_id</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;size_t&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the age grid indices; i.e.

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.age_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>age_id</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
</span></font></code>
<br>
<big><a name="s_test.time_id" id="s_test.time_id">time_id</a></big>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;CppAD::vector&lt;size_t&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the time grid indices; i.e.

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_id(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_id</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
</span></font></code>
<br>
<big><a name="s_test.type_prior_id" id="s_test.type_prior_id">type_prior_id</a></big>
<br>
For 
<code><i><font color="black"><span style='white-space: nowrap'>type</span></font></i></code>
 equal to
<code><font color="blue">value</font></code>, <code><font color="blue">dage</font></code> and <code><font color="blue">dtime</font></code>
these arguments have prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
const&nbsp;CppAD::vector&lt;size_t&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>value_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dage_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dtime_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
They specify the prior grid indices; i.e.

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.value_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>value_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.dage_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;&nbsp;=&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dage_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.dtime_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>dtime_prior_id</span></font></i><font color="blue"><span style='white-space: nowrap'>[</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;+&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>]<br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>time_id</span></font></i><font color="blue"><span style='white-space: nowrap'>.size()</span></font></code>
.
There is an exception here,

<code><font color="blue"><span style='white-space: nowrap'>dage_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>

returns null when %i% is the last age index and

<code><font color="blue"><span style='white-space: nowrap'>dtime_prior_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>

returns null when %j% is the last time index.


<br>
<br>
<big><a name="s_test.mulstd_type" id="s_test.mulstd_type">mulstd_type</a></big>
<br>
For 
<code><i><font color="black"><span style='white-space: nowrap'>type</span></font></i></code>
 equal to
<code><font color="blue">value</font></code>, <code><font color="blue">dage</font></code> and <code><font color="blue">dtime</font></code>
these arguments have prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dage</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
They specify the prior indices for the multiplies; i.e.,

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.mulstd_value()&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.mulstd_dage()&nbsp;&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dage</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.mulstd_dtime()&nbsp;&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>mulstd_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="s_default" id="s_default">s_default</a></big></b>
<br>
This is the default constructor. It can be used to create
an empty <code><font color="blue">smooth_info</font></code> object that is later set equal
to another <code><font color="blue">weight_info</font></code> object.
This is useful when creating vectors of such objects.

<br>
<br>
<b><big><a name="n_age" id="n_age">n_age</a></big></b>
<br>
This result has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the number of age values for this smoothing.

<br>
<br>
<b><big><a name="n_time" id="n_time">n_time</a></big></b>
<br>
This result has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the number of time values for this smoothing.

<br>
<br>
<b><big><a name="i" id="i">i</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the age index; 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i></code>
.

<br>
<br>
<b><big><a name="j" id="j">j</a></big></b>
<br>
The argument 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the time index; 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i></code>
.

<br>
<br>
<b><big><a name="a_id" id="a_id">a_id</a></big></b>
<br>
This return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>a_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <code><i>i</i></code>-th <a href="smooth_grid_table.htm#age_id" target="_top"><span style='white-space: nowrap'>age_id</span></a>

for this smoothing and increases with 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
; i.e.,
for 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_age</span></font></i><font color="blue"><span style='white-space: nowrap'>-2</span></font></code>


<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.age_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.age_id(</span></font><i><font color="black"><span style='white-space: nowrap'>i</span></font></i><font color="blue"><span style='white-space: nowrap'>+1)<br>
</span></font></code>
<br>
<b><big><a name="t_id" id="t_id">t_id</a></big></b>
<br>
This return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>t_id</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the <code><i>j</i></code>-th <a href="smooth_grid_table.htm#time_id" target="_top"><span style='white-space: nowrap'>time_id</span></a>

for this smoothing and increases with 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
; i.e.,
for 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>n_time</span></font></i><font color="blue"><span style='white-space: nowrap'>-2</span></font></code>


<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_id(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>)&nbsp;&lt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s_info</span></font></i><font color="blue"><span style='white-space: nowrap'>.time_id(</span></font><i><font color="black"><span style='white-space: nowrap'>j</span></font></i><font color="blue"><span style='white-space: nowrap'>+1)<br>
</span></font></code>
<br>
<b><big><a name="c_value" id="c_value">c_value</a></big></b>
<br>
This return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>c_value</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font><i><font color="black"></font></i></code>
If it is <code><font color="blue">nan</font></code>, then 
<code><i><font color="black"><span style='white-space: nowrap'>i_value</span></font></i></code>
 (see below) specifies
the prior distribution for the value at this grid point.
If 
<code><i><font color="black"><span style='white-space: nowrap'>c_value</span></font></i></code>
 is not <code><font color="blue">nan</font></code>,
the value at this grid point is constrained to be 
<code><i><font color="black"><span style='white-space: nowrap'>c_value</span></font></i></code>
.

<br>
<br>
<b><big><a name="i_type" id="i_type">i_type</a></big></b>
<br>
For 
<code><i><font color="black"><span style='white-space: nowrap'>type</span></font></i></code>
 equal to
<code><font color="blue">value</font></code>, <code><font color="blue">dage</font></code> and <code><font color="blue">dtime</font></code>
these return values have prototypes

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i_dage</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>i_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and are the
<a href="smooth_grid_table.htm#value_prior_id" target="_top"><span style='white-space: nowrap'>value_prior_id</span></a>
,
<a href="smooth_grid_table.htm#dage_prior_id" target="_top"><span style='white-space: nowrap'>dage_prior_id</span></a>
, and
<a href="smooth_grid_table.htm#dtime_prior_id" target="_top"><span style='white-space: nowrap'>dtime_prior_id</span></a>

corresponding to age index 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 and time index 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
.
If 
<code><i><font color="black"><span style='white-space: nowrap'>i_value</span></font></i></code>
 is (is not) <code><font color="blue">DISMOD_AT_NULL_SIZE_T</font></code>,

<code><i><font color="black"><span style='white-space: nowrap'>c_value</span></font></i></code>
 is not (is) <code><font color="blue">nan</font></code>.

<br>
<br>
<b><big><a name="m_type" id="m_type">m_type</a></big></b>
<br>
For 
<code><i><font color="black"><span style='white-space: nowrap'>type</span></font></i></code>
 equal to
<code><font color="blue">value</font></code>, <code><font color="blue">dage</font></code> and <code><font color="blue">dtime</font></code>
these return values have prototypes

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m_dage</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>m_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and are the
<a href="smooth_table.htm#mulstd_value_prior_id" target="_top"><span style='white-space: nowrap'>mulstd_value_prior_id</span></a>
,
<a href="smooth_table.htm#mulstd_dage_prior_id" target="_top"><span style='white-space: nowrap'>mulstd_dage_prior_id</span></a>
, and
<a href="smooth_table.htm#mulstd_dtime_prior_id" target="_top"><span style='white-space: nowrap'>mulstd_dtime_prior_id</span></a>

for this smoothing.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="smooth_info_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>smooth_info_xam.cpp</span></a>
 contains an example that uses
this function.


<hr>Input File: devel/table/smooth_info.cpp

</body>
</html>
