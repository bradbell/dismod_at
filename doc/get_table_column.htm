<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++: Get The Type and Values in a Table Column</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++: Get The Type and Values in a Table Column">
<meta name="keywords" id="keywords" content=" c++: get the type values table column syntax db table_name column_name column_type result text integer real example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_get_table_column_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_table</option>
<option>get_table_column</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="get_smooth_table.htm" target="_top">Prev</a>
</td><td><a href="get_table_column_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>dismod_at-&gt;</option>
<option>math_abstract</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2018</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>devel_table-&gt;</option>
<option>check_child_prior</option>
<option>check_pini_n_age</option>
<option>check_rate_limit</option>
<option>check_table_id</option>
<option>check_zero_sum</option>
<option>cpp_create_table</option>
<option>exec_sql_cmd</option>
<option>get_age_table</option>
<option>get_avgint_table</option>
<option>get_column_max</option>
<option>get_covariate_table</option>
<option>get_data_table</option>
<option>get_db_input</option>
<option>get_density_table</option>
<option>get_integrand_table</option>
<option>get_mulcov_table</option>
<option>get_node_table</option>
<option>get_option_table</option>
<option>get_prior_table</option>
<option>get_rate_table</option>
<option>get_sample_table</option>
<option>get_data_sim_table</option>
<option>get_smooth_grid</option>
<option>get_nslist_table</option>
<option>get_nslist_pair</option>
<option>get_smooth_table</option>
<option>get_table_column</option>
<option>get_time_table</option>
<option>get_weight_grid</option>
<option>get_weight_table</option>
<option>log_message</option>
<option>put_table_row</option>
<option>open_connection</option>
<option>smooth_info</option>
<option>weight_info</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>get_table_column-&gt;</option>
<option>get_table_column_xam.cpp</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>C++: Get The Type and Values in a Table Column</big></big></b></center>

<br><a href="get_table_column.htm#Syntax" target="_top">Syntax</a>
<br><a href="get_table_column.htm#db" target="_top">db</a>
<br><a href="get_table_column.htm#table_name" target="_top">table_name</a>
<br><a href="get_table_column.htm#column_name" target="_top">column_name</a>
<br><a href="get_table_column.htm#column_type" target="_top">column_type</a>
<br><a href="get_table_column.htm#result" target="_top">result</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_table_column.htm#result.text" target="_top">text</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_table_column.htm#result.integer" target="_top">integer</a>
<br>&#160;&#160;&#160;&#160;&#160;<a href="get_table_column.htm#result.real" target="_top">real</a>
<br><a href="get_table_column.htm#Example" target="_top">Example</a><br>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>column_type</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;get_table_column_type(</span></font><i><font color="black"><span style='white-space: nowrap'>db</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>column_name</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>

<code><font color="blue"><span style='white-space: nowrap'>get_table_column(</span></font><i><font color="black"><span style='white-space: nowrap'>db</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>column_name</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="db" id="db">db</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlite3*&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>db</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the database we are getting information from.

<br>
<br>
<b><big><a name="table_name" id="table_name">table_name</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>table_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the name of the table we are getting information from.

<br>
<br>
<b><big><a name="column_name" id="column_name">column_name</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::string&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>column_name</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and is the name of the column we are getting information from.

<br>
<br>
<b><big><a name="column_type" id="column_type">column_type</a></big></b>
<br>
This return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::string&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>column_type</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
Its value is either <code><font color="blue">text</font></code>, <code><font color="blue">integer</font></code>, or <code><font color="blue">real</font></code>
depending on the type of the column in the database.

<br>
<br>
<b><big><a name="result" id="result">result</a></big></b>
<br>
The input size of this vector must be zero.
Upon return it contains the values in the specified column.
The results are ordered using the <a href="database.htm#Primary Key" target="_top"><span style='white-space: nowrap'>primary&nbsp;key</span></a>

for this table.

<br>
<br>
<big><a name="result.text" id="result.text">text</a></big>
<br>
If the column has type <code><font color="blue">text</font></code>, this argument has
prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;std::string&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It is an error for any of the text values
in the database to be <code><font color="blue">null</font></code>.

<br>
<br>
<big><a name="result.integer" id="result.integer">integer</a></big>
<br>
If the column has type <code><font color="blue">integer</font></code>, this argument has
prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;int&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If an integer value is <code><font color="blue">null</font></code>,
it is returned as the <code><font color="blue">int</font></code> value

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::limits&lt;int&gt;::min()<br>
</span></font></code>
It is an error for any of the integer values in the database to
have this value.

<br>
<br>
<big><a name="result.real" id="result.real">real</a></big>
<br>
If the column has type <code><font color="blue">real</font></code>, this argument has
prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CppAD::vector&lt;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>result</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
If a real value is <code><font color="blue">null</font></code>, it is returned as the <code><font color="blue">double</font></code>
value <code><font color="blue">nan</font></code>.
Note that it is not possible for a database value to be <code><font color="blue">nan</font></code>.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="get_table_column_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>get_table_column_xam.cpp</span></a>
 contains an example that uses
this function.


<hr>Input File: devel/table/get_table_column.cpp

</body>
</html>
