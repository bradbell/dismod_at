<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'
>
</script>
<head>
<title>Get Solution Corresponding to Previous Fit</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Get Solution Corresponding to Previous Fit">
<meta name="keywords" id="keywords" content=" get solution corresponding to previous fit syntax fit_object fit_var_value lagrange_value lagrange_dage lagrange_dtime example prototype ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_fit_model_get_solution_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="fit_model_run_fit.htm" target="_top">Prev</a>
</td><td><a href="fit_model_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_model</option>
<option>fit_model</option>
<option>fit_model_get_solution</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>dismod_at-&gt;</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2017</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel_model-&gt;</option>
<option>devel_data_model</option>
<option>prior_model</option>
<option>fit_model</option>
<option>depend</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>fit_model-&gt;</option>
<option>fit_model_ctor</option>
<option>fit_model_run_fit</option>
<option>fit_model_get_solution</option>
<option>fit_model_sample_posterior</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>fit_model_get_solution-&gt;</option>
<option>fit_model_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>fit_object</option>
<option>fit_var_value</option>
<option>lagrange_value</option>
<option>lagrange_dage</option>
<option>lagrange_dtime</option>
<option>Example</option>
<option>Prototype</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Get Solution Corresponding to Previous Fit</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><font color="blue"></font><i><font color="black"><span style='white-space: nowrap'>fit_object</span></font></i><font color="blue"><span style='white-space: nowrap'>.get_solution(<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>fit_var_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>lagrange_value</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>lagrange_dage</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>lagrange_dtime</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
)</span></font></code>


<br>
<br>
<b><big><a name="fit_object" id="fit_object">fit_object</a></big></b>
<br>
see <a href="fit_model_ctor.htm#fit_object" target="_top"><span style='white-space: nowrap'>fit_object</span></a>
.

<br>
<br>
<b><big><a name="fit_var_value" id="fit_var_value">fit_var_value</a></big></b>
<br>
The size of this vector size is zero or
equal to the number of model variables.
The input value of its elements does not matter.
Upon return it is the optimal <a href="model_variables.htm" target="_top"><span style='white-space: nowrap'>variable&nbsp;values</span></a>
 in
<a href="pack_info.htm" target="_top"><span style='white-space: nowrap'>pack_info</span></a>
 order.

<br>
<br>
<b><big><a name="lagrange_value" id="lagrange_value">lagrange_value</a></big></b>
<br>
The size of this vector size is zero or
equal to the number of model variables.
The input value of its elements does not matter.
Upon return it is the Lagrange multipliers for the lower and upper
limits on the corresponding model variables.
If there is no limit, or if a limit is not active, the corresponding
element is zero.

<br>
<br>
<b><big><a name="lagrange_dage" id="lagrange_dage">lagrange_dage</a></big></b>
<br>
The size of this vector size is zero or
equal to the number of model variables.
The input value of its elements does not matter.
Upon return it is the Lagrange multipliers for the lower and upper
limits on the forward age difference for all the variables.
If a variable does not have a forward age difference,
if there is no limit, or if a limit is not active, the corresponding
element is zero.

<br>
<br>
<b><big><a name="lagrange_dtime" id="lagrange_dtime">lagrange_dtime</a></big></b>
<br>
The size of this vector size is zero or
equal to the number of model variables.
The input value of its elements does not matter,
Upon return it is the Lagrange multipliers for the lower and upper
limits on the forward time difference for all the variable.
If a variable does not have a forward time difference,
if there is no limit, or if a limit is not active, the corresponding
element is zero.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="fit_model_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>fit_model_xam.cpp</span></a>
 contains an example and test
of using this routine.

<br>
<br>
<b><big><a name="Prototype" id="Prototype">Prototype</a></big></b>

<pre><tt><font color="#009900">void</font> fit_model<font color="#990000">::</font><b><font color="#000000">get_solution</font></b><font color="#990000">(</font>
     CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> fit_var_value   <font color="#990000">,</font>
     CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> lagrange_value  <font color="#990000">,</font>
     CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> lagrange_dage   <font color="#990000">,</font>
     CppAD<font color="#990000">::</font>vector<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;&amp;</font> lagrange_dtime  <font color="#990000">)</font></tt></pre>

<hr>Input File: devel/model/fit_model.cpp

</body>
</html>
