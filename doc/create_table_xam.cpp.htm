<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++ create_table: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++ create_table: Example and Test">
<meta name="keywords" id="keywords" content=" c++ create_table: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_create_table_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_table</option>
<option>cpp_create_table</option>
<option>create_table_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="cpp_create_table.htm" target="_top">Prev</a>
</td><td><a href="exec_sql_cmd.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>dismod_at-&gt;</option>
<option>math_abstract</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2019</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel_table-&gt;</option>
<option>check_child_prior</option>
<option>check_pini_n_age</option>
<option>check_rate_limit</option>
<option>check_table_id</option>
<option>check_zero_sum</option>
<option>cpp_create_table</option>
<option>exec_sql_cmd</option>
<option>get_age_table</option>
<option>get_avgint_table</option>
<option>get_column_max</option>
<option>get_covariate_table</option>
<option>get_data_table</option>
<option>get_db_input</option>
<option>get_density_table</option>
<option>get_integrand_table</option>
<option>get_mulcov_table</option>
<option>get_node_table</option>
<option>get_option_table</option>
<option>get_prior_table</option>
<option>get_rate_table</option>
<option>get_sample_table</option>
<option>get_data_sim_table</option>
<option>get_smooth_grid</option>
<option>get_nslist_table</option>
<option>get_nslist_pair</option>
<option>get_smooth_table</option>
<option>get_table_column</option>
<option>get_time_table</option>
<option>get_weight_grid</option>
<option>get_weight_table</option>
<option>log_message</option>
<option>put_table_row</option>
<option>open_connection</option>
<option>smooth_info</option>
<option>weight_info</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cpp_create_table-&gt;</option>
<option>create_table_xam.cpp</option>
</select>
</td>
<td>create_table_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>C++ create_table: Example and Test</big></big></b></center>
<br>
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/create_table.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/exec_sql_cmd.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/open_connection.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/get_covariate_table.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">create_table_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>
     <font color="#009900">bool</font>   ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b>  std<font color="#990000">::</font>string<font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b>  CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>

     <font color="#008080">string</font>   file_name <font color="#990000">=</font> <font color="#FF0000">"example.db"</font><font color="#990000">;</font>
     <font color="#009900">bool</font>     new_file  <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     sqlite3<font color="#990000">*</font> db        <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">open_connection</font></b><font color="#990000">(</font>file_name<font color="#990000">,</font> new_file<font color="#990000">);</font>

     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// create a covariate table</font></i>
     <font color="#008080">size_t</font> n_col <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> n_row <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     std<font color="#990000">::</font><font color="#008080">string</font> table_name <font color="#990000">=</font> <font color="#FF0000">"covariate"</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;string&gt;</font> <b><font color="#000000">col_name</font></b><font color="#990000">(</font>n_col<font color="#990000">),</font> <b><font color="#000000">col_type</font></b><font color="#990000">(</font>n_col<font color="#990000">),</font> <b><font color="#000000">row_value</font></b><font color="#990000">(</font>n_col <font color="#990000">*</font> n_row<font color="#990000">);</font>
     <font color="#008080">vector&lt;bool&gt;</font>   <b><font color="#000000">col_unique</font></b><font color="#990000">(</font>n_col<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     col_name<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"covariate_name"</font><font color="#990000">;</font>
     col_type<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"text"</font><font color="#990000">;</font>
     col_unique<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font>   <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     col_name<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"reference"</font><font color="#990000">;</font>
     col_type<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"real"</font><font color="#990000">;</font>
     col_unique<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font>   <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     col_name<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"max_difference"</font><font color="#990000">;</font>
     col_type<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"real"</font><font color="#990000">;</font>
     col_unique<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">]</font>   <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">0</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"income"</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"1000.00"</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">2</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">""</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     i <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">0</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"weight"</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">1</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"100"</font><font color="#990000">;</font>
     row_value<font color="#990000">[</font> n_col <font color="#990000">*</font> i <font color="#990000">+</font> <font color="#993399">2</font> <font color="#990000">]</font> <font color="#990000">=</font> <font color="#FF0000">"200"</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     dismod_at<font color="#990000">::</font><b><font color="#000000">create_table</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> col_name<font color="#990000">,</font> col_type<font color="#990000">,</font> col_unique<font color="#990000">,</font> row_value
     <font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------------------------------------------------------</font></i>

     <i><font color="#9A1900">// get the covariate table</font></i>
     vector<font color="#990000">&lt;</font>dismod_at<font color="#990000">::</font>covariate_struct<font color="#990000">&gt;</font>
          covariate_table <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">get_covariate_table</font></b><font color="#990000">(</font>db<font color="#990000">);</font>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">==</font> n_row<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>covariate_name <font color="#990000">==</font> <font color="#FF0000">"income"</font><font color="#990000">;</font>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>reference      <font color="#990000">==</font> <font color="#993399">1000</font><font color="#990000">.;</font>
     <i><font color="#9A1900">// for max_difference, null is intrepreted as plus infinity</font></i>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>max_difference <font color="#990000">==</font> std<font color="#990000">::</font><b><font color="#000000">atof</font></b><font color="#990000">(</font><font color="#FF0000">"+inf"</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>covariate_name <font color="#990000">==</font> <font color="#FF0000">"weight"</font><font color="#990000">;</font>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>reference      <font color="#990000">==</font> <font color="#993399">100</font><font color="#990000">.;</font>
     ok  <font color="#990000">&amp;=</font> covariate_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>max_difference <font color="#990000">==</font> <font color="#993399">200</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// close database and return</font></i>
     <b><font color="#000000">sqlite3_close</font></b><font color="#990000">(</font>db<font color="#990000">);</font>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/devel/table/create_table_xam.cpp

</body>
</html>
