<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++ get_table_column_xam: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++ get_table_column_xam: Example and Test">
<meta name="keywords" id="keywords" content=" c++ get_table_column_xam: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_get_table_column_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://bradbell.github.io/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_table</option>
<option>get_table_column</option>
<option>get_table_column_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="get_table_column.htm" target="_top">Prev</a>
</td><td><a href="get_time_table.htm" target="_top">Next</a>
</td><td>
<script type='text/javascript' language='JavaScript' src='_childtable_dismod_at_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_devel_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_devel_table_htm.js'></script>
</td>
<td>
<script type='text/javascript' language='JavaScript' src='_childtable_get_table_column_htm.js'></script>
</td>
<td>get_table_column_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@


<center><b><big><big>C++ get_table_column_xam: Example and Test</big></big></b></center>

<br><pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/get_table_column.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/exec_sql_cmd.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/open_connection.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">get_table_column_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>
     <font color="#009900">bool</font>     ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b>    std<font color="#990000">::</font>string<font color="#990000">;</font>

     <font color="#008080">string</font>   file_name <font color="#990000">=</font> <font color="#FF0000">"example.db"</font><font color="#990000">;</font>
     <font color="#009900">bool</font>     new_file  <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     sqlite3<font color="#990000">*</font> db        <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">open_connection</font></b><font color="#990000">(</font>file_name<font color="#990000">,</font> new_file<font color="#990000">);</font>

     <i><font color="#9A1900">// create three columns one with each type of data</font></i>
     <b><font color="#0000FF">const</font></b> <font color="#009900">char</font><font color="#990000">*</font> sql_cmd<font color="#990000">[]</font> <font color="#990000">=</font> <font color="#FF0000">{</font>
          <font color="#FF0000">"create table mytable("</font>
               <font color="#FF0000">" mytable_id    integer primary key,"</font>
               <font color="#FF0000">" mytable_text  text, "</font>
               <font color="#FF0000">" mytable_real  real);"</font><font color="#990000">,</font>
          <font color="#FF0000">"insert into  mytable values(1,    'one',         1.0);"</font>
          <font color="#FF0000">"insert into  mytable values(0,    'zero',        0.0);"</font><font color="#990000">,</font>
     <font color="#FF0000">}</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> n_command <font color="#990000">=</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>sql_cmd<font color="#990000">)</font> <font color="#990000">/</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>sql_cmd<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_command<font color="#990000">;</font> i<font color="#990000">++)</font>
          dismod_at<font color="#990000">::</font><b><font color="#000000">exec_sql_cmd</font></b><font color="#990000">(</font>db<font color="#990000">,</font> sql_cmd<font color="#990000">[</font>i<font color="#990000">]);</font>
     <font color="#008080">string</font> table_name   <font color="#990000">=</font> <font color="#FF0000">"mytable"</font><font color="#990000">;</font>
     <font color="#008080">string</font> column_name<font color="#990000">;</font>
     <font color="#008080">string</font> column_type<font color="#990000">;</font>

     <i><font color="#9A1900">// int</font></i>
     column_name <font color="#990000">=</font> <font color="#FF0000">"mytable_id"</font><font color="#990000">;</font>
     column_type <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column_type</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name
     <font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;int&gt;</font> int_result<font color="#990000">;</font>
     dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name<font color="#990000">,</font> int_result
     <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> column_type   <font color="#990000">==</font> <font color="#FF0000">"integer"</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> int_result<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> int_result<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1</font><font color="#990000">;</font>

     <i><font color="#9A1900">// text</font></i>
     column_name <font color="#990000">=</font> <font color="#FF0000">"mytable_text"</font><font color="#990000">;</font>
     column_type <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column_type</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name
     <font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;string&gt;</font> text_result<font color="#990000">;</font>
     dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name<font color="#990000">,</font> text_result
     <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> column_type    <font color="#990000">==</font> <font color="#FF0000">"text"</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> text_result<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#FF0000">"zero"</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> text_result<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#FF0000">"one"</font><font color="#990000">;</font>

     <i><font color="#9A1900">// real</font></i>
     column_name <font color="#990000">=</font> <font color="#FF0000">"mytable_real"</font><font color="#990000">;</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> real_result<font color="#990000">;</font>
     column_type <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column_type</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name
     <font color="#990000">);</font>
     dismod_at<font color="#990000">::</font><b><font color="#000000">get_table_column</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font> table_name<font color="#990000">,</font> column_name<font color="#990000">,</font> real_result
     <font color="#990000">);</font>
     ok <font color="#990000">&amp;=</font> column_type    <font color="#990000">==</font> <font color="#FF0000">"real"</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> real_result<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     ok <font color="#990000">&amp;=</font> real_result<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">==</font> <font color="#993399">1.0</font><font color="#990000">;</font>

     <i><font color="#9A1900">// close database and return</font></i>
     <b><font color="#000000">sqlite3_close</font></b><font color="#990000">(</font>db<font color="#990000">);</font>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/devel/table/get_table_column_xam.cpp

</body>
</html>
