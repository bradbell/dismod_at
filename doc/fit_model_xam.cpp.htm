<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>C++ fit_model: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="C++ fit_model: Example and Test">
<meta name="keywords" id="keywords" content=" c++ fit_model: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_fit_model_xam.cpp_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_model</option>
<option>fit_model</option>
<option>fit_model_get_solution</option>
<option>fit_model_xam.cpp</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="fit_model_get_solution.htm" target="_top">Prev</a>
</td><td>Current</td>
<td><a href="fit_model_sample_posterior.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down4(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>devel_model-&gt;</option>
<option>devel_data_model</option>
<option>prior_model</option>
<option>fit_model</option>
<option>depend</option>
<option>adj_integrand</option>
<option>devel_avg_integrand</option>
<option>devel_avg_std_effect</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>fit_model-&gt;</option>
<option>fit_model_ctor</option>
<option>fit_model_run_fit</option>
<option>fit_model_get_solution</option>
<option>fit_model_sample_posterior</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>fit_model_get_solution-&gt;</option>
<option>fit_model_xam.cpp</option>
</select>
</td>
<td>fit_model_xam.cpp</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>C++ fit_model: Example and Test</big></big></b></center>
<pre><tt><b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;limits&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/pack_prior.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/get_density_table.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/fit_model.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/open_connection.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/pack_prior.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/null_int.hpp&gt;</font>
<b><font color="#000080"># include</font></b> <font color="#FF0000">&lt;dismod_at/age_avg_grid.hpp&gt;</font>

<font color="#009900">bool</font> <b><font color="#000000">fit_model_xam</font></b><font color="#990000">(</font><font color="#009900">void</font><font color="#990000">)</font>
<font color="#FF0000">{</font>    <font color="#009900">bool</font>   ok <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <b><font color="#0000FF">using</font></b> CppAD<font color="#990000">::</font>vector<font color="#990000">;</font>
     <font color="#009900">double</font> inf <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">infinity</font></b><font color="#990000">();</font>
     <font color="#009900">double</font> nan <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">quiet_NaN</font></b><font color="#990000">();</font>


     <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// age_table = [ 0 , 20, 40, 60, 80, 100 ]</font></i>
     <font color="#008080">size_t</font> n_age_table <font color="#990000">=</font> <font color="#993399">6</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">age_table</font></b><font color="#990000">(</font>n_age_table<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age_table<font color="#990000">;</font> i<font color="#990000">++)</font>
          age_table<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">100</font><font color="#990000">.</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_age_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// time_table = [ 1995, 2005, 2015 ]</font></i>
     <font color="#008080">size_t</font> n_time_table <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">time_table</font></b><font color="#990000">(</font>n_time_table<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_time_table<font color="#990000">;</font> i<font color="#990000">++)</font>
          time_table<font color="#990000">[</font>i<font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1995</font><font color="#990000">.</font> <font color="#990000">+</font> <font color="#990000">(</font><font color="#993399">2015</font><font color="#990000">-</font> <font color="#993399">1995</font><font color="#990000">)</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font>i<font color="#990000">)</font> <font color="#990000">/</font> <font color="#009900">double</font><font color="#990000">(</font>n_time_table<font color="#990000">-</font><font color="#993399">1</font><font color="#990000">);</font>
     <i><font color="#9A1900">// ----------------------- prior table ---------------------------------</font></i>
     <font color="#008080">size_t</font> n_prior_table <font color="#990000">=</font> <font color="#993399">4</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;dismod_at::prior_struct&gt;</font> <b><font color="#000000">prior_table</font></b><font color="#990000">(</font>n_prior_table<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_id_zero (identically zero prior)</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>prior_name <font color="#990000">=</font> <font color="#FF0000">"zero"</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>std        <font color="#990000">=</font> nan<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>eta        <font color="#990000">=</font> nan<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_id_one (identically one prior)</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>prior_name <font color="#990000">=</font> <font color="#FF0000">"one"</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>std        <font color="#990000">=</font> nan<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>eta        <font color="#990000">=</font> nan<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <font color="#008080">size_t</font> prior_id_one       <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_id_positive (uniform prior on positive values)</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>prior_name <font color="#990000">=</font> <font color="#FF0000">"none"</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>density_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>uniform_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>lower      <font color="#990000">=</font> <font color="#993399">1e-4</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>mean       <font color="#990000">=</font> <font color="#993399">1e-1</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>upper      <font color="#990000">=</font> <font color="#990000">+</font> inf<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>std        <font color="#990000">=</font> nan<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>eta        <font color="#990000">=</font> nan<font color="#990000">;</font>
     <font color="#008080">size_t</font> prior_id_positive  <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_id_gaussian_zero (Gaussian mean 0.0 and std 1e-2)</font></i>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>prior_name       <font color="#990000">=</font> <font color="#FF0000">"gaussian_0_1e-4"</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>density_id       <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> dismod_at<font color="#990000">::</font>gaussian_enum <font color="#990000">);</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>lower            <font color="#990000">=</font> <font color="#990000">-</font>inf<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>mean             <font color="#990000">=</font> <font color="#993399">0.00</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>upper            <font color="#990000">=</font> <font color="#990000">+</font>inf<font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>std              <font color="#990000">=</font> <font color="#993399">1e-2</font><font color="#990000">;</font>
     prior_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>eta              <font color="#990000">=</font> nan<font color="#990000">;</font>
     <font color="#008080">size_t</font> prior_id_gaussian_zero   <font color="#990000">=</font> <font color="#993399">3</font><font color="#990000">;</font>
     <i><font color="#9A1900">// -------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// smoothing information</font></i>
     <font color="#008080">vector&lt;size_t&gt;</font> age_id<font color="#990000">,</font> time_id<font color="#990000">;</font>
     <font color="#008080">vector&lt;size_t&gt;</font> value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> const_value<font color="#990000">;</font>
     <font color="#008080">size_t</font> mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime<font color="#990000">;</font>
     <font color="#008080">size_t</font> n_age<font color="#990000">,</font> n_time<font color="#990000">,</font> n_grid<font color="#990000">;</font>

     <font color="#008080">vector&lt;dismod_at::smooth_info&gt;</font> <b><font color="#000000">s_info_vec</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
     <i><font color="#9A1900">// ------------------------- smoothing --------------------------------</font></i>
     <i><font color="#9A1900">// age_id</font></i>
     n_age <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     age_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_age<font color="#990000">);</font>
     age_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> n_age_table <font color="#990000">/</font> <font color="#993399">2</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// time_id</font></i>
     n_time <font color="#990000">=</font> <font color="#993399">2</font><font color="#990000">;</font>
     time_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_time<font color="#990000">);</font>
     time_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     time_id<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">]</font> <font color="#990000">=</font> n_time_table <font color="#990000">-</font> <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// scalar prior_id</font></i>
     mulstd_value <font color="#990000">=</font> prior_id_one<font color="#990000">;</font>
     mulstd_dage  <font color="#990000">=</font> prior_id_one<font color="#990000">;</font>
     mulstd_dtime <font color="#990000">=</font> prior_id_one<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_id values on an n_age * n_time grid</font></i>
     n_grid <font color="#990000">=</font> n_age <font color="#990000">*</font> n_time<font color="#990000">;</font>
     value_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dage_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     dtime_prior_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     const_value<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font>n_grid<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// smooth_id_gaussian_zero</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    value_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_gaussian_zero<font color="#990000">;</font>
               dage_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>  <font color="#990000">=</font> prior_id_gaussian_zero<font color="#990000">;</font>
               dtime_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_gaussian_zero<font color="#990000">;</font>
               const_value<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font>    <font color="#990000">=</font> nan<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <font color="#008080">size_t</font> smooth_id_gaussian_zero <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     s_info_vec<font color="#990000">[</font>smooth_id_gaussian_zero<font color="#990000">]</font> <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">smooth_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> age_id<font color="#990000">,</font> time_id<font color="#990000">,</font>
          value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">,</font> const_value<font color="#990000">,</font>
          mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime
     <font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// smooth_id_positive</font></i>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_age<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> j <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> j <font color="#990000">&lt;</font> n_time<font color="#990000">;</font> j<font color="#990000">++)</font>
               value_prior_id<font color="#990000">[</font> i <font color="#990000">*</font> n_time <font color="#990000">+</font> j <font color="#990000">]</font> <font color="#990000">=</font> prior_id_positive<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <font color="#008080">size_t</font> smooth_id_positive <font color="#990000">=</font> <font color="#993399">1</font><font color="#990000">;</font>
     s_info_vec<font color="#990000">[</font>smooth_id_positive<font color="#990000">]</font> <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">smooth_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> age_id<font color="#990000">,</font> time_id<font color="#990000">,</font>
          value_prior_id<font color="#990000">,</font> dage_prior_id<font color="#990000">,</font> dtime_prior_id<font color="#990000">,</font> const_value<font color="#990000">,</font>
          mulstd_value<font color="#990000">,</font> mulstd_dage<font color="#990000">,</font> mulstd_dtime
     <font color="#990000">);</font>
     <i><font color="#9A1900">// --------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">// smooth_table</font></i>
     <font color="#008080">vector&lt;dismod_at::smooth_struct&gt;</font> <b><font color="#000000">smooth_table</font></b><font color="#990000">(</font>s_info_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">());</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> smooth_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> smooth_id <font color="#990000">&lt;</font> s_info_vec<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> smooth_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>n_age <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">age_size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>n_time <font color="#990000">=</font>
               <font color="#009900">int</font><font color="#990000">(</font> s_info_vec<font color="#990000">[</font>smooth_id<font color="#990000">].</font><b><font color="#000000">time_size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_value_prior_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> mulstd_value <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_dage_prior_id  <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> mulstd_dage <font color="#990000">);</font>
          smooth_table<font color="#990000">[</font>smooth_id<font color="#990000">].</font>mulstd_dtime_prior_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> mulstd_dtime <font color="#990000">);</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// mulcov_table</font></i>
     <font color="#008080">vector&lt;dismod_at::mulcov_struct&gt;</font> <b><font color="#000000">mulcov_table</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// rate_table</font></i>
     <font color="#008080">vector&lt;dismod_at::rate_struct&gt;</font>   <b><font color="#000000">rate_table</font></b><font color="#990000">(</font>dismod_at<font color="#990000">::</font>number_rate_enum<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> rate_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> rate_id <font color="#990000">&lt;</font> rate_table<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> rate_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> rate_id <font color="#990000">==</font> dismod_at<font color="#990000">::</font>pini_enum <font color="#990000">)</font>
          <font color="#FF0000">{</font>    <i><font color="#9A1900">// smoothing must have only one age</font></i>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>parent_smooth_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> smooth_id_positive <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_smooth_id  <font color="#990000">=</font>
                    <font color="#009900">int</font><font color="#990000">(</font> smooth_id_gaussian_zero <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_nslist_id  <font color="#990000">=</font> DISMOD_AT_NULL_INT<font color="#990000">;</font>
          <font color="#FF0000">}</font>
          <b><font color="#0000FF">else</font></b>
          <font color="#FF0000">{</font>    <i><font color="#9A1900">// eventually plan to use a 3 by 2 smoothing here</font></i>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>parent_smooth_id <font color="#990000">=</font> <font color="#009900">int</font><font color="#990000">(</font> smooth_id_positive <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_smooth_id  <font color="#990000">=</font>
                    <font color="#009900">int</font><font color="#990000">(</font> smooth_id_gaussian_zero <font color="#990000">);</font>
               rate_table<font color="#990000">[</font>rate_id<font color="#990000">].</font>child_nslist_id  <font color="#990000">=</font> DISMOD_AT_NULL_INT<font color="#990000">;</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// integrand_table</font></i>
     <font color="#008080">size_t</font> n_integrand <font color="#990000">=</font> dismod_at<font color="#990000">::</font>number_integrand_enum<font color="#990000">;</font>
     <font color="#008080">vector&lt;dismod_at::integrand_struct&gt;</font> <b><font color="#000000">integrand_table</font></b><font color="#990000">(</font>n_integrand<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_integrand<font color="#990000">;</font> i<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    integrand_table<font color="#990000">[</font>i<font color="#990000">].</font>integrand       <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">integrand_enum</font></b><font color="#990000">(</font>i<font color="#990000">);</font>
          integrand_table<font color="#990000">[</font>i<font color="#990000">].</font>minimum_meas_cv <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// node_table:    0</font></i>
     <i><font color="#9A1900">//                   2</font></i>
     <i><font color="#9A1900">//                  3  4</font></i>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;dismod_at::node_struct&gt;</font> <b><font color="#000000">node_table</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">);</font>
     node_table<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">].</font>parent <font color="#990000">=</font> DISMOD_AT_NULL_INT<font color="#990000">;</font>
     node_table<font color="#990000">[</font><font color="#993399">1</font><font color="#990000">].</font>parent <font color="#990000">=</font>  <font color="#993399">0</font><font color="#990000">;</font>
     node_table<font color="#990000">[</font><font color="#993399">2</font><font color="#990000">].</font>parent <font color="#990000">=</font>  <font color="#993399">1</font><font color="#990000">;</font>
     node_table<font color="#990000">[</font><font color="#993399">3</font><font color="#990000">].</font>parent <font color="#990000">=</font>  <font color="#993399">1</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// parent_node_id</font></i>
     <font color="#008080">size_t</font> parent_node_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">//  open database</font></i>
     <font color="#009900">bool</font> new_file <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     std<font color="#990000">::</font><font color="#008080">string</font> file_name <font color="#990000">=</font> <font color="#FF0000">"example.db"</font><font color="#990000">;</font>
     sqlite3<font color="#990000">*</font> db <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">open_connection</font></b><font color="#990000">(</font>file_name<font color="#990000">,</font> new_file<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// w_info_vec (the constant one)</font></i>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">weight</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
     weight<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">1.0</font><font color="#990000">;</font>
     age_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
     time_id<font color="#990000">.</font><b><font color="#000000">resize</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
     age_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     time_id<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     dismod_at<font color="#990000">::</font><font color="#008080">weight_info</font> <b><font color="#000000">w_info</font></b><font color="#990000">(</font>
          age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> age_id<font color="#990000">,</font> time_id<font color="#990000">,</font> weight
     <font color="#990000">);</font>
     <font color="#008080">vector&lt;dismod_at::weight_info&gt;</font> <b><font color="#000000">w_info_vec</font></b><font color="#990000">(</font><font color="#993399">1</font><font color="#990000">);</font>
     w_info_vec<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]</font> <font color="#990000">=</font> w_info<font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// covariate table</font></i>
     <font color="#008080">size_t</font> n_covariate <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;dismod_at::covariate_struct&gt;</font> <b><font color="#000000">covariate_table</font></b><font color="#990000">(</font>n_covariate<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// data_table: data_id == rate_id</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">integrand_enum</font> integrand_vec<font color="#990000">[]</font> <font color="#990000">=</font> <font color="#FF0000">{</font>
          dismod_at<font color="#990000">::</font>prevalence_enum <font color="#990000">,</font> <i><font color="#9A1900">// rate_id = 0 (initial prevalence)</font></i>
          dismod_at<font color="#990000">::</font>Sincidence_enum <font color="#990000">,</font> <i><font color="#9A1900">// rate_id = 1 (iota)</font></i>
          dismod_at<font color="#990000">::</font>remission_enum  <font color="#990000">,</font> <i><font color="#9A1900">// rate_id = 2 (rho)</font></i>
          dismod_at<font color="#990000">::</font>mtexcess_enum   <font color="#990000">,</font> <i><font color="#9A1900">// rate_id = 3 (chi)</font></i>
          dismod_at<font color="#990000">::</font>mtother_enum      <i><font color="#9A1900">// rate_id = 4 (omega)</font></i>
     <font color="#FF0000">}</font><font color="#990000">;</font>
     <font color="#008080">size_t</font> n_data <font color="#990000">=</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>integrand_vec<font color="#990000">)</font> <font color="#990000">/</font> <b><font color="#0000FF">sizeof</font></b><font color="#990000">(</font>integrand_vec<font color="#990000">[</font><font color="#993399">0</font><font color="#990000">]);</font>
     <font color="#008080">vector&lt;dismod_at::data_struct&gt;</font> <b><font color="#000000">data_table</font></b><font color="#990000">(</font>n_data<font color="#990000">);</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">data_cov_value</font></b><font color="#990000">(</font>n_data <font color="#990000">*</font> n_covariate<font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> data_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> data_id <font color="#990000">&lt;</font> n_data<font color="#990000">;</font> data_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#009900">double</font> meas_value <font color="#990000">=</font> <font color="#993399">1e-2</font> <font color="#990000">*</font> <font color="#009900">double</font><font color="#990000">(</font> data_id <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">);</font>
          <font color="#009900">double</font> meas_std   <font color="#990000">=</font> <font color="#993399">0.2</font>  <font color="#990000">*</font> meas_value<font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>integrand_id <font color="#990000">=</font> integrand_vec<font color="#990000">[</font>data_id<font color="#990000">];</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>node_id      <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>weight_id    <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
          <b><font color="#0000FF">if</font></b><font color="#990000">(</font> data_id <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
          <font color="#FF0000">{</font>    <i><font color="#9A1900">// prevalence at age zero is zero</font></i>
               data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>age_lower    <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
               data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>age_upper    <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
          <font color="#FF0000">}</font>
          <b><font color="#0000FF">else</font></b>
          <font color="#FF0000">{</font>    data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>age_lower    <font color="#990000">=</font> <font color="#993399">0.0</font><font color="#990000">;</font>
               data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>age_upper    <font color="#990000">=</font> <font color="#993399">100.0</font><font color="#990000">;</font>
          <font color="#FF0000">}</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>time_lower   <font color="#990000">=</font> <font color="#993399">1995.0</font><font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>time_upper   <font color="#990000">=</font> <font color="#993399">1995.0</font><font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>meas_value   <font color="#990000">=</font> meas_value<font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>meas_std     <font color="#990000">=</font> meas_std<font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>eta          <font color="#990000">=</font> <font color="#993399">1e-6</font><font color="#990000">;</font>
          data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>density_id   <font color="#990000">=</font> dismod_at<font color="#990000">::</font>gaussian_enum<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// child_info</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">child_info</font> <b><font color="#000000">child_object</font></b><font color="#990000">(</font>
          parent_node_id <font color="#990000">,</font>
          node_table     <font color="#990000">,</font>
          data_table
     <font color="#990000">);</font>
     <font color="#008080">size_t</font> n_child <font color="#990000">=</font> child_object<font color="#990000">.</font><b><font color="#000000">child_size</font></b><font color="#990000">();</font>
     <b><font color="#000000">assert</font></b><font color="#990000">(</font> n_child <font color="#990000">==</font> <font color="#993399">1</font> <font color="#990000">);</font>
     <i><font color="#9A1900">// pack_object</font></i>
     <i><font color="#9A1900">// values in child_id2node_id do not matter because child_nslist_id is null</font></i>
     <font color="#008080">vector&lt;size_t&gt;</font> <b><font color="#000000">child_id2node_id</font></b><font color="#990000">(</font>n_child<font color="#990000">);</font>
     <font color="#008080">vector&lt;dismod_at::nslist_pair_struct&gt;</font> <b><font color="#000000">nslist_pair</font></b><font color="#990000">(</font><font color="#993399">0</font><font color="#990000">);</font>
     dismod_at<font color="#990000">::</font><font color="#008080">pack_info</font> <b><font color="#000000">pack_object</font></b><font color="#990000">(</font>n_integrand<font color="#990000">,</font>
          child_id2node_id<font color="#990000">,</font> smooth_table<font color="#990000">,</font> mulcov_table<font color="#990000">,</font> rate_table<font color="#990000">,</font> nslist_pair
     <font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// var2prior</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">pack_prior</font> <b><font color="#000000">var2prior</font></b><font color="#990000">(</font>pack_object<font color="#990000">,</font> s_info_vec<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// prior_object</font></i>
     dismod_at<font color="#990000">::</font><font color="#008080">prior_model</font> <b><font color="#000000">prior_object</font></b><font color="#990000">(</font>
          pack_object<font color="#990000">,</font> var2prior<font color="#990000">,</font> age_table<font color="#990000">,</font> time_table<font color="#990000">,</font> prior_table
     <font color="#990000">);</font>
     <i><font color="#9A1900">// data_subset</font></i>
     <font color="#008080">vector&lt;dismod_at::data_subset_struct&gt;</font> data_subset_obj<font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> data_subset_cov_value<font color="#990000">;</font>
     <b><font color="#000000">data_subset</font></b><font color="#990000">(</font>
          data_table<font color="#990000">,</font>
          data_cov_value<font color="#990000">,</font>
          covariate_table<font color="#990000">,</font>
          child_object<font color="#990000">,</font>
          data_subset_obj<font color="#990000">,</font>
          data_subset_cov_value
     <font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// data_model</font></i>
     <font color="#009900">double</font> ode_step_size <font color="#990000">=</font> <font color="#993399">20</font><font color="#990000">.;</font>
     <font color="#009900">double</font> bound_random <font color="#990000">=</font> std<font color="#990000">::</font>numeric_limits<font color="#990000">&lt;</font><font color="#009900">double</font><font color="#990000">&gt;::</font><b><font color="#000000">infinity</font></b><font color="#990000">();</font>
     std<font color="#990000">::</font><font color="#008080">string</font> rate_case <font color="#990000">=</font> <font color="#FF0000">"iota_pos_rho_pos"</font><font color="#990000">;</font>
     std<font color="#990000">::</font><font color="#008080">string</font> age_avg_split <font color="#990000">=</font> <font color="#FF0000">""</font><font color="#990000">;</font>
     <font color="#008080">vector&lt;double&gt;</font> age_avg_grid <font color="#990000">=</font> dismod_at<font color="#990000">::</font><b><font color="#000000">age_avg_grid</font></b><font color="#990000">(</font>
          ode_step_size<font color="#990000">,</font> age_avg_split<font color="#990000">,</font> age_table
     <font color="#990000">);</font>
     dismod_at<font color="#990000">::</font><font color="#008080">data_model</font> <b><font color="#000000">data_object</font></b><font color="#990000">(</font>
          rate_case<font color="#990000">,</font>
          bound_random<font color="#990000">,</font>
          n_covariate<font color="#990000">,</font>
          ode_step_size<font color="#990000">,</font>
          age_avg_grid<font color="#990000">,</font>
          age_table<font color="#990000">,</font>
          time_table<font color="#990000">,</font>
          integrand_table<font color="#990000">,</font>
          prior_table<font color="#990000">,</font>
          data_subset_obj<font color="#990000">,</font>
          data_subset_cov_value<font color="#990000">,</font>
          w_info_vec<font color="#990000">,</font>
          s_info_vec<font color="#990000">,</font>
          pack_object<font color="#990000">,</font>
          child_object
     <font color="#990000">);</font>
     data_object<font color="#990000">.</font><b><font color="#000000">replace_like</font></b><font color="#990000">(</font>data_subset_obj<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// start_var, scale_var</font></i>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">start_var</font></b><font color="#990000">(</font> pack_object<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
     <font color="#008080">vector&lt;double&gt;</font> <b><font color="#000000">scale_var</font></b><font color="#990000">(</font> pack_object<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">()</font> <font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> var_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> var_id <font color="#990000">&lt;</font> start_var<font color="#990000">.</font><b><font color="#000000">size</font></b><font color="#990000">();</font> var_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#008080">size_t</font> prior_id <font color="#990000">=</font> var2prior<font color="#990000">.</font><b><font color="#000000">value_prior_id</font></b><font color="#990000">(</font>var_id<font color="#990000">);</font>
          start_var<font color="#990000">[</font>var_id<font color="#990000">]</font> <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id<font color="#990000">].</font>mean<font color="#990000">;</font>
          scale_var<font color="#990000">[</font>var_id<font color="#990000">]</font> <font color="#990000">=</font> prior_table<font color="#990000">[</font>prior_id<font color="#990000">].</font>mean<font color="#990000">;</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// option_map</font></i>
     std<font color="#990000">::</font><font color="#008080">map&lt;std::string, std::string&gt;</font> option_map<font color="#990000">;</font>
     <i><font color="#9A1900">// BEGIN_SORT_THIS_LINE_PLUS_1</font></i>
     option_map<font color="#990000">[</font><font color="#FF0000">"accept_after_max_steps_fixed"</font><font color="#990000">]</font>      <font color="#990000">=</font> <font color="#FF0000">"5"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"accept_after_max_steps_random"</font><font color="#990000">]</font>     <font color="#990000">=</font> <font color="#FF0000">"5"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"bound_frac_fixed"</font><font color="#990000">]</font>                  <font color="#990000">=</font> <font color="#FF0000">"1e-2"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"derivative_test_fixed"</font><font color="#990000">]</font>             <font color="#990000">=</font> <font color="#FF0000">"second-order"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"derivative_test_random"</font><font color="#990000">]</font>            <font color="#990000">=</font> <font color="#FF0000">"second-order"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"limited_memory_max_history_fixed"</font><font color="#990000">]</font>  <font color="#990000">=</font> <font color="#FF0000">"30"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"max_num_iter_fixed"</font><font color="#990000">]</font>                <font color="#990000">=</font> <font color="#FF0000">"100"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"max_num_iter_random"</font><font color="#990000">]</font>               <font color="#990000">=</font> <font color="#FF0000">"100"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"print_level_fixed"</font><font color="#990000">]</font>                 <font color="#990000">=</font> <font color="#FF0000">"0"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"print_level_random"</font><font color="#990000">]</font>                <font color="#990000">=</font> <font color="#FF0000">"0"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"tolerance_fixed"</font><font color="#990000">]</font>                   <font color="#990000">=</font> <font color="#FF0000">"1e-8"</font><font color="#990000">;</font>
     option_map<font color="#990000">[</font><font color="#FF0000">"tolerance_random"</font><font color="#990000">]</font>                  <font color="#990000">=</font> <font color="#FF0000">"1e-8"</font><font color="#990000">;</font>
     <i><font color="#9A1900">// END_SORT_THIS_LINE_MINUS_1</font></i>
     <i><font color="#9A1900">// ----------------------- run the fit -------------------------------</font></i>
     <font color="#009900">bool</font> quasi_fixed <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// zero_sum_random</font></i>
     <font color="#008080">vector&lt;bool&gt;</font> <b><font color="#000000">zero_sum_random</font></b><font color="#990000">(</font> dismod_at<font color="#990000">::</font>number_rate_enum <font color="#990000">);</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> rate_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> rate_id <font color="#990000">&lt;</font> dismod_at<font color="#990000">::</font>number_rate_enum<font color="#990000">;</font> rate_id<font color="#990000">++)</font>
          zero_sum_random<font color="#990000">[</font>rate_id<font color="#990000">]</font> <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     <i><font color="#9A1900">// warn_on_stderr</font></i>
     <font color="#009900">bool</font> warn_on_stderr <font color="#990000">=</font> <b><font color="#0000FF">true</font></b><font color="#990000">;</font>
     <i><font color="#9A1900">//</font></i>
     std<font color="#990000">::</font><font color="#008080">string</font> fit_or_sample <font color="#990000">=</font> <font color="#FF0000">"fit"</font><font color="#990000">;</font>
     dismod_at<font color="#990000">::</font><font color="#008080">fit_model</font> <b><font color="#000000">fit_object</font></b><font color="#990000">(</font>
          db<font color="#990000">,</font>
          warn_on_stderr<font color="#990000">,</font>
          bound_random<font color="#990000">,</font>
          fit_or_sample<font color="#990000">,</font>
          pack_object<font color="#990000">,</font>
          var2prior<font color="#990000">,</font>
          start_var<font color="#990000">,</font>
          scale_var<font color="#990000">,</font>
          prior_table<font color="#990000">,</font>
          prior_object<font color="#990000">,</font>
          quasi_fixed<font color="#990000">,</font>
          zero_sum_random<font color="#990000">,</font>
          data_object
     <font color="#990000">);</font>
     <font color="#009900">bool</font> random_only <font color="#990000">=</font> <b><font color="#0000FF">false</font></b><font color="#990000">;</font>
     fit_object<font color="#990000">.</font><b><font color="#000000">run_fit</font></b><font color="#990000">(</font> random_only<font color="#990000">,</font> option_map <font color="#990000">);</font>
     CppAD<font color="#990000">::</font><font color="#008080">vector&lt;double&gt;</font> solution<font color="#990000">,</font> lag_value<font color="#990000">,</font> lag_dage<font color="#990000">,</font> lag_dtime<font color="#990000">;</font>
     fit_object<font color="#990000">.</font><b><font color="#000000">get_solution</font></b><font color="#990000">(</font>solution<font color="#990000">,</font> lag_value<font color="#990000">,</font> lag_dage<font color="#990000">,</font> lag_dtime<font color="#990000">);</font>

     <i><font color="#9A1900">// check against known solution</font></i>
     <font color="#009900">double</font> check_tol <font color="#990000">=</font> <font color="#993399">1e-3</font><font color="#990000">;</font>
     <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> data_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> data_id <font color="#990000">&lt;</font> n_data<font color="#990000">;</font> data_id<font color="#990000">++)</font>
     <font color="#FF0000">{</font>    <font color="#009900">double</font> meas_value <font color="#990000">=</font> data_table<font color="#990000">[</font>data_id<font color="#990000">].</font>meas_value<font color="#990000">;</font>
          <font color="#008080">size_t</font> rate_id    <font color="#990000">=</font> data_id<font color="#990000">;</font>
          dismod_at<font color="#990000">::</font>pack_info<font color="#990000">::</font><font color="#008080">subvec_info</font> info<font color="#990000">;</font>
          <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> child_id <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> child_id <font color="#990000">&lt;=</font> n_child<font color="#990000">;</font> child_id<font color="#990000">++)</font>
          <font color="#FF0000">{</font>    info <font color="#990000">=</font> pack_object<font color="#990000">.</font><b><font color="#000000">rate_info</font></b><font color="#990000">(</font>rate_id<font color="#990000">,</font> child_id<font color="#990000">);</font>
               <font color="#008080">size_t</font> offset <font color="#990000">=</font> info<font color="#990000">.</font>offset<font color="#990000">;</font>
               <font color="#008080">size_t</font> n_var  <font color="#990000">=</font> info<font color="#990000">.</font>n_var<font color="#990000">;</font>
               <b><font color="#0000FF">for</font></b><font color="#990000">(</font><font color="#008080">size_t</font> i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> i <font color="#990000">&lt;</font> n_var<font color="#990000">;</font> i<font color="#990000">++)</font>
               <font color="#FF0000">{</font>    <font color="#009900">double</font> err <font color="#990000">=</font> solution<font color="#990000">[</font>offset <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">/</font> meas_value <font color="#990000">-</font> <font color="#993399">1.0</font><font color="#990000">;</font>
                    <b><font color="#0000FF">if</font></b><font color="#990000">(</font> child_id <font color="#990000">!=</font> n_child <font color="#990000">)</font>
                         err <font color="#990000">=</font> solution<font color="#990000">[</font>offset <font color="#990000">+</font> i<font color="#990000">]</font> <font color="#990000">/</font> meas_value<font color="#990000">;</font>
                    ok    <font color="#990000">&amp;=</font> <b><font color="#000000">fabs</font></b><font color="#990000">(</font> err <font color="#990000">)</font> <font color="#990000">&lt;=</font> check_tol<font color="#990000">;</font>
               <font color="#FF0000">}</font>
          <font color="#FF0000">}</font>
     <font color="#FF0000">}</font>
     <i><font color="#9A1900">// close the database connection</font></i>
     <b><font color="#000000">sqlite3_close</font></b><font color="#990000">(</font>db<font color="#990000">);</font>
     <i><font color="#9A1900">//</font></i>
     <b><font color="#0000FF">return</font></b> ok<font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>

<hr>Input File: example/devel/model/fit_model_xam.cpp

</body>
</html>
