<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Compute One Dimensional Integration Coefficients</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Compute One Dimensional Integration Coefficients">
<meta name="keywords" id="keywords" content=" compute one dimensional integration coefficients syntax see also purpose r s w c example method ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_integrate_1d_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/dismod_at" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Location-&gt;</option>
<option>dismod_at</option>
<option>devel</option>
<option>devel_utility</option>
<option>integrate_1d</option>
</select>
</td>
<td>
<select onchange='choose_across0(this)'>
<option>Search-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td><a href="fixed_effect_xam.cpp.htm" target="_top">Prev</a>
</td><td>
<select onchange='choose_current0(this)'>
<option>Current-&gt;</option>
<option>Syntax</option>
<option>See Also</option>
<option>Purpose</option>
<option>r, s, w</option>
<option>c</option>
<option>Example</option>
<option>Method</option>
</select>
</td>
<td><a href="integrate_1d_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_down3(this)'>
<option>dismod_at-&gt;</option>
<option>install_unix</option>
<option>get_started</option>
<option>user</option>
<option>database</option>
<option>model</option>
<option>command</option>
<option>python</option>
<option>devel</option>
<option>whats_new_2018</option>
<option>wish_list</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>devel-&gt;</option>
<option>devel_table</option>
<option>devel_utility</option>
<option>devel_model</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>devel_utility-&gt;</option>
<option>ad_types</option>
<option>avgint_subset</option>
<option>bilinear_interp</option>
<option>child_info</option>
<option>data_subset</option>
<option>eigen_ode2</option>
<option>error_exit</option>
<option>fixed_effect</option>
<option>integrate_1d</option>
<option>integrate_2d</option>
<option>interp_weight</option>
<option>pack_info</option>
<option>pack_value_prior</option>
<option>pack_diff_prior</option>
<option>residual_density</option>
<option>random_number</option>
<option>random_effect</option>
<option>number_random_const</option>
<option>smooth2ode</option>
<option>solve_ode</option>
<option>split_space</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>integrate_1d-&gt;</option>
<option>integrate_1d_xam.cpp</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\R}[1]{ {\rm #1} }
\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\W}[1]{ \; #1 \; }@)@<center><b><big><big>Compute One Dimensional Integration Coefficients</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;integrate_1d(</span></font><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>w</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="See Also" id="See Also">See Also</a></big></b>

<br>
<a href="integrate_2d.htm" target="_top"><span style='white-space: nowrap'>integrate_2d</span></a>


<br>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
The function <small>@(@
U(r)
@)@</small> is linear and defined on a larger
interval that surrounds an interval we are integrating over.
This routine computes the integral of
<small>@(@
U(r)
@)@</small> times weighting 
<code><i><font color="black"><span style='white-space: nowrap'>w</span></font></i></code>
 on the smaller interval.
<code><span style='white-space: nowrap'><br>
<br>
</span></code>The function <small>@(@
U(r)
@)@</small> is linear and define on the larger interval by
<small>@[@

	U(r) = ( r_2 - r_1 )^{-1} [ ( r_2 - r ) u_1 + ( r - r_1 ) u_2 ]

@]@</small>
The product of <small>@(@
U(r)
@)@</small> times the weighting is defined on the
smaller interval by
<small>@[@

V(r) = ( s_2 - s_1 )^{-1} [
	w_1 U( s_1 ) ( s_2 - r ) + w_2 U( s_2 ) ( r - s_1 )
]

@]@</small>
where <small>@(@
r_1 \leq s_1 < s_2 \leq r_2
@)@</small>.
Note that
<small>@(@
U( r_1 ) = u_1
@)@</small>, <small>@(@
U( r_2 ) = u_2
@)@</small>,
<small>@(@
V( s_1 ) = w_1 U( s_1 )
@)@</small>, and <small>@(@
V( r_2 ) = w_2 U( s_2 )
@)@</small>.
This routine computes coefficients
<small>@(@
c_1, c_2
@)@</small> such that
<small>@[@

	I  = \int_{s(1)}^{s(2)} V(r) \; \B{d} r = c_1 u_1 + c_2 u_2

@]@</small>
where the coefficients
<small>@(@
c_1, c_2
@)@</small> do not depend on the values
<small>@(@
u_1, u_2
@)@</small>.

<br>
<br>
<b><big><a name="r, s, w" id="r, s, w">r, s, w</a></big></b>
<br>
For 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
 in the set of arguments

<code><font color="blue"><span style='white-space: nowrap'>{&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>r</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>s</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>w</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;}</span></font></code>
,
the argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;std::pair&lt;double,&nbsp;double&gt;&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
with the following identifications;
<small>@(@
x_1 =
@)@</small> 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>.first</span></font></code>
 and
<small>@(@
x_2 =
@)@</small> 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>.second</span></font></code>
.

<br>
<br>
<b><big><a name="c" id="c">c</a></big></b>
<br>
The return value has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::pair&lt;double,&nbsp;double&gt;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
with the following identifications;
<small>@(@
c_1 =
@)@</small> 
<code><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'>.first</span></font></code>
 and
<small>@(@
c_2 =
@)@</small> 
<code><i><font color="black"><span style='white-space: nowrap'>c</span></font></i><font color="blue"><span style='white-space: nowrap'>.second</span></font></code>
.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>
<br>
The file <a href="integrate_1d_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>integrate_1d_xam.cpp</span></a>
 contains an example and test
of using this routine.

<br>
<br>
<b><big><a name="Method" id="Method">Method</a></big></b>
<br>
Using the notation <small>@(@
d = s_2 - s_1
@)@</small>,
the integral is given by
<small>@[@

I = \int_0^d V(r + s_1) \; \B{d} r

@]@</small>
Using the notation
<small>@(@
v_1 = w_1 U( s_1 )
@)@</small> and
<small>@(@
v_2 = w_2 U( s_2 )
@)@</small>,
<small>@[@

I
=  d^{-1} \int_0^d [ v_1 (d - r) + v_2 d ] \; \B{d} r
= d ( v_1 + v_2 ) / 2

@]@</small>
Using the definition for <small>@(@
v_1
@)@</small> and <small>@(@
v_2
@)@</small> we have
<small>@[@

	I = (d / 2) [  w_1 U( s_1 ) + w_2 U( s_2 ) ]

@]@</small>
Using the definition for <small>@(@
U(r)
@)@</small> we obtain
We define
<small>@[@

I = \frac{1}{2} \frac{s_2 - s_1}{r_2 - r_1} [
	w_1 ( r_2 - s_1 ) u_1 + w_1 ( s_1 - r_1 ) u_2 +
	w_2 ( r_2 - s_2 ) u_1 + w_2 ( s_2 - r_1 ) u_2
]

@]@</small>
Using the definitions
<small>@[@

c_1 = \frac{1}{2} \frac{s_2 - s_1}{r_2 - r_1}
	[ w_1 ( r_2 - s_1 ) + w_2 ( r_2 - s_2 ) ]

@]@</small>
<small>@[@

c_2 = \frac{1}{2} \frac{s_2 - s_1}{r_2 - r_1}
	[ w_1 ( s_1 - r_1 ) + w_2 ( s_2 - r_1 ) ]

@]@</small>
We obtain the desired conclusion
<small>@[@

I = c_1 u_1 + c_2 u_2

@]@</small>

<hr>Input File: devel/utility/integrate_1d.cpp

</body>
</html>
