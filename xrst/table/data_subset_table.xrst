# SPDX-License-Identifier: AGPL-3.0-or-later
# SPDX-FileCopyrightText: University of Washington <https://www.washington.edu>
# SPDX-FileContributor: 2014-22 Bradley M. Bell
# ----------------------------------------------------------------------------
{xrst_begin data_subset_table}
{xrst_spell
   initializes
}

The Data Subset Table
#####################

data_subset_id
**************
This column has type ``integer`` and is the primary key for this table.
Its initial value is zero, and it increments by one for each row.

data_id
*******
This column has type ``integer`` and is a
:ref:`data_table@data_id` in the data table.
These values are unique and monotone increasing with
*data_subset_id* .
This column identifies which rows of the
:ref:`data_table-name` are included in the :ref:`fit_data_subset_table-name` .
This is defined by the set of rows in the ``data`` table
such that the following conditions hold:

Node
====
The :ref:`node<data_table@node_id>` is the
:ref:`option_table@Parent Node` or a
:ref:`node_table@parent@Descendant`
of the parent node.

Covariates
==========
All of the
:ref:`data_table@Covariates` satisfy the
:ref:`covariate_table@max_difference` criteria.

hold_out
********
This column has type ``integer`` .
If the value in this column is zero (one), the
corresponding data is (is not) included in subsequent fits.
The :ref:`init_command-name` initializes this column as zero.
The :ref:`hold_out_command-name` can be used to randomly choose
non-zero entries in this column.
This column is set to zero by the :ref:`init_command-name` .

density_id
**********
This column has type ``integer`` .
It specifies which density is used for the corresponding data.
The :ref:`init_command-name` set it to be the same as the corresponding
:ref:`data_table@density_id` in the data table.

eta
***
This column has type ``real`` .
It specifies the value of *eta* used for the corresponding data.
The :ref:`init_command-name` set it to be the same as the corresponding
:ref:`data_table@eta` in the data table.

nu
**
This column has type ``real`` .
It specifies the value of *nu* used for the corresponding data.
The :ref:`init_command-name` set it to be the same as the corresponding
:ref:`data_table@nu` in the data table.

Example
*******
See :ref:`init_command.py-name` example and test.

{xrst_end data_subset_table}
