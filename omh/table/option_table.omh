$Id$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-21 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin option_table$$
$spell
	zsum
	mulcov
	optimizer
	CppAD
	mtother
	csv
	nslist
	py
	frac
	cppad
	var
	pos
	dismod
	integrands
	Sincidence
	mtexcess
	mtwith
	relrisk
	tol
	num_iter
	Ipopt
	inf
	avgint
	cv
	std
	stderr
	covariate
$$

$section The Option Table$$

$head Table Format$$
This table has the following columns:

$subhead option_id$$
This column
has type $code integer$$ and is the primary key for this table.
Its initial value is zero, and it increments by one for each row.

$subhead option_name$$
This column
has type $code text$$ and has a different value for every row;
i.e., the names are unique and can act as substitutes for the primary key.

$subhead option_value$$
This column has type $code text$$ and is
the value for the corresponding option.

$head Default$$
The possible values for $icode option_name$$ together with the corresponding
default $icode option_value$$ are listed in $cref option_default$$.

$head Changing Values$$
This table is special in that you can change almost all its values
without invalidating the
$cref/output tables/data_flow/Command Output Tables/$$.
There is one exception; see
$cref/parent node/option_table/Parent Node/$$ below.

$head Parent Node$$
Unlike other options,
if you change the parent node, you must re-run the $cref init_command$$; see
$cref/changing values/option_table/Changing Values/$$ above.

$subhead parent_node_id$$
If $icode%option_name% = parent_node_id%$$
the corresponding $icode option_value$$
is an integer that specifies the parent
$cref/node_id/node_table/node_id/$$.
It is easier (and equivalent) to use $icode parent_node_name$$
instead of $icode parent_node_id$$; see below.

$subhead parent_node_name$$
If $icode%option_name% = parent_node_name%$$
the corresponding $icode option_value$$
is an string that specifies the parent
$cref/node_name/node_table/node_name/$$.

$subhead Name or Id$$
$list number$$
If both $icode parent_node_name$$ and $icode parent_node_id$$ are not null,
the corresponding $cref/node_id/node_table/node_id/$$
and $cref/node_name/node_table/node_name/$$ must agree; see $cref node_table$$.
$lnext
If $icode parent_node_name$$ is null, $icode parent_node_id$$ is not null and
$icode parent_node_id$$ determines the parent node.
$lnext
If $icode parent_node_id$$ is null, $icode parent_node_name$$ is not null and
the $cref node_table$$ is searched to determine
the corresponding $icode parent_node_id$$.
this takes some extra time that it is not expected to be significant.
$lend

$subhead Children$$
The $cref/children/node_table/parent/Children/$$ corresponding to
the parent node.

$subhead Data Subset Table$$
Rows in the $code data$$ table for which the
$cref/node/data_table/node_id/$$
is not the parent node,
or a $cref/descendant/node_table/parent/Descendant/$$ of the parent node,
are not included in the $cref data_subset_table$$ and the
$cref fit_data_subset_table$$.

$subhead Avgint Subset Table$$
Rows in the $code avgint$$ table for which the
$cref/node/data_table/node_id/$$
is not a $cref/descendant/node_table/parent/Descendant/$$
of the parent node,
are not included in the $cref predict_table$$;
see the heading Note for the
$cref/predict table/predict_table/Avgint Subset/Node/$$.

$head Zero Sum Constraints$$

$subhead zero_sum_child_rate$$
If $icode option_name$$ is $code zero_sum_child_rate$$,
the corresponding value is a space separated subset of the
$cref/rate names/rate_table/rate_name/$$.
For each rate in the list, each age, and each time,
the sum of the corresponding
$cref/child rate effect
	/model_variables
	/Random Effects, u
	/Child Rate Effects
/$$
estimates is constrained to be zero.
These are additional constraints in the optimization problem for the
$cref/fixed effects/model_variables/Fixed Effects, theta/$$.
The file $cref/zsum_child_rate.py/user_zsum_child_rate.py/$$
contains an example and test using these constraints.
Note that for each rate in $icode zero_sum_child_rate$$,
$cref/child_nslist_id/rate_table/child_nslist_id/$$ must be null; i.e.,
all of the child must use the same smoothing for this rate.

$subhead zero_sum_mulcov_group$$
If $icode option_name$$ is $code zero_sum_mulcov_group$$,
the corresponding value is a space separated subset of the
$cref/group names/subgroup_table/group_name/$$.
For each group in the list, each age, and each time, and each
$cref/mulcov_id/mulcov_table/mulcov_id/$$,
the sum of the corresponding
$cref/subgroup covariate multiplier
	/model_variables
	/Random Effects, u
	/Subgroup Covariate Multipliers
/$$
estimates is constrained to be zero.
These are additional constraints in the optimization problem for the
$cref/fixed effects/model_variables/Fixed Effects, theta/$$.
The files $cref/zsum_mulcov_rate.py/user_zsum_mulcov_rate.py/$$
and $cref/zsum_mulcov_meas.py/user_zsum_mulcov_meas.py/$$
contain examples and tests using these constraints.

$head Extra Columns$$

$subhead data_extra_columns$$
If $icode option_name$$ is $code data_extra_columns$$,
the corresponding value is space separated list of extra columns,
in the $cref data_table$$.
These columns are not used by $code dismod_at$$ except that
they get displayed in the
$cref/data.csv/db2csv_command/data.csv/data_extra_columns/$$ file.

$subhead avgint_extra_columns$$
If $icode option_name$$ is $code avgint_extra_columns$$,
the corresponding value is space separated list of extra columns,
in the $cref avgint_table$$.
These columns are not used by $code dismod_at$$ except that
they get displayed in the
$cref/predict.csv/db2csv_command/predict.csv/avgint_extra_columns/$$ file.

$head Age Average Grid$$

$subhead ode_step_size$$
If $icode%option_name% = ode_step_size%$$,
the corresponding $icode option_value$$
is a positive floating point number (greater than zero)
that specifies step size used to approximate the solution of the
$cref/ordinary differential equation
	/avg_integrand
	/Ordinary Differential Equation
/$$.
It is also the step size is also used to approximate the integrals in
the definition of the
$cref/average integrands/avg_integrand/Average Integrand, A_i/$$.
The default value for $icode ode_step_size$$ is $code 10.0$$
which is reasonable if all the rates
$icode iota$$, $icode rho$$, $icode chi$$, and $icode omega$$
are all less than $code 0.1$$.

$subhead age_avg_split$$
If $icode%option_name% = age_avg_split%$$,
the corresponding $icode option_value$$ is a space separated set of
age values at which to split the age integration.
This split is both for the computation of the average integrands
and for the solution of the ODE; see
$cref/age average grid/age_avg_table/Age Average Grid/$$.
If this value is null, $icode age_avg_split$$ is the empty set.

$head rate_case$$

$subhead no_ode$$
The $icode rate_case$$ value does not matter for the following integrands:
$code Sincidence$$,
$code remission$$,
$code mtexcess$$,
$code mtother$$,
$code mtwith$$,
$code relrisk$$,
$codei%mulcov_%mulcov_id%$$.
If all of your integrands are in the set above, you can use
$code no_ode$$ as the rate case and avoid having to worry about
constraining certain rates to be positive or zero.

$subhead iota_zero_rho_zero$$
If $icode%option_name% = rate_case%$$ and
$icode%option_value% = iota_zero_rho_zero%$$,
the $cref/parent smoothing/rate_table/parent_smooth_id/$$ for
$icode iota$$ and $icode rho$$ must always have lower and upper limit zero.

$subhead iota_pos_rho_zero$$
If $icode%option_name% = rate_case%$$ and
$icode%option_value% = iota_pos_rho_zero%$$,
the $cref/parent smoothing/rate_table/parent_smooth_id/$$ for
$icode iota$$ must always have lower limit greater than zero and for
$icode rho$$ lower and upper limit zero.

$subhead iota_zero_rho_pos$$
If $icode%option_name% = rate_case%$$ and
$icode%option_value% = iota_zero_rho_pos%$$,
the $cref/parent smoothing/rate_table/parent_smooth_id/$$ for
$icode rho$$ must always have lower limit greater than zero and for
$icode iota$$ lower and upper limit zero.

$subhead iota_pos_rho_pos$$
If $icode%option_name% = rate_case%$$ and
$icode%option_value% = iota_zero_rho_pos%$$,
the $cref/parent smoothing/rate_table/parent_smooth_id/$$ for
$icode iota$$ and $icode rho$$
must always have lower limit greater than zero.

$head Compress Intervals$$
If in the data table,
$cref/age_lower/data_table/age_lower/$$
is equal to $cref/age_upper/data_table/age_upper/$$, and
$cref/time_lower/data_table/time_lower/$$
is equal to $cref/time_upper/data_table/time_upper/$$,
the model for the data does not require integration over an interval.
This option allows one to approximate age and time intervals
by there midpoint and thereby speed up optimization of the model.

$subhead compress_integrand$$
If $icode%option_name% = compress_integrand%$$,
the corresponding $icode option_value$$ is a space separated list of
$cref/integrand_names/integrand_table/integrand_name/$$.
The data table age and time intervals at or below a certain size
are approximated their midpoint values (for these integrands).
The zero size corresponds to no compression.

$subhead compress_age_size$$
If $icode%option_name% = compress_age_size%$$,
the corresponding $icode option_value$$ is a space separated list of
age interval sizes.
The $th i$$ element of this list is the age interval compression size
for the $th i$$ element of the $icode compress_integrand$$ list
and the two lists must have the same number of elements..

$subhead compress_time_size$$
If $icode%option_name% = compress_time_size%$$,
the corresponding $icode option_value$$ is a space separated list of
time interval sizes.
The $th i$$ element of this list is the time interval compression size
for the $th i$$ element of the $icode compress_integrand$$ list
and the two lists must have the same number of elements..


$head Optimize Fixed and Random$$
The following options control the Ipopt optimization
of both the fixed and random effects:

$subhead derivative_test$$
If $icode option_name$$ is
$code derivative_test_fixed$$ ($code derivative_test_random$$),
the corresponding $icode option_value$$
is one of the choices below.
The default value for this option is $code none$$.
(Under normal circumstances, you should use $code none$$
because the other choices will take more execution time
and are for program validation.)
$table
$icode option_value$$
	$cnext Description
	$cnext Restrictions
$rnext
$code none$$
	$cnext do not perform derivative test
	$cnext none
$rnext
$code first-order$$
	$cnext test first derivatives
	$cnext none
$rnext
$code second-order$$
	$cnext test first and second derivatives
	$cnext in fixed case $icode quasi_fixed$$ must be false.
$rnext
$code only-second-order $$
	$cnext only test second derivatives
	$cnext in fixed case $icode quasi_fixed$$ must be false.
$rnext
$code adaptive $$
	$cnext a step size adaptive first order derivative test
	$cnext only for fixed case
$rnext
$code trace-adaptive $$
	$cnext trace adaptive test on standard output
	$cnext only for fixed case
$tend

$subhead max_num_iter$$
If $icode option_name$$ is
$code max_num_iter_fixed$$ ($code max_num_iter_random$$),
the corresponding $icode option_value$$
is an integer greater than or equal $code -1$$ that specifies the
maximum number of iterations.
This is called $code max_iter$$ in the Ipopt documentation.
If Ipopt is run with zero iterations, the solution in the
$cref/fit_var_value/fit_var_table/fit_var_value/$$ column of the fit table
may not correspond to the starting fixed effects; i.e.,
the fixed effects in the $cref start_var_table$$ table; see the heading
$cref/bound_frac_fixed/option_table/Optimize Fixed Only/bound_frac_fixed/$$ below.
In the special case where $icode max_num_iter_fixed$$ is $code -1$$,
the solution in the fit table
is the start_var table value for the fixed effects
and the corresponding optimal value for the random effects.

$subhead print_level$$
If $icode option_name$$ is
$code print_level_fixed$$ ($code print_level_random$$),
the corresponding $icode option_value$$
is a positive integer between 0 and 12 inclusive
that specifies the print level
for optimizing the fixed effects (random effects).
Zero, corresponds to no printing and is the default for $code dismod_at$$
(the value 5 is the normal default for Ipopt).
At least one these two print values
(for the fixed and random effects) should be zero.

$subhead accept_after_max_steps$$
If $icode option_name$$ is
$code accept_after_max_steps_fixed$$ ($code accept_after_max_steps_random$$),
the corresponding $icode option_value$$
is a positive integer specifying the maximum number of
backtracking steps to take before accepting a line search point.

$subhead tolerance$$
If $icode option_name$$ is
$code tolerance_fixed$$ ($code tolerance_random$$),
the corresponding $icode option_value$$
is a positive floating point number
that specifies the desired relative convergence tolerance
for optimizing the fixed effects (random effects).
(This is called $code tol$$ in Ipopt documentation.)
For the fixed effects, this tolerance is relative to the derivatives
of the fixed effects objective at the value of the fixed effects in
$cref scale_var_table$$.

$head Optimize Fixed Only$$
The following options control the
$href%http://www.coin-or.org/Ipopt/documentation/%Ipopt%$$ optimization
of the fixed effects:

$subhead quasi_fixed$$
If $icode option_name$$ is
$code quasi_fixed$$,
the corresponding possible values are
$code true$$ or $code false$$.
If it is $code true$$, a quasi-Newton method is used to optimize
the fixed effects. Otherwise a full Newton method is used.

$subhead bound_frac_fixed$$
If $icode option_name$$ is
$code bound_frac_fixed$$
the corresponding $icode option_value$$
is greater than zero and lese than or equal one half.
It determines the maximum an initial value in the $cref start_var_table$$,
is moved to be interior to the corresponding upper and lower bounds.
If there is an upper or lower bound for a fixed effect,
then both are present in the $cref prior_table$$ and
$codei%
	%bound_frac_fixed% * (%upper% - %lower%)
%$$
is the maximum that $code start_var$$ table value is moved.
This is called $code bound_frac$$ in the Ipopt documentation
and $latex \kappa_2$$ in the corresponding paper.
The default value for this option is $code 1e-2$$.
Note that $icode bound_push$$ in the Ipopt documentation
($latex \kappa_1$$ in the paper) is set to be effectively zero.

$subhead limited_memory_max_history_fixed$$
if $icode option_name$$ is $code limited_memory_max_history_fixed$$,
the corresponding $icode option_value$$ is
the number of most recent iterations that are taken into account
for the limited-memory quasi-Newton approximation.

$head Optimize Random Only$$
The following options control the Ipopt optimization
of the random effects:

$subhead method_random$$
If $icode option_name$$ is $code method_random$$,
$icode option_value$$ is either $code ipopt_solve$$ or $code ipopt_random$$.
The method $code ipopt_solve$$ is part of the standard CppAD package.
The method $code ipopt_random$$ is a special purpose interface to ipopt
designed to optimizer the random effects for the cppad_mixed package
(which should be faster).

$subhead bound_random$$
If $icode option_name$$ is $code bound_random$$,
plus and minus the corresponding $icode option_value$$
are the bounds for each of the
$cref/random effects/model_variables/Random Effects, u/$$.
If $icode bound_random$$ is $code null$$,
plus and minus infinity is used for the bounds; see
$cref/bounds that are null/database/Bounds That are Null/$$.
This bound does not apply for random effects that have their upper
and lower limits equal; see
$cref/constant child value priors/rate_table/Child Value Priors/Constant/$$.

$list number$$
The theory for
$cref/cppad_mixed/install_unix/Special Requirements/cppad_mixed/$$
does not include bounds for the random effects.

$lnext
The bound $icode bound_random$$ does apply to
random effects corresponding to
$cref/constant child value priors
	/rate_table
	/Child Value Priors
	/Constant
/$$.
The theory for fitting with constant random effects is just fine
because they are treated a parameters, and not random effects,
in the Laplace approximation.

$lnext
The special case where $icode bound_random$$ is zero,
fits as if there were no random effects except for the fact that
the resulting optimal value can be used as a starting point for fitting
with random effects; see
$cref/set start_var fit_var/set_command/table_out/start_var/$$ and
$cref/fit_fixed_both.py/user_fit_fixed_both.py/$$.

$lnext
Fitting with no random effects corresponds to
a $code null$$ value for all the
$cref/child_smooth_id/rate_table/child_smooth_id/$$ and
$cref/child_nslist_id/rate_table/child_nslist_id/$$ in the rate table.
This is different from $icode bound_random$$ zero which includes
the random effects (with value zero) in the
$cref model_variables$$.

$lnext
Note that the theory used to compute
$cref/asymptotic/sample_command/asymptotic/$$ samples of the fixed
effects, does not take $icode bound_random$$ into account.
On the other hand; the samples of the random effects are withing the
limits specified by $icode bound_random$$.
$lend

$head meas_noise_effect$$
If $icode%option_name% = meas_noise_effect%$$,
$icode option_value$$ determines how the
$cref/average noise effect
	/data_like
	/Measurement Noise Covariates
	/Average Noise Effect, E_i(theta)
/$$
changes the measurement noise.
The possible $icode option_value$$ are:
$cref/add_std_scale_all
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_std_scale_all
/$$,
$cref/add_std_scale_none
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_std_scale_none
/$$,
$cref/add_std_scale_log
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_std_scale_log
/$$,
$cref/add_var_scale_all
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_var_scale_all
/$$,
$cref/add_var_scale_none
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_var_scale_none
/$$,
$cref/add_var_scale_log
	/data_like
	/Adjusted Standard Deviation, delta_i(theta)
	/add_var_scale_log
/$$.

$head warn_on_stderr$$
If $icode option_name$$ is
$code warn_on_stderr$$,
the corresponding possible values are
$code true$$ or $code false$$.
If the value is true,
warning messages are written to standard error.
In either case, these messages are recorded in the $cref log_table$$.
Error messages are always written to standard error
and recorded in the log table.

$head minimum_meas_cv$$
This option is no longer available because it is now
integrand specific; see
$cref/minimum_meas_cv/integrand_table/minimum_meas_cv/$$.

$head hold_out_integrand$$
If $icode%option_name% = hold_out_integrand%$$,
the corresponding $icode option_value$$ is a space separated list of
$cref/integrand_names/integrand_table/integrand_name/$$.
(The integrand names cannot begin with $code mulcov_$$.)
All the data for the corresponding integrands is held out during any fit.
See the fit command $cref/hold_out/fit_command/data_subset_table/hold_out/$$
documentation.

$head random_seed$$
This is a non-negative integer used to seed the random number
generator that is used by $code dismod_at$$.
If this value is zero, the clock is used to seed the random number generator;
see $cref/random_seed/log_table/message_type/random_seed/$$ in the log table.

$children%
	omh/table/option_default.omh%
	example/table/option_table.py
%$$
$head Example$$
The files $cref option_table.py$$
contains an example $code option$$ table.

$end
