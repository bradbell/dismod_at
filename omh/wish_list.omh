$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-17 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin wish_list$$
$spell
	Dismod
	eigen
	optimizer
	covariate
	covariates
	cppad
	CppAD
	checkpointing
	pos
	Jacobian
$$

$section Dismod_at Wish List$$

$head Fitting Only Random Effect$$
Extend the $cref fit_command$$ to allow for fitting only
the random effects at the current value for the fixed effects.

$head Eta$$
Perhaps the value of $cref/eta/integrand_table/eta/$$ should be
specified in the $cref data_table$$ so it can be different for each
measurement. For example, it could be .01 times the corresponding
$cref/meas_value/data_table/meas_value/$$.

$head Simulating Data$$
The random effects currently use the value in the $cref truth_var_table$$
during the $cref simulate_command$$.
Perhaps it would be good to have an option whereby the priors for the
random effects are used to simulate different value for each sample.

$head Large Excess Mortality$$
The case where $icode rate_case$$ is
$cref/iota_pos_rho_zero/option_table/rate_case/iota_pos_rho_zero/$$
corresponds to
$cref/case three/eigen_ode2/Method/Case Three/$$ in the ODE solver.
If excess mortality $latex \chi$$ is unreasonably large,
this can result in exponential overflow and infinity or nan.
It is possible to redo the calculations in case three to properly
handle this condition.

$head Sampling Random Effects$$
It is not expected that the
$cref/asymptotic/sample_command/method/asymptotic/$$ statistics for the
random effects will always be accurate
(due to insufficient data for individual random effects).
One could use multiple asymptotic random effects samples as a proposal
density for a Metropolis algorithm to get better sampling of these variables.

$head Conditionals in ODE$$
It is now possible to use conditional expressions in the ODE solution
(CppAD has improved so that this will now work properly with two levels
of AD and revere mode).
This change would remove the need for the
$cref/rate_case/option_table/rate_case/$$ option.
Note that this will also work with checkpointing.

$head Checkpointing ODE$$
A new option enables the cppad_mixed user
(in this case dismod_at) to define a special way to compute
the Hessian w.r.t the random effects; see
$href%
http://moby.ihme.washington.edu/bradbell/cppad_mixed/ran_likelihood_hes.htm
%ran_likelihood_hes
%$$
It should greatly reduce memory if we combine this with
CppAD checkpointing of an ODE that has been
extended to include derivatives with respect to parameters; see
$href%http://www.coin-or.org/CppAD/Doc/checkpoint_extended_ode.cpp.htm
	%checkpoint_extended_ode
%$$.

$head Reduce Number of ODE Solutions$$
Currently we compute a separate solution of the ODE for each data point.
We could solve the differential equation once for each set of data
points that correspond to the same child (or to the parent)
and have the same covariate values for covariates that are used with
$cref/rate_value/mulcov_table/mulcov_type/rate_value/$$
covariate multipliers.

$head Random Starting Point$$
Have an option to start at a random point from the prior for the fixed effects
(instead of the mean of the fixed effects).
This would better detect local minima and represent solution uncertainty.

$head Tracing Optimization$$
Add options to specify the file name for the optimizer trace
at both the fixed and random effects levels.

$head Windows Install$$
Make and test a set of Windows install instructions for $code dismod_at$$.

$end
