$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-15 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin wish_list$$
$spell
	Dismod
	eigen
	optimizer
	Cholmod
	Cholesky
	doesn
	covariate
	covariates
$$

$section Dismod_at Wish List$$

$head Reduce Number of ODE Solutions$$
Currently we compute a separate solution of the ODE for each data point.
We could solve the differential equation once for each set of data
points that correspond to the same child (or to the parent)
and have the same covariate values for covariates that are used with
$cref/rate_value/mulcov_table/mulcov_type/rate_value/$$
covariate multipliers.

$head Caching Sparse Cholesky$$
Currently, the sparse Cholesky factorization of the Hessian w.r.t. the
random effects is being calculated in multiple places, without any
change in the Hessian. We could improve speed by only re-calculating it
when the fixed or random effects change. In addition, the analysis of
the sparsity pattern could be done once, instead of every time the Hessian
is calculated (since the sparsity pattern doesn't not change).

$head Cholmod$$
The speed and memory usage may be improved if we use the
$href%http://faculty.cse.tamu.edu/davis/SuiteSparse/%SuiteSparse%$$
cholmod routines instead of the eigen package
$href%http://eigen.tuxfamily.org/dox-devel/group__SparseCholesky__Module.html
	%sparse choleksy
%$$.
This cannot be done for AD records but that is only necessary
for the full Newton method which seems to consume to much memory; see
$cref/quasi_fixed/option_table/Optimizer/quasi_fixed/$$.

$head Constrain Omega$$
Right now we are fitting $latex \omega(a, t)$$ while $code dismod_ode$$
constrains it to match the data.
We could do the same, and in addition, have the random
effect constraints match the data for each child.

$head Sum of Random Effects$$
It would be nice to add a prior on the sum of the random effects at each
age-time grid point.
This feature is in $code dismod_at$$ and it made that program
much more robust.
Preliminary testing showed that doing this directly destroys the
sparsity of the Hessian w.r.t. the random effects (and hence makes the
problem consume much more memory and time).
I think this can be done without changing
the Hessian w.r.t. the random effects.

$head Widowing Data and Analysis$$
It would be nice to have an option to restrict the data
and analysis to a rectangular subset.
Currently one can do this by removing some of the input data
and changing the $cref/age/age_table/$$ and $cref/time/time_table/$$.

$head Continue Optimization$$
Have a command that copies the final fit results to the starting
point so that optimization can be continued.
Currently one can do this directly by replacing the variable values in
$cref start_var_table$$ using the variable values in $cref fit_var_table$$.

$head Optimizing Random Effects$$
It may save significant execution time and memory to write a special
purpose optimizer for the random effects.
We already have a recording for the Hessian w.r.t. the random effects,
it is wasteful use an optimizer that does not take advantage of that Hessian.

$head Random Starting Point$$
Have an option to start at a random point from the prior for the fixed effects
(instead of the mean of the fixed effects).
This would better detect local minima and represent solution uncertainty.

$head Tracing Optimization$$
Add options to specify the file name for the optimizer trace
at both the fixed and random effects levels.

$head Windows Install$$
Make and test a set of Windows install instructions for $code dismod_at$$.

$end
