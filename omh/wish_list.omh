$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-17 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin wish_list$$
$spell
	Dismod
	eigen
	optimizer
	covariate
	covariates
	cppad
	CppAD
	checkpointing
	pos
	Jacobian
	std
	avgint
	dage
	dtime
	var
	csv
$$

$section Dismod_at Wish List$$

$head db2csv$$
We should set up more automated testing of
$cref db2csv_command$$.
It has very little and this has lead to bugs that the user sees.

$head parent_node$$
It would be easier for the user if
$cref/parent_node_id/option_table/parent_node_id/$$,
in the option table,
were replaced by $icode parent_node_name$$.

$head Simulated Data$$
It seems to me that
$cref/meas_std/simulate_table/meas_std/$$ from the simulate table should
be used when ever one is fitting simulated data.
It is not clear to me, looking at the source code and documentation, that this
is clearly the case. This needs to be checked and fixed if in error.

$head Lagrange Multipliers$$
Change the Lagrange multipliers
$cref/lagrange_dage/fit_var_table/lagrange_dage/$$ (dtime) in the
fit_var table to be null when there is no corresponding age (time) different; i.e.,
at the maximum age (time).

$head ODE Solution$$

$subhead Step Size$$
Currently there is a single
$cref/ode_step_size/option_table/ode_step_size/$$ that is used
for all ages and times.
In many models, the older ages have much larger mortality rates.
Perhaps it would be good to have a step size that varied with age.

$subhead Large Excess Mortality$$
If case where $icode rate_case$$ is
$cref/iota_pos_rho_zero/option_table/rate_case/iota_pos_rho_zero/$$
corresponds to
$cref/case three/eigen_ode2/Method/Case Three/$$ in the ODE solver.
If excess mortality $latex \chi$$ is unreasonably large,
this can result in exponential overflow and infinity or nan.
It is possible to redo the calculations in case three to properly
handle this condition.

$subhead Conditionals$$
It is now possible to use conditional expressions in the ODE solution
(CppAD this will now work properly these conditionals
and two levels of AD and revere mode).
This change would remove the need for the
$cref/rate_case/option_table/rate_case/$$ option.
Note that this will also work with checkpointing.

$subhead Checkpointing$$
It should greatly reduce memory if we use
CppAD checkpointing of an ODE that has been
extended to include derivatives with respect to parameters; see
$href%http://www.coin-or.org/CppAD/Doc/checkpoint_extended_ode.cpp.htm
	%checkpoint_extended_ode
%$$.

$subhead Reduce Number of ODE Solutions$$
Currently we compute a separate solution of the ODE for each data point.
We could solve the differential equation once for each set of data
points that correspond to the same child (or to the parent)
and have the same covariate values for covariates that are used with
$cref/rate_value/mulcov_table/mulcov_type/rate_value/$$
covariate multipliers.


$head Documentation$$

$subhead Real World Example$$
It would be good to include a real world example.
Since this is an open source program, we would need a data set
that could be made distributed freely without any restriction on its use.

$subhead User Examples$$
Many of the $cref user$$ examples were written a long ago
before certain options were available. It would improve the documentation
to go over the user examples and make them more of a how do to certain
things.

$subhead Model Documentation$$
There are some subtitle issues in the documentation that perhaps should
be made easier to read. For example,
consider the case where the value and difference priors are
Log-Gaussian or Log-Laplace.
In the function
$cref/V_j/fixed_value/V_j/$$,
the standard deviation
$cref/delta_j/fixed_value/delta_j/$$ has the
same units as the corresponding
$cref/std/prior_table/std/$$ in the $code prior_table$$.
In the function
$cref/A^theta/fixed_diff/Age Differences/A^theta/$$,
the standard deviation
$cref/delta_j/fixed_diff/delta_i,j,k/$$ is a coefficient of variation
for the log of the corresponding values.
This can be seen by noting the difference in the corresponding
weighted residual function; see
Log-Gaussian and Log-Laplace weighted residual functions
$cref/R
	/statistic
	/Weighted Residual Function, R
	/Log-Gaussian and Log-Laplace
/$$.


$head Simulating Data$$
The random effects currently use the value in the $cref truth_var_table$$
during the $cref simulate_command$$.
Perhaps it would be good to have an option whereby the priors for the
random effects are used to simulate different value for each sample.

$head Sampling Random Effects$$
It is not expected that the
$cref/asymptotic/sample_command/method/asymptotic/$$ statistics for the
random effects will always be accurate
(due to insufficient data for individual random effects).
One could use multiple asymptotic random effects samples as a proposal
density for a Metropolis algorithm to get better sampling of these variables.

$head Special Random Effects Hessian$$
A new option enables the cppad_mixed user
(in this case dismod_at) to define a special way to compute
the Hessian w.r.t the random effects; see
$href%
http://moby.ihme.washington.edu/bradbell/cppad_mixed/ran_likelihood_hes.htm
%ran_likelihood_hes
%$$.

$head Random Starting Point$$
Have an option to start at a random point from the prior for the fixed effects
(instead of the mean of the fixed effects).
This would better detect local minima and represent solution uncertainty.

$head Tracing Optimization$$
Add options to specify the file name for the optimizer trace
at both the fixed and random effects levels.

$head Windows Install$$
Make and test a set of Windows install instructions for $code dismod_at$$.

$end
