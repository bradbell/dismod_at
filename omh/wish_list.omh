$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-18 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin wish_list$$
$spell
	Dismod
	eigen
	optimizer
	cppad
	CppAD
	checkpointing
	pos
	Jacobian
	std
	avgint
	dage
	dtime
	var
	cv
	integrands
	nans
	csv
	mtother
	Covariate
$$

$section Dismod_at Wish List$$

$head csv2db Command$$
The following is a wish list for extending the csv2db command.
This command is only an $cref/example/csv2db_command/Example/$$
intended to help user's get started using dismod_at.

$subhead Covariate Multipliers$$
Extend $cref csv2db_command$$ to include
$cref/rate covariate multipliers
	/avg_integrand
	/Rate Functions
	/Rate Covariate Multiplier, alpha_jk
/$$ and
$cref/measurement value covariate multipliers
	/avg_integrand
	/Measurement Value Covariates
	/Multiplier, beta_j
/$$.

$subhead Random Effects$$
Extend $cref csv2db_command$$ to include
$cref/child rate effects
	/avg_integrand
	/Rate Functions
	/Child Rate Effect, u_ik
/$$.

$subhead Grids$$
Extend $cref csv2db_command$$ to allow the user to specify
different grids for different model variables.
Currently all the variables use that same
$cref/grid/csv2db_command/mtother/Rectangular Grid/$$ as the
mtother data.

$subhead Value Priors$$
Extend $cref csv2db_command$$ to define a specific
$cref/prior/prior_table/$$ for the value of each
$cref/model variables/model_variables/$$.
For example, this would enable one to specify limits, or a specific value,
for a model variable.

$subhead Difference Priors$$
Extend $cref csv2db_command$$ to define a specific
$cref/prior/prior_table/$$ for the differences of the
$cref/model variables/model_variables/$$; i.e.,
the amount of smoothing.

$subhead Sample$$
Extend $cref csv2db_command$$ to define the
$cref sample_table$$.
This would enable csv2db to set up
$cref/predictions/predict_command/$$
using model variables computed by another program.



$head ODE Solution$$

$subhead Prevalence ODE$$
If $latex S$$ and $latex C$$ satisfy the dismod_at
$cref/ordinary differential equation
	/avg_integrand/Ordinary Differential Equation
/$$ then prevalence $latex P = C / (S + C)$$ satisfies
$latex \[
	P' = \iota  [ 1 - P ] - \rho P - \chi  [ 1 - P] P
\] $$
We can therefore solve for prevalence without other cause mortality
$latex \omega$$ or all cause mortality $latex \omega + \chi P$$.
One thing to note is that the ODE for $latex P$$ is non-linear,
while the ODE is $latex (S, C)$$ is linear.
If we also know all cause mortality $latex \alpha = \omega + \chi P$$,
we can compute $latex \omega = \alpha - \chi P$$.
Furthermore
$latex \[
	(S + C)' = - \alpha (S + C)
\] $$
So we can also compute $latex S + C$$,
$latex C = P (S + C)$$,
and $latex S = 1 - C$$.
This formulation of the ODE also have the advantage that it is stable
even as $latex S + C \rightarrow 0$$; i.e, it will not get the
associated nans cause by division of zero by zero.
Perhaps we should provide this alternative method for solving the ODE.

$subhead Step Size$$
Currently there is a single
$cref/ode_step_size/option_table/ode_step_size/$$ that is used
for all ages and times.
In many models, the older ages have much larger mortality rates.
Perhaps it would be good to have a step size that varied with age.

$subhead Large Excess Mortality$$
If case where $icode rate_case$$ is
$cref/iota_pos_rho_zero/option_table/rate_case/iota_pos_rho_zero/$$
corresponds to
$cref/case three/eigen_ode2/Method/Case Three/$$ in the ODE solver.
If excess mortality $latex \chi$$ is unreasonably large,
this can result in exponential overflow and infinity or nan.
It is possible to redo the calculations in case three to properly
handle this condition.

$subhead Conditionals$$
It is now possible to use conditional expressions in the ODE solution
(CppAD this will now work properly these conditionals
and two levels of AD and revere mode).
This change would remove the need for the
$cref/rate_case/option_table/rate_case/$$ option.
Note that this will also work with checkpointing.

$subhead Checkpointing$$
It should greatly reduce memory if we use
CppAD checkpointing of an ODE that has been
extended to include derivatives with respect to parameters; see
$href%http://www.coin-or.org/CppAD/Doc/checkpoint_extended_ode.cpp.htm
	%checkpoint_extended_ode
%$$.

$head meas_std$$
Currently the data table
$cref/meas_std/data_table/meas_std/$$
must be specified (except for uniform density).
Perhaps we should allow for this standard deviation to be
$code null$$ in the case when the corresponding
$cref/meas_value/data_table/meas_value/$$ must not be zero
and the $cref/minimum_meas_cv/integrand_table/minimum_meas_cv/$$
would be used to determine the measurement accuracy.


$head Command Diagrams$$
It would be good to give a data flow diagram for each command
that corresponds to its inputs and outputs; i.e., to diagram
the information under the heading
$cref/inputs and outputs by command/data_flow/Input and Output by Command/$$.

$head Lagrange Multipliers$$
Change the Lagrange multipliers
$cref/lagrange_dage/fit_var_table/lagrange_dage/$$ (dtime) in the
fit_var table to be null when there is no corresponding age (time) different; i.e.,
at the maximum age (time).


$head Documentation$$

$subhead Real World Example$$
It would be good to include a real world example.
Since this is an open source program, we would need a data set
that could be made distributed freely without any restriction on its use.

$subhead User Examples$$
Many of the $cref user$$ examples were written a long ago
before certain options were available. It would improve the documentation
to go over the user examples and make them more of a how do to certain
things.

$subhead Model Documentation$$
There are some subtitle issues in the documentation that perhaps should
be made easier to read. For example,
consider the case where the value and difference priors are
Log-Gaussian or Log-Laplace.
In the function
$cref/V_j/fixed_value/V_j/$$,
the standard deviation
$cref/delta_j/fixed_value/delta_j/$$ has the
same units as the corresponding
$cref/std/prior_table/std/$$ in the $code prior_table$$.
In the function
$cref/A^theta/fixed_diff/Age Differences/A^theta/$$,
the standard deviation
$cref/delta_j/fixed_diff/delta_i,j,k/$$ is a coefficient of variation
for the log of the corresponding values.
This can be seen by noting the difference in the corresponding
weighted residual function; see
Log-Gaussian and Log-Laplace weighted residual functions
$cref/R
	/statistic
	/Weighted Residual Function, R
	/Log-Gaussian, Log-Laplace, Log-Student's-t
/$$.


$head Sampling Random Effects$$
It is not expected that the
$cref/asymptotic/sample_command/method/asymptotic/$$ statistics for the
random effects will always be accurate
(due to insufficient data for individual random effects).
One could use multiple asymptotic random effects samples as a proposal
density for a Metropolis algorithm to get better sampling of these variables.

$head Special Random Effects Hessian$$
A new option enables the cppad_mixed user
(in this case dismod_at) to define a special way to compute
the Hessian w.r.t the random effects; see
$href%
https://bradbell.github.io/cppad_mixed/doc/ran_likelihood_hes.htm
%ran_likelihood_hes
%$$.

$head Random Starting Point$$
Have an option to start at a random point from the prior for the fixed effects
(instead of the mean of the fixed effects).
This would better detect local minima and represent solution uncertainty.

$head Tracing Optimization$$
Add options to specify the file name for the optimizer trace
at both the fixed and random effects levels.

$head Windows Install$$
Make and test a set of Windows install instructions for $code dismod_at$$.

$end
