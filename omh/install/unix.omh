$Id:$
-----------------------------------------------------------------------------
dismod_at: Estimating Disease Rates as Functions of Age and Time
          Copyright (C) 2014-15 University of Washington
             (Bradley M. Bell bradbell@uw.edu)

This program is distributed under the terms of the
	     GNU Affero General Public License version 3.0 or later
see http://www.gnu.org/licenses/agpl.txt
-----------------------------------------------------------------------------
$begin install_unix$$
$dollar @$$
$spell
	tgz
	pkgconfig
	cppad
	make make
	dismod
	cmake
	CppAD
	Ipopt
	config
	eigen
	tarball
	xzf
	gsl
	sqlite
	devel
$$

$section Installing dismod_at in Unix$$

$head Download$$
Download the tarball $href%dismod_at-20150710.tgz%$$
and then extract it using the command
$codei%
	tar -xzf dismod_at-20150710.tgz
%$$

$head System Requirements$$
The following programs are required by dismod_at
and should have standard system installs:

$subhead C++ Compiler$$
The $code dismod_at$$ program can be compiled by any C++98 compliant compiler;
e.g., $code g++$$.
(Note that a C++11 compiler would be better.)

$subhead Fortran Compiler$$
A fortran compiler is required by $code ipopt$$ which in turn
is required by $code dismod_at$$.

$subhead cmake$$
$href%http://www.cmake.org/%cmake%$$,
a program that installs other programs.

$subhead pkg-config$$
The $href%http://www.freedesktop.org/wiki/Software/pkg-config/%pkg-config%$$
program must be installed.

$subhead python3$$
The $href%http://www.python.org/%python3%$$,
programming language.

$subhead sqlite$$
The $href%href%http://sqlite.org/%sqlite3%$$ version
of SQLite.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install $code sqlite-devel$$.

$subhead gsl$$
$href%http://gnuwin32.sourceforge.net/packages/gsl.htm%gsl%$$,
the gnu scientific library.
Note that the development headers are required; e.g.,
on Fedora or Red-Hat one needs to install $code gsl-devel$$.

$head Special Requirements$$
The following programs are required by dismod_at
and may not have standard system installs:

$subhead eigen$$
The $href%http://eigen.tuxfamily.org%eigen%$$
linear algebra package.
The commands
$codei%
	cd dismod_at-20150710
	bin/install_eigen.sh
%$$
can be used for this purpose.
If necessary, first adjust the setting
of the following variables in that script.
$code
$verbatim%bin/install_eigen.sh%5%# BEGIN USER_SETTINGS%# END USER_SETTINGS%$$
$$

$subhead Ipopt$$
The $href%https://projects.coin-or.org/Ipopt%Ipopt%$$
optimization package.
The commands
$codei%
	cd dismod_at-20150710
	bin/install_ipopt.sh
%$$
can be used for this purpose.
If necessary, first adjust the setting
of the following variables in that script.
$code
$verbatim%bin/install_ipopt.sh%5%# BEGIN USER_SETTINGS%# END USER_SETTINGS%$$
$$

$subhead CppAD$$
The $href%http://www.coin-or.org/CppAD/%cppad%$$
C++ algorithmic differentiation package.
The commands
$codei%
	cd dismod_at-20150710
	bin/install_cppad.sh
%$$
can be used for this purpose.
If necessary, first adjust the setting
of the following variables in that script.
$code
$verbatim%bin/install_cppad.sh%5%# BEGIN USER_SETTINGS%# END USER_SETTINGS%$$
$$

$head dismod_at$$
The steps above should only need to be executed once, not for
each new version of $code dismod_at$$
(unless the $cref whats_new_2015$$ release notes say otherwise).
The steps below will need to be executed each time you install
a new version of $code dismod_at$$:

$subhead Setup$$
The following is a list of the cmake settings in $code bin/run_cmake.sh$$.
You should change these settings so they correspond to your machine:
$code
$verbatim%bin/run_cmake.sh%5%# BEGIN USER_SETTINGS%# END USER_SETTINGS%$$
$$

$subhead Run Cmake$$
After changing $code bin/run_cmake.sh$$ to work for your system,
execute the following command:
$codep
	bin/run_cmake.sh
$$
It is possible that, when running the $code bin/run_cmake.sh$$ command,
you will get the message $code package 'ipopt' not found$$.
In this case, you need to execute the following command
$codei%
	export PKG_CONFIG_PATH="@PKG_CONFIG_PATH:%ipopt_prefix%/%lib%/pkgconfig"
%$$
where $icode ipopt_prefix$$ is the prefix for the Ipopt install and
$icode lib$$ is $code lib$$ or $code lib64$$ depending on which directory
exists.
In the default case this would be
$codei%
export PKG_CONFIG_PATH="@PKG_CONFIG_PATH:@HOME/prefix/dismod_at/lib64/pkgconfig"
%$$

$subhead Test$$
The following command is optional and will,
build the dismod_at library and executable if necessary,
build the examples and tests,
and run the examples and tests:
$codep
	cd build
	make check
$$

$subhead Install$$
The following command will,
build the dismod_at library and executable if necessary,
and install dismod_at:
$codep
	cd build
	make install
$$

$subhead Path Setting$$
After the install you will be able to execute the command
$codei%
	dismod_at
%$$
If you get the error $code dismod_at: command not found$$,
can add the binary install directory to you path
$codei%
	PATH="@PATH:%dismod_at_prefix%/bin"
%$$
In the default case this would be
$codei%
	PATH="@PATH:@HOME/prefix/dismod_at/bin"
%$$


$children%example/get_started/get_started.omh%$$
$head Example$$
The section $cref get_started$$ contains a list of examples and tests
of $code dismod_at$$. These tests are run as part of the $code make check$$
command above.

$end
